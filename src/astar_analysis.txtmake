Flat profile:

Each sample counts as 0.01 seconds.
 no time accumulated

  %   cumulative   self              self     total           
 time   seconds   seconds    calls  Ts/call  Ts/call  name    
  0.00      0.00     0.00   645458     0.00     0.00  maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&)
  0.00      0.00     0.00   637602     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator()
  0.00      0.00     0.00   329621     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>)
  0.00      0.00     0.00   320303     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&)
  0.00      0.00     0.00   319511     0.00     0.00  std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const
  0.00      0.00     0.00   248377     0.00     0.00  std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const
  0.00      0.00     0.00   248377     0.00     0.00  std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
  0.00      0.00     0.00   248356     0.00     0.00  std::hash<maze::Cell*>::operator()(maze::Cell* const&) const
  0.00      0.00     0.00   248356     0.00     0.00  std::hash<unsigned long>::operator()(unsigned long) const
  0.00      0.00     0.00   248356     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true> const&)
  0.00      0.00     0.00   248212     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
  0.00      0.00     0.00   243062     0.00     0.00  operator new(unsigned long, void*)
  0.00      0.00     0.00   240892     0.00     0.00  void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&)
  0.00      0.00     0.00   239403     0.00     0.00  std::__detail::_Hash_node_base::_Hash_node_base()
  0.00      0.00     0.00   164323     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::empty() const
  0.00      0.00     0.00   163320     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
  0.00      0.00     0.00   163314     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
  0.00      0.00     0.00   162584     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const
  0.00      0.00     0.00   162286     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
  0.00      0.00     0.00   162286     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&)
  0.00      0.00     0.00   161650     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const
  0.00      0.00     0.00   160933     0.00     0.00  maze::Cell* const& std::__detail::_Identity::operator()<maze::Cell* const&>(maze::Cell* const&) const
  0.00      0.00     0.00   160138     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const
  0.00      0.00     0.00   159756     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const
  0.00      0.00     0.00   158801     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::deallocate(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long)
  0.00      0.00     0.00   158801     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::destroy<std::__detail::_Hash_node<maze::Cell*, false> >(std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00   158801     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocate(unsigned long, void const*)
  0.00      0.00     0.00   158801     0.00     0.00  _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_
  0.00      0.00     0.00   158801     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::max_size() const
  0.00      0.00     0.00   158801     0.00     0.00  std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&)
  0.00      0.00     0.00   158801     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00   158801     0.00     0.00  std::__detail::_Hash_node<maze::Cell*, false>::_Hash_node<maze::Cell* const&>(maze::Cell* const&)
  0.00      0.00     0.00   158006     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<maze::Cell*, false>*, std::__detail::_Hash_node<maze::Cell*, false> const*) const
  0.00      0.00     0.00    88475     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&)
  0.00      0.00     0.00    84460     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&)
  0.00      0.00     0.00    82936     0.00     0.00  void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&)
  0.00      0.00     0.00    81391     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
  0.00      0.00     0.00    80203     0.00     0.00  void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
  0.00      0.00     0.00    80199     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
  0.00      0.00     0.00    79401     0.00     0.00  decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int>&>(std::pair<maze::Cell* const, unsigned int>&) const
  0.00      0.00     0.00    79401     0.00     0.00  void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
  0.00      0.00     0.00    15076     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&)
  0.00      0.00     0.00     8177     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00      0.00     0.00     7526     0.00     0.00  std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&)
  0.00      0.00     0.00     6571     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin()
  0.00      0.00     0.00     6351     0.00     0.00  std::__detail::_Node_iterator_base<maze::Cell*, false>::_Node_iterator_base(std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00     6036     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway* const* const&)
  0.00      0.00     0.00     6036     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const
  0.00      0.00     0.00     5613     0.00     0.00  maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&)
  0.00      0.00     0.00     5034     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const
  0.00      0.00     0.00     4923     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::size() const
  0.00      0.00     0.00     4780     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const
  0.00      0.00     0.00     4672     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&)
  0.00      0.00     0.00     4461     0.00     0.00  std::equal_to<maze::Cell*>::operator()(maze::Cell* const&, maze::Cell* const&) const
  0.00      0.00     0.00     4461     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true> const&)
  0.00      0.00     0.00     4367     0.00     0.00  std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00     3819     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::operator[](unsigned long)
  0.00      0.00     0.00     3588     0.00     0.00  std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
  0.00      0.00     0.00     3588     0.00     0.00  std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&)
  0.00      0.00     0.00     3588     0.00     0.00  std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
  0.00      0.00     0.00     3562     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() const
  0.00      0.00     0.00     3499     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator->() const
  0.00      0.00     0.00     3230     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator()
  0.00      0.00     0.00     3230     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator()
  0.00      0.00     0.00     3230     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::~allocator()
  0.00      0.00     0.00     3182     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00     3182     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const
  0.00      0.00     0.00     3176     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00     3176     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const
  0.00      0.00     0.00     3154     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00      0.00     0.00     3099     0.00     0.00  maze::Maze::get_cell(unsigned int, unsigned int)
  0.00      0.00     0.00     3040     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::operator[](unsigned long)
  0.00      0.00     0.00     3018     0.00     0.00  bool __gnu_cxx::operator==<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&)
  0.00      0.00     0.00     3018     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() const
  0.00      0.00     0.00     3018     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() const
  0.00      0.00     0.00     3018     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const
  0.00      0.00     0.00     3017     0.00     0.00  maze::Cell::has_pathway()
  0.00      0.00     0.00     2796     0.00     0.00  void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>)
  0.00      0.00     0.00     2795     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell*>::max_size() const
  0.00      0.00     0.00     2791     0.00     0.00  std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&)
  0.00      0.00     0.00     2789     0.00     0.00  std::_Iter_base<maze::Cell**, false>::_S_base(maze::Cell**)
  0.00      0.00     0.00     2789     0.00     0.00  std::_Niter_base<maze::Cell**>::iterator_type std::__niter_base<maze::Cell**>(maze::Cell**)
  0.00      0.00     0.00     2783     0.00     0.00  maze::Cell::get_x_position()
  0.00      0.00     0.00     2779     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00     2761     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator()
  0.00      0.00     0.00     2475     0.00     0.00  __gnu_cxx::new_allocator<maze::Pathway*>::max_size() const
  0.00      0.00     0.00     2475     0.00     0.00  std::_Iter_base<maze::Pathway**, false>::_S_base(maze::Pathway**)
  0.00      0.00     0.00     2475     0.00     0.00  std::_Niter_base<maze::Pathway**>::iterator_type std::__niter_base<maze::Pathway**>(maze::Pathway**)
  0.00      0.00     0.00     2403     0.00     0.00  void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
  0.00      0.00     0.00     2398     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<maze::Cell*, false> >(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&)
  0.00      0.00     0.00     2392     0.00     0.00  std::_Head_base<0ul, maze::Cell* const&, false>::_M_head(std::_Head_base<0ul, maze::Cell* const&, false>&)
  0.00      0.00     0.00     2392     0.00     0.00  std::_Head_base<0ul, maze::Cell* const&, false>::_Head_base(maze::Cell* const&)
  0.00      0.00     0.00     2392     0.00     0.00  std::_Tuple_impl<0ul, maze::Cell* const&>::_M_head(std::_Tuple_impl<0ul, maze::Cell* const&>&)
  0.00      0.00     0.00     2390     0.00     0.00  bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&)
  0.00      0.00     0.00     2385     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end()
  0.00      0.00     0.00     2371     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const
  0.00      0.00     0.00     2350     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator--()
  0.00      0.00     0.00     2344     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
  0.00      0.00     0.00     2154     0.00     0.00  maze::Cell*& std::__detail::_Identity::operator()<maze::Cell*&>(maze::Cell*&) const
  0.00      0.00     0.00     2154     0.00     0.00  maze::Cell*& std::forward<maze::Cell*&>(std::remove_reference<maze::Cell*&>::type&)
  0.00      0.00     0.00     2148     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const
  0.00      0.00     0.00     2148     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const
  0.00      0.00     0.00     2148     0.00     0.00  std::__detail::_Equal_helper<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00     2053     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator()
  0.00      0.00     0.00     2015     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long)
  0.00      0.00     0.00     2014     0.00     0.00  std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&)
  0.00      0.00     0.00     1991     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_state() const
  0.00      0.00     0.00     1990     0.00     0.00  maze::Cell::get_y_position()
  0.00      0.00     0.00     1990     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator++()
  0.00      0.00     0.00     1990     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator*() const
  0.00      0.00     0.00     1984     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&)
  0.00      0.00     0.00     1984     0.00     0.00  std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::find(maze::Cell* const&)
  0.00      0.00     0.00     1984     0.00     0.00  std::__detail::_Node_const_iterator<maze::Cell*, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<maze::Cell*, true, false> const&)
  0.00      0.00     0.00     1947     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&)
  0.00      0.00     0.00     1927     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
  0.00      0.00     0.00     1866     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00     1846     0.00     0.00  std::move_iterator<maze::Cell**>::base() const
  0.00      0.00     0.00     1846     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::max_size() const
  0.00      0.00     0.00     1846     0.00     0.00  std::_Iter_base<std::move_iterator<maze::Cell**>, true>::_S_base(std::move_iterator<maze::Cell**>)
  0.00      0.00     0.00     1846     0.00     0.00  std::move_iterator<maze::Cell**>::move_iterator(maze::Cell**)
  0.00      0.00     0.00     1846     0.00     0.00  std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__maxsize_helper<std::allocator<maze::Cell*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_max_size<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00     1846     0.00     0.00  std::allocator_traits<std::allocator<maze::Cell*> >::max_size(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00     1846     0.00     0.00  std::_Miter_base<std::move_iterator<maze::Cell**> >::iterator_type std::__miter_base<std::move_iterator<maze::Cell**> >(std::move_iterator<maze::Cell**>)
  0.00      0.00     0.00     1846     0.00     0.00  std::move_iterator<maze::Cell**> std::__make_move_if_noexcept_iterator<maze::Cell**, std::move_iterator<maze::Cell**> >(maze::Cell**)
  0.00      0.00     0.00     1799     0.00     0.00  maze::Pathway::get_first_cell()
  0.00      0.00     0.00     1787     0.00     0.00  void std::_Destroy_aux<true>::__destroy<maze::Cell**>(maze::Cell**, maze::Cell**)
  0.00      0.00     0.00     1787     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate(maze::Cell**, unsigned long)
  0.00      0.00     0.00     1787     0.00     0.00  void std::_Destroy<maze::Cell**>(maze::Cell**, maze::Cell**)
  0.00      0.00     0.00     1787     0.00     0.00  void std::_Destroy<maze::Cell**, maze::Cell*>(maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&)
  0.00      0.00     0.00     1761     0.00     0.00  unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
  0.00      0.00     0.00     1719     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00     1650     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00     1650     0.00     0.00  std::move_iterator<maze::Pathway**>::base() const
  0.00      0.00     0.00     1650     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::max_size() const
  0.00      0.00     0.00     1650     0.00     0.00  std::_Iter_base<std::move_iterator<maze::Pathway**>, true>::_S_base(std::move_iterator<maze::Pathway**>)
  0.00      0.00     0.00     1650     0.00     0.00  std::move_iterator<maze::Pathway**>::move_iterator(maze::Pathway**)
  0.00      0.00     0.00     1650     0.00     0.00  std::enable_if<std::allocator_traits<std::allocator<maze::Pathway*> >::__maxsize_helper<std::allocator<maze::Pathway*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Pathway*> >::_S_max_size<std::allocator<maze::Pathway*> const>(std::allocator<maze::Pathway*> const&)
  0.00      0.00     0.00     1650     0.00     0.00  std::allocator_traits<std::allocator<maze::Pathway*> >::max_size(std::allocator<maze::Pathway*> const&)
  0.00      0.00     0.00     1650     0.00     0.00  std::_Miter_base<std::move_iterator<maze::Pathway**> >::iterator_type std::__miter_base<std::move_iterator<maze::Pathway**> >(std::move_iterator<maze::Pathway**>)
  0.00      0.00     0.00     1650     0.00     0.00  std::move_iterator<maze::Pathway**> std::__make_move_if_noexcept_iterator<maze::Pathway**, std::move_iterator<maze::Pathway**> >(maze::Pathway**)
  0.00      0.00     0.00     1626     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::__normal_iterator(maze::Cell* const* const&)
  0.00      0.00     0.00     1626     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::base() const
  0.00      0.00     0.00     1615     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.00     0.00     1615     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*)
  0.00      0.00     0.00     1615     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const
  0.00      0.00     0.00     1604     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator()
  0.00      0.00     0.00     1602     0.00     0.00  _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_
  0.00      0.00     0.00     1596     0.00     0.00  void __gnu_cxx::new_allocator<maze::Pathway*>::construct<maze::Pathway*, maze::Pathway* const&>(maze::Pathway**, maze::Pathway* const&)
  0.00      0.00     0.00     1596     0.00     0.00  _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE12_S_constructIS2_IRKS2_EEENSt9enable_ifIXsrNS4_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS3_PSA_DpOSB_
  0.00      0.00     0.00     1596     0.00     0.00  _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_
  0.00      0.00     0.00     1596     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&)
  0.00      0.00     0.00     1596     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, unsigned int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
  0.00      0.00     0.00     1590     0.00     0.00  std::__detail::_Node_iterator<maze::Cell*, true, false>&& std::forward<std::__detail::_Node_iterator<maze::Cell*, true, false> >(std::remove_reference<std::__detail::_Node_iterator<maze::Cell*, true, false> >::type&)
  0.00      0.00     0.00     1590     0.00     0.00  bool&& std::forward<bool>(std::remove_reference<bool>::type&)
  0.00      0.00     0.00     1588     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00     1584     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin()
  0.00      0.00     0.00     1364     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const
  0.00      0.00     0.00     1359     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const
  0.00      0.00     0.00     1343     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const
  0.00      0.00     0.00     1298     0.00     0.00  maze::Pathway::get_second_cell()
  0.00      0.00     0.00     1241     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
  0.00      0.00     0.00     1228     0.00     0.00  void std::_Destroy_aux<true>::__destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**)
  0.00      0.00     0.00     1228     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_deallocate(maze::Pathway**, unsigned long)
  0.00      0.00     0.00     1228     0.00     0.00  void std::_Destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**)
  0.00      0.00     0.00     1228     0.00     0.00  void std::_Destroy<maze::Pathway**, maze::Pathway*>(maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&)
  0.00      0.00     0.00     1219     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&)
  0.00      0.00     0.00     1203     0.00     0.00  std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__construct_helper<maze::Cell*, maze::Cell* const&>::value, void>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_construct<maze::Cell*, maze::Cell* const&>(std::allocator<maze::Cell*>&, maze::Cell**, maze::Cell* const&)
  0.00      0.00     0.00     1203     0.00     0.00  _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_
  0.00      0.00     0.00     1203     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&)
  0.00      0.00     0.00     1199     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long)
  0.00      0.00     0.00     1199     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.00     0.00     1196     0.00     0.00  std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(maze::Cell* const&)
  0.00      0.00     0.00     1196     0.00     0.00  std::_Tuple_impl<0ul, maze::Cell* const&>::_M_tail(std::_Tuple_impl<0ul, maze::Cell* const&>&)
  0.00      0.00     0.00     1196     0.00     0.00  std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&)
  0.00      0.00     0.00     1196     0.00     0.00  std::_Tuple_impl<1ul>::_Tuple_impl()
  0.00      0.00     0.00     1196     0.00     0.00  std::tuple<maze::Cell* const&>::tuple(std::tuple<maze::Cell* const&>&&)
  0.00      0.00     0.00     1196     0.00     0.00  std::tuple<maze::Cell* const&>::tuple(maze::Cell* const&)
  0.00      0.00     0.00     1196     0.00     0.00  std::__add_ref<maze::Cell* const&>::type std::__get_helper<0ul, maze::Cell* const&>(std::_Tuple_impl<0ul, maze::Cell* const&>&)
  0.00      0.00     0.00     1196     0.00     0.00  std::__add_ref<std::tuple_element<0ul, std::tuple<maze::Cell* const&> >::type>::type std::get<0ul, maze::Cell* const&>(std::tuple<maze::Cell* const&>&)
  0.00      0.00     0.00     1196     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&)
  0.00      0.00     0.00     1193     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~new_allocator()
  0.00      0.00     0.00     1193     0.00     0.00  std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~allocator()
  0.00      0.00     0.00     1193     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00     1193     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear()
  0.00      0.00     0.00     1193     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable()
  0.00      0.00     0.00     1193     0.00     0.00  std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::~unordered_set()
  0.00      0.00     0.00     1193     0.00     0.00  std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Insert_base()
  0.00      0.00     0.00     1193     0.00     0.00  std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::~_Before_begin()
  0.00      0.00     0.00     1193     0.00     0.00  std::__detail::_Insert<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true, true>::_Insert()
  0.00      0.00     0.00     1193     0.00     0.00  std::__detail::_Equality<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::_Equality()
  0.00      0.00     0.00     1191     0.00     0.00  bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*)
  0.00      0.00     0.00     1191     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&)
  0.00      0.00     0.00     1191     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const
  0.00      0.00     0.00     1191     0.00     0.00  std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&)
  0.00      0.00     0.00     1191     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&)
  0.00      0.00     0.00     1191     0.00     0.00  std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&)
  0.00      0.00     0.00     1191     0.00     0.00  std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::end()
  0.00      0.00     0.00     1191     0.00     0.00  std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> > const&)
  0.00      0.00     0.00     1191     0.00     0.00  std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long)
  0.00      0.00     0.00     1191     0.00     0.00  std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin(std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > > const&)
  0.00      0.00     0.00     1191     0.00     0.00  bool std::__detail::operator==<maze::Cell*, false>(std::__detail::_Node_iterator_base<maze::Cell*, false> const&, std::__detail::_Node_iterator_base<maze::Cell*, false> const&)
  0.00      0.00     0.00      949     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell*>::deallocate(maze::Cell**, unsigned long)
  0.00      0.00     0.00      949     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell*>::allocate(unsigned long, void const*)
  0.00      0.00     0.00      943     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate(unsigned long)
  0.00      0.00     0.00      923     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**)
  0.00      0.00     0.00      923     0.00     0.00  void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::__copy_move_a<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::__copy_move_a2<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::uninitialized_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::__uninitialized_copy_a<std::move_iterator<maze::Cell**>, maze::Cell**, maze::Cell*>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**, std::allocator<maze::Cell*>&)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::__uninitialized_move_if_noexcept_a<maze::Cell**, maze::Cell**, std::allocator<maze::Cell*> >(maze::Cell**, maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&)
  0.00      0.00     0.00      923     0.00     0.00  maze::Cell** std::copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**)
  0.00      0.00     0.00      899     0.00     0.00  maze::Pathway::get_other_cell(maze::Cell*)
  0.00      0.00     0.00      888     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell*>::~new_allocator()
  0.00      0.00     0.00      888     0.00     0.00  std::allocator<maze::Cell*>::~allocator()
  0.00      0.00     0.00      864     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00      864     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Vector_base()
  0.00      0.00     0.00      864     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector()
  0.00      0.00     0.00      855     0.00     0.00  decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::pair<maze::Cell* const, maze::Pathway*> const&) const
  0.00      0.00     0.00      855     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const
  0.00      0.00     0.00      855     0.00     0.00  maze::Cell* const& std::__pair_get<0ul>::__const_get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&)
  0.00      0.00     0.00      855     0.00     0.00  std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type const& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&)
  0.00      0.00     0.00      855     0.00     0.00  std::pair<maze::Cell* const, maze::Pathway*> const& std::forward<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*> const&>::type&)
  0.00      0.00     0.00      825     0.00     0.00  __gnu_cxx::new_allocator<maze::Pathway*>::deallocate(maze::Pathway**, unsigned long)
  0.00      0.00     0.00      825     0.00     0.00  __gnu_cxx::new_allocator<maze::Pathway*>::allocate(unsigned long, void const*)
  0.00      0.00     0.00      825     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Pathway*>(maze::Pathway* const*, maze::Pathway* const*, maze::Pathway**)
  0.00      0.00     0.00      825     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_allocate(unsigned long)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**)
  0.00      0.00     0.00      825     0.00     0.00  void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::__copy_move_a<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::__copy_move_a2<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::uninitialized_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::__uninitialized_copy_a<std::move_iterator<maze::Pathway**>, maze::Pathway**, maze::Pathway*>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**, std::allocator<maze::Pathway*>&)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::__uninitialized_move_if_noexcept_a<maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*> >(maze::Pathway**, maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&)
  0.00      0.00     0.00      825     0.00     0.00  maze::Pathway** std::copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**)
  0.00      0.00     0.00      816     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell*>::new_allocator()
  0.00      0.00     0.00      816     0.00     0.00  std::allocator<maze::Cell*>::allocator()
  0.00      0.00     0.00      813     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::end() const
  0.00      0.00     0.00      813     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::begin() const
  0.00      0.00     0.00      813     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00      813     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base()
  0.00      0.00     0.00      813     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector()
  0.00      0.00     0.00      801     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
  0.00      0.00     0.00      801     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&)
  0.00      0.00     0.00      800     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway** const&)
  0.00      0.00     0.00      800     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector()
  0.00      0.00     0.00      799     0.00     0.00  std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> const&)
  0.00      0.00     0.00      798     0.00     0.00  bool josh::is_in_container<std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*>(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*)
  0.00      0.00     0.00      798     0.00     0.00  maze::Cell::add_pathway(maze::Pathway*)
  0.00      0.00     0.00      798     0.00     0.00  maze::Pathway::is_in_solved_pathway()
  0.00      0.00     0.00      798     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, unsigned long)
  0.00      0.00     0.00      798     0.00     0.00  std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const
  0.00      0.00     0.00      798     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const
  0.00      0.00     0.00      798     0.00     0.00  std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::reserve(unsigned long)
  0.00      0.00     0.00      798     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::operator[](unsigned long)
  0.00      0.00     0.00      796     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::pop_back()
  0.00      0.00     0.00      796     0.00     0.00  void std::pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
  0.00      0.00     0.00      795     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) const
  0.00      0.00     0.00      795     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00      795     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00      795     0.00     0.00  std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>)
  0.00      0.00     0.00      795     0.00     0.00  std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::insert(maze::Cell* const&)
  0.00      0.00     0.00      795     0.00     0.00  std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool, void>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&)
  0.00      0.00     0.00      795     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::end()
  0.00      0.00     0.00      795     0.00     0.00  std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable()
  0.00      0.00     0.00      795     0.00     0.00  std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(maze::Cell* const&)
  0.00      0.00     0.00      795     0.00     0.00  std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&)
  0.00      0.00     0.00      794     0.00     0.00  std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long)
  0.00      0.00     0.00      793     0.00     0.00  bool __gnu_cxx::operator==<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&)
  0.00      0.00     0.00      793     0.00     0.00  std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator*() const
  0.00      0.00     0.00      793     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const
  0.00      0.00     0.00      793     0.00     0.00  std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator--()
  0.00      0.00     0.00      793     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back()
  0.00      0.00     0.00      793     0.00     0.00  std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::top()
  0.00      0.00     0.00      777     0.00     0.00  std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const
  0.00      0.00     0.00      624     0.00     0.00  std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      0.00     0.00      624     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
  0.00      0.00     0.00      623     0.00     0.00  std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
  0.00      0.00     0.00      623     0.00     0.00  unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
  0.00      0.00     0.00      509     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00      509     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const
  0.00      0.00     0.00      504     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00      504     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00      504     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const
  0.00      0.00     0.00      504     0.00     0.00  std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::operator[](maze::Cell* const&)
  0.00      0.00     0.00      504     0.00     0.00  std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&)
  0.00      0.00     0.00      483     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const
  0.00      0.00     0.00      404     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*)
  0.00      0.00     0.00      403     0.00     0.00  __gnu_cxx::new_allocator<maze::Pathway*>::new_allocator()
  0.00      0.00     0.00      403     0.00     0.00  __gnu_cxx::new_allocator<maze::Pathway*>::~new_allocator()
  0.00      0.00     0.00      403     0.00     0.00  std::allocator<maze::Pathway*>::allocator()
  0.00      0.00     0.00      403     0.00     0.00  std::allocator<maze::Pathway*>::~allocator()
  0.00      0.00     0.00      403     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00      403     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00      403     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_base()
  0.00      0.00     0.00      403     0.00     0.00  std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::~_Vector_base()
  0.00      0.00     0.00      403     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector()
  0.00      0.00     0.00      403     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector()
  0.00      0.00     0.00      401     0.00     0.00  maze::Maze::get_height()
  0.00      0.00     0.00      401     0.00     0.00  maze::Maze::get_width()
  0.00      0.00     0.00      400     0.00     0.00  maze::AStarSolver::heuristic_estimate(maze::Cell&, maze::Maze&)
  0.00      0.00     0.00      400     0.00     0.00  maze::Cell::Cell(unsigned int, unsigned int)
  0.00      0.00     0.00      400     0.00     0.00  maze::Cell::~Cell()
  0.00      0.00     0.00      400     0.00     0.00  maze::Maze::max_num_pathways()
  0.00      0.00     0.00      400     0.00     0.00  std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::reserve(unsigned long)
  0.00      0.00     0.00      400     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end()
  0.00      0.00     0.00      400     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::begin()
  0.00      0.00     0.00      400     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end()
  0.00      0.00     0.00      400     0.00     0.00  std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin()
  0.00      0.00     0.00      399     0.00     0.00  maze::Maze::add_pathway(maze::Cell*, maze::Cell*)
  0.00      0.00     0.00      399     0.00     0.00  maze::Pathway::Pathway(maze::Cell*, maze::Cell*)
  0.00      0.00     0.00      399     0.00     0.00  maze::Pathway::~Pathway()
  0.00      0.00     0.00      399     0.00     0.00  maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&)
  0.00      0.00     0.00      399     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::~allocator()
  0.00      0.00     0.00      399     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      0.00     0.00      399     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
  0.00      0.00     0.00      399     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&)
  0.00      0.00     0.00      399     0.00     0.00  std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell* const&)
  0.00      0.00     0.00      398     0.00     0.00  maze::Maze::num_cells()
  0.00      0.00     0.00      398     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long)
  0.00      0.00     0.00      398     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      398     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocate(unsigned long, void const*)
  0.00      0.00     0.00      398     0.00     0.00  void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
  0.00      0.00     0.00      398     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::max_size() const
  0.00      0.00     0.00      398     0.00     0.00  std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::operator->() const
  0.00      0.00     0.00      398     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) const
  0.00      0.00     0.00      398     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
  0.00      0.00     0.00      398     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      398     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      398     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      398     0.00     0.00  std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&>(std::piecewise_construct_t, std::tuple<maze::Cell* const&>, std::tuple<>)
  0.00      0.00     0.00      398     0.00     0.00  std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&, 0ul>(std::tuple<maze::Cell* const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
  0.00      0.00     0.00      398     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
  0.00      0.00     0.00      398     0.00     0.00  std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      398     0.00     0.00  std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      398     0.00     0.00  std::pair<maze::Cell* const, maze::Pathway*>* std::__addressof<std::pair<maze::Cell* const, maze::Pathway*> >(std::pair<maze::Cell* const, maze::Pathway*>&)
  0.00      0.00     0.00      398     0.00     0.00  std::remove_reference<maze::Priority_and_cell&>::type&& std::move<maze::Priority_and_cell&>(maze::Priority_and_cell&)
  0.00      0.00     0.00      397     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const
  0.00      0.00     0.00      397     0.00     0.00  std::allocator<maze::Priority_and_cell>::allocator(std::allocator<maze::Priority_and_cell> const&)
  0.00      0.00     0.00      397     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.00     0.00      396     0.00     0.00  maze::Cell::get_pathways()
  0.00      0.00     0.00      396     0.00     0.00  std::remove_reference<maze::Priority_and_cell*&>::type&& std::move<maze::Priority_and_cell*&>(maze::Priority_and_cell*&)
  0.00      0.00     0.00      394     0.00     0.00  void __gnu_cxx::new_allocator<maze::Cell*>::destroy<maze::Cell*>(maze::Cell**)
  0.00      0.00     0.00      394     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::pop_back()
  0.00      0.00     0.00      394     0.00     0.00  std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::pop()
  0.00      0.00     0.00      391     0.00     0.00  decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const
  0.00      0.00     0.00      391     0.00     0.00  maze::Cell* const& std::__pair_get<0ul>::__get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&)
  0.00      0.00     0.00      391     0.00     0.00  std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&)
  0.00      0.00     0.00      391     0.00     0.00  std::pair<maze::Cell* const, maze::Pathway*>& std::forward<std::pair<maze::Cell* const, maze::Pathway*>&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*>&>::type&)
  0.00      0.00     0.00      386     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const
  0.00      0.00     0.00      386     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const
  0.00      0.00     0.00      386     0.00     0.00  std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00      378     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*) const
  0.00      0.00     0.00      279     0.00     0.00  std::remove_reference<maze::Cell**&>::type&& std::move<maze::Cell**&>(maze::Cell**&)
  0.00      0.00     0.00      106     0.00     0.00  maze::Pathway::set_solved_pathway()
  0.00      0.00     0.00       93     0.00     0.00  void std::swap<maze::Cell**>(maze::Cell**&, maze::Cell**&)
  0.00      0.00     0.00       82     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__addressof<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&)
  0.00      0.00     0.00       74     0.00     0.00  std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::base() const
  0.00      0.00     0.00       72     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell*>::new_allocator(__gnu_cxx::new_allocator<maze::Cell*> const&)
  0.00      0.00     0.00       72     0.00     0.00  std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00       66     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&)
  0.00      0.00     0.00       64     0.00     0.00  std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&)
  0.00      0.00     0.00       62     0.00     0.00  std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&)
  0.00      0.00     0.00       51     0.00     0.00  void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00       50     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
  0.00      0.00     0.00       40     0.00     0.00  std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >)
  0.00      0.00     0.00       40     0.00     0.00  std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >)
  0.00      0.00     0.00       40     0.00     0.00  std::_Miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >)
  0.00      0.00     0.00       40     0.00     0.00  std::_Niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >)
  0.00      0.00     0.00       37     0.00     0.00  std::__deque_buf_size(unsigned long)
  0.00      0.00     0.00       37     0.00     0.00  bool std::operator==<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&)
  0.00      0.00     0.00       37     0.00     0.00  bool std::operator!=<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&)
  0.00      0.00     0.00       31     0.00     0.00  std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator*() const
  0.00      0.00     0.00       31     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl&)
  0.00      0.00     0.00       31     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*>&&)
  0.00      0.00     0.00       31     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&)
  0.00      0.00     0.00       31     0.00     0.00  std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator++()
  0.00      0.00     0.00       31     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&)
  0.00      0.00     0.00       31     0.00     0.00  void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&)
  0.00      0.00     0.00       31     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >&& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::type&)
  0.00      0.00     0.00       30     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::size() const
  0.00      0.00     0.00       30     0.00     0.00  std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_allocate(unsigned long)
  0.00      0.00     0.00       25     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const
  0.00      0.00     0.00       25     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long)
  0.00      0.00     0.00       24     0.00     0.00  std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
  0.00      0.00     0.00       21     0.00     0.00  std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***)
  0.00      0.00     0.00       21     0.00     0.00  std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_S_buffer_size()
  0.00      0.00     0.00       20     0.00     0.00  void __gnu_cxx::new_allocator<maze::Priority_and_cell>::destroy<maze::Priority_and_cell>(maze::Priority_and_cell*)
  0.00      0.00     0.00       20     0.00     0.00  _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_
  0.00      0.00     0.00       20     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<maze::Cell*> >::_S_select_on_copy(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**)
  0.00      0.00     0.00       20     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00       20     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_storage(unsigned long)
  0.00      0.00     0.00       20     0.00     0.00  std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(unsigned long, std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00       20     0.00     0.00  std::allocator_traits<std::allocator<maze::Cell*> >::select_on_container_copy_construction(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00       20     0.00     0.00  std::enable_if<!std::allocator_traits<std::allocator<maze::Cell*> >::__select_helper<std::allocator<maze::Cell*> const>::value, std::allocator<maze::Cell*> const>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_select<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00       20     0.00     0.00  _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE12_S_constructIS5_IRKS5_EEENSt9enable_ifIXsrNS7_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS6_PSD_DpOSE_
  0.00      0.00     0.00       20     0.00     0.00  _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
  0.00      0.00     0.00       20     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&)
  0.00      0.00     0.00       20     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::push_back(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&)
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::__copy_move_a<false, maze::Cell* const*, maze::Cell**>(maze::Cell* const*, maze::Cell* const*, maze::Cell**)
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::uninitialized_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, maze::Cell*>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, std::allocator<maze::Cell*>&)
  0.00      0.00     0.00       20     0.00     0.00  maze::Cell** std::copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
  0.00      0.00     0.00       18     0.00     0.00  __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::max_size() const
  0.00      0.00     0.00       18     0.00     0.00  std::char_traits<char>::compare(char const*, char const*, unsigned long)
  0.00      0.00     0.00       18     0.00     0.00  __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00      0.00     0.00       17     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
  0.00      0.00     0.00       15     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::size() const
  0.00      0.00     0.00       15     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&)
  0.00      0.00     0.00       15     0.00     0.00  maze::Priority_and_cell* std::__uninitialized_move_if_noexcept_a<maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell> >(maze::Priority_and_cell*, maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&)
  0.00      0.00     0.00       13     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator()
  0.00      0.00     0.00       12     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() const
  0.00      0.00     0.00       12     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size() const
  0.00      0.00     0.00       12     0.00     0.00  std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > const&)
  0.00      0.00     0.00       12     0.00     0.00  std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::move_iterator(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00       12     0.00     0.00  std::enable_if<std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::__maxsize_helper<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>::value, unsigned long>::type std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_S_max_size<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&)
  0.00      0.00     0.00       12     0.00     0.00  std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&)
  0.00      0.00     0.00       12     0.00     0.00  std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> std::__make_move_if_noexcept_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00       10     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*, unsigned long) const
  0.00      0.00     0.00       10     0.00     0.00  _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_
  0.00      0.00     0.00        8     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() const
  0.00      0.00     0.00        7     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00        7     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long)
  0.00      0.00     0.00        7     0.00     0.00  void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00        7     0.00     0.00  void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&)
  0.00      0.00     0.00        6     0.00     0.00  __gthread_active_p()
  0.00      0.00     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long)
  0.00      0.00     0.00        6     0.00     0.00  __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocate(unsigned long, void const*)
  0.00      0.00     0.00        6     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() const
  0.00      0.00     0.00        6     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const
  0.00      0.00     0.00        6     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const
  0.00      0.00     0.00        6     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00      0.00     0.00        6     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        6     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long)
  0.00      0.00     0.00        6     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long)
  0.00      0.00     0.00        6     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node()
  0.00      0.00     0.00        6     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**)
  0.00      0.00     0.00        6     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_allocate(unsigned long)
  0.00      0.00     0.00        6     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00        6     0.00     0.00  void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&)
  0.00      0.00     0.00        6     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::uninitialized_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  0.00      0.00     0.00        6     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&)
  0.00      0.00     0.00        6     0.00     0.00  std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_move_if_noexcept_a<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&)
  0.00      0.00     0.00        6     0.00     0.00  std::remove_reference<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>::type&& std::move<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&)
  0.00      0.00     0.00        6     0.00     0.00  void std::_Destroy<maze::Priority_and_cell*, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&)
  0.00      0.00     0.00        5     0.00     0.00  decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) const
  0.00      0.00     0.00        5     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>)
  0.00      0.00     0.00        5     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&)
  0.00      0.00     0.00        5     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.00      0.00     0.00        5     0.00     0.00  std::__allow_copy_cons<true>::__allow_copy_cons()
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&)
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&)
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_Hashtable_ebo_helper(std::equal_to<maze::Cell*> const&)
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_Hashtable_ebo_helper(std::hash<maze::Cell*> const&)
  0.00      0.00     0.00        5     0.00     0.00  std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_Hashtable_ebo_helper(std::__detail::_Mod_range_hashing const&)
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<maze::Priority_and_cell>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        4     0.00     0.00  void __gnu_cxx::new_allocator<maze::Priority_and_cell>::construct<maze::Priority_and_cell, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell&&)
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell**>::new_allocator()
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell**>::~new_allocator()
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__exchange_and_add_single(int*, int)
  0.00      0.00     0.00        4     0.00     0.00  __gnu_cxx::__exchange_and_add_dispatch(int*, int)
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const
  0.00      0.00     0.00        4     0.00     0.00  std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::max_size() const
  0.00      0.00     0.00        4     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const
  0.00      0.00     0.00        4     0.00     0.00  std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const
  0.00      0.00     0.00        4     0.00     0.00  std::allocator<maze::Cell**>::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        4     0.00     0.00  std::allocator<maze::Cell**>::~allocator()
  0.00      0.00     0.00        4     0.00     0.00  std::shared_ptr<maze::Maze>::~shared_ptr()
  0.00      0.00     0.00        4     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.00     0.00        4     0.00     0.00  std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator()
  0.00      0.00     0.00        4     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux()
  0.00      0.00     0.00        4     0.00     0.00  void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&)
  0.00      0.00     0.00        4     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_reserve_map_at_back(unsigned long)
  0.00      0.00     0.00        4     0.00     0.00  maze::Priority_and_cell* std::__uninitialized_copy_a<std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, maze::Priority_and_cell>(std::move_iterator<maze::Priority_and_cell*>, std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&)
  0.00      0.00     0.00        4     0.00     0.00  std::move_iterator<maze::Priority_and_cell*> std::__make_move_if_noexcept_iterator<maze::Priority_and_cell*, std::move_iterator<maze::Priority_and_cell*> >(maze::Priority_and_cell*)
  0.00      0.00     0.00        3     0.00     0.00  long __gnu_cxx::__stoa<long, long, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)
  0.00      0.00     0.00        3     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator<std::pair<maze::Cell* const, unsigned int> >(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&)
  0.00      0.00     0.00        3     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator()
  0.00      0.00     0.00        3     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.00      0.00     0.00        3     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_Hashtable_ebo_helper(std::__detail::_Select1st const&)
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<maze::Maze*&>::type&& std::move<maze::Maze*&>(maze::Maze*&)
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<maze::Cell***&>::type&& std::move<maze::Cell***&>(maze::Cell***&)
  0.00      0.00     0.00        3     0.00     0.00  std::remove_reference<unsigned long&>::type&& std::move<unsigned long&>(unsigned long&)
  0.00      0.00     0.00        3     0.00     0.00  std::stol(std::string const&, unsigned long*, int)
  0.00      0.00     0.00        2     0.00     0.00  maze::AStarSolver::solve_maze()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator()
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell**>::deallocate(maze::Cell***, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell**>::allocate(unsigned long, void const*)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__atomic_add_single(int*, int)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__atomic_add_dispatch(int*, int)
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<maze::Cell**>::max_size() const
  0.00      0.00     0.00        2     0.00     0.00  __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator+(long const&) const
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::shared_ptr<maze::Maze>::shared_ptr(std::shared_ptr<maze::Maze> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::~_Deque_impl()
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_nodes(maze::Cell***, maze::Cell***)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_nodes(maze::Cell***, maze::Cell***)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long)
  0.00      0.00     0.00        2     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base()
  0.00      0.00     0.00        2     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > > const&)
  0.00      0.00     0.00        2     0.00     0.00  std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::~unordered_map()
  0.00      0.00     0.00        2     0.00     0.00  std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
  0.00      0.00     0.00        2     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::~priority_queue()
  0.00      0.00     0.00        2     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  0.00      0.00     0.00        2     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_data(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::begin()
  0.00      0.00     0.00        2     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque()
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&)
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&)
  0.00      0.00     0.00        2     0.00     0.00  std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_Hashtable_ebo_helper(std::__detail::_Identity const&)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<maze::Cell*&>::type&& std::move<maze::Cell*&>(maze::Cell*&)
  0.00      0.00     0.00        2     0.00     0.00  std::remove_reference<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&)
  0.00      0.00     0.00        2     0.00     0.00  void std::swap<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> >(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&)
  0.00      0.00     0.00        2     0.00     0.00  maze::Cell*&& std::forward<maze::Cell*>(std::remove_reference<maze::Cell*>::type&)
  0.00      0.00     0.00        2     0.00     0.00  std::allocator<maze::Cell*> const& std::forward<std::allocator<maze::Cell*> const&>(std::remove_reference<std::allocator<maze::Cell*> const&>::type&)
  0.00      0.00     0.00        2     0.00     0.00  bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze10BinaryLoad9make_mazeEv
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze10BinarySaveC2ESt10shared_ptrINS_4MazeEESs
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze11AStarSolverC2ERNS_4MazeE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze22DepthFirstSearchSolverC2ERNS_4MazeE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze24BreadthFirstSearchSolverC2ERNS_4MazeE
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze25DepthFirstSearchGenerator9make_mazeEv
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze4MazeC2Ejj
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I__ZN4maze7SVGSave12persist_mazeEv
  0.00      0.00     0.00        1     0.00     0.00  _GLOBAL__sub_I_main
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  __static_initialization_and_destruction_0(int, int)
  0.00      0.00     0.00        1     0.00     0.00  maze::AStarSolver::AStarSolver(maze::Maze&)
  0.00      0.00     0.00        1     0.00     0.00  maze::AStarSolver::~AStarSolver()
  0.00      0.00     0.00        1     0.00     0.00  maze::MazeFactory::MazeFactory()
  0.00      0.00     0.00        1     0.00     0.00  maze::MazeFactory::~MazeFactory()
  0.00      0.00     0.00        1     0.00     0.00  maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*)
  0.00      0.00     0.00        1     0.00     0.00  maze::SolvingStrategy::SolvingStrategy()
  0.00      0.00     0.00        1     0.00     0.00  maze::SolvingStrategy::~SolvingStrategy()
  0.00      0.00     0.00        1     0.00     0.00  maze::KruskalGenerator::make_maze()
  0.00      0.00     0.00        1     0.00     0.00  maze::PersistenceStrategy::PersistenceStrategy()
  0.00      0.00     0.00        1     0.00     0.00  maze::PersistenceStrategy::~PersistenceStrategy()
  0.00      0.00     0.00        1     0.00     0.00  maze::DepthFirstSearchGenerator::make_maze()
  0.00      0.00     0.00        1     0.00     0.00  maze::DepthFirstSearchGenerator::DepthFirstSearchGenerator(unsigned int, unsigned int, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  maze::DepthFirstSearchGenerator::~DepthFirstSearchGenerator()
  0.00      0.00     0.00        1     0.00     0.00  maze::Maze::get_pathways()
  0.00      0.00     0.00        1     0.00     0.00  maze::Maze::Maze(unsigned int, unsigned int)
  0.00      0.00     0.00        1     0.00     0.00  maze::Maze::~Maze()
  0.00      0.00     0.00        1     0.00     0.00  maze::SVGSave::persist_maze()
  0.00      0.00     0.00        1     0.00     0.00  maze::SVGSave::SVGSave(std::shared_ptr<maze::Maze>, std::string)
  0.00      0.00     0.00        1     0.00     0.00  maze::SVGSave::~SVGSave()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IS3_EEEvPT_DpOT0_
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~new_allocator()
  0.00      0.00     0.00        1     0.00     0.00  bool __gnu_cxx::operator==<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::get() const
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Prime_rehash_policy::max_load_factor() const
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocator<std::pair<maze::Cell* const, maze::Pathway*> >(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~allocator()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::erase(maze::Cell* const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear()
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable()
  0.00      0.00     0.00        1     0.00     0.00  std::shared_ptr<maze::Maze>::shared_ptr<maze::Maze>(maze::Maze*)
  0.00      0.00     0.00        1     0.00     0.00  std::shared_ptr<maze::Maze>::operator=(std::shared_ptr<maze::Maze>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&)
  0.00      0.00     0.00        1     0.00     0.00  std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::~_Vector_impl()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~_Vector_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&)
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<maze::Maze>(maze::Maze*)
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::~unordered_map()
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00      0.00     0.00        1     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<maze::Maze*>(maze::Maze*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(maze::Maze*)
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr()
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.00      0.00     0.00        1     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
  0.00      0.00     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
  0.00      0.00     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
  0.00      0.00     0.00        1     0.00     0.00  std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine<unsigned int, void>(unsigned int&)
  0.00      0.00     0.00        1     0.00     0.00  void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::emplace_back<maze::Cell*>(maze::Cell*&&)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell*&&)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&)
  0.00      0.00     0.00        1     0.00     0.00  std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque()
  0.00      0.00     0.00        1     0.00     0.00  std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell*&&)
  0.00      0.00     0.00        1     0.00     0.00  std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::stack(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&)
  0.00      0.00     0.00        1     0.00     0.00  std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::~stack()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::vector()
  0.00      0.00     0.00        1     0.00     0.00  std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Insert_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::~_Before_begin()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&)
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Insert<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert()
  0.00      0.00     0.00        1     0.00     0.00  std::__detail::_Equality<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality()
  0.00      0.00     0.00        1     0.00     0.00  void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<std::shared_ptr<maze::Maze>&>::type&& std::move<std::shared_ptr<maze::Maze>&>(std::shared_ptr<maze::Maze>&)
  0.00      0.00     0.00        1     0.00     0.00  std::remove_reference<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&)
  0.00      0.00     0.00        1     0.00     0.00  void std::swap<maze::Maze*>(maze::Maze*&, maze::Maze*&)
  0.00      0.00     0.00        1     0.00     0.00  void std::swap<maze::Cell***>(maze::Cell***&, maze::Cell***&)
  0.00      0.00     0.00        1     0.00     0.00  void std::swap<unsigned long>(unsigned long&, unsigned long&)
  0.00      0.00     0.00        1     0.00     0.00  std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const& std::forward<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::remove_reference<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>::type&)
  0.00      0.00     0.00        1     0.00     0.00  std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.
 
 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this 
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 2 byte(s) no time propagated

index % time    self  children    called     name
[1]      0.0    0.00    0.00       2+400     <cycle 1 as a whole> [1]
                0.00    0.00       2+399         maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     400             maze::AStarSolver::heuristic_estimate(maze::Cell&, maze::Maze&) <cycle 1> [316]
-----------------------------------------------
[2]      0.0    0.00    0.00    1222+26      <cycle 2 as a whole> [2]
                0.00    0.00    1219+2           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                0.00    0.00      17             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
                0.00    0.00       8             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() const <cycle 2> [439]
                0.00    0.00       4+1           std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
-----------------------------------------------
[3]      0.0    0.00    0.00  835098+1019697 <cycle 3 as a whole> [3]
                0.00    0.00  329621+1596        void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00  320303             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
                0.00    0.00  248212+6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                0.00    0.00  240892             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
                0.00    0.00  162584             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const <cycle 3> [30]
                0.00    0.00  161650             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const <cycle 3> [33]
                0.00    0.00   88475             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                0.00    0.00   82936             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                0.00    0.00   81391             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00   80203+2           void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
                0.00    0.00   15076             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
                0.00    0.00    8177             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
                0.00    0.00    7526+399         std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                0.00    0.00    4672+1937        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
                0.00    0.00    2796+398         void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                0.00    0.00    3154             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                0.00    0.00    2791             std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) <cycle 3> [92]
                0.00    0.00    2015+399         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                0.00    0.00    2403             void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                0.00    0.00    2350             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator--() <cycle 3> [109]
                0.00    0.00    2014             std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                0.00    0.00    1947             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) <cycle 3> [126]
                0.00    0.00    1588             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
                0.00    0.00     800             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector() <cycle 3> [261]
                0.00    0.00     404             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
                0.00    0.00     400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() <cycle 3> [321]
                0.00    0.00     397             std::allocator<maze::Priority_and_cell>::allocator(std::allocator<maze::Priority_and_cell> const&) <cycle 3> [354]
                0.00    0.00      10             std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*, unsigned long) const <cycle 3> [437]
                0.00    0.00       5             std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) <cycle 3> [471]
                0.00    0.00       2             std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [538]
                0.00    0.00       1             bool __gnu_cxx::operator==<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) <cycle 3> [591]
-----------------------------------------------
[4]      0.0    0.00    0.00      40+20      <cycle 4 as a whole> [4]
                0.00    0.00      50             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) <cycle 4> [380]
                0.00    0.00      10+5           _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ <cycle 4> [438]
-----------------------------------------------
                0.00    0.00       4/645458      void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
                0.00    0.00     398/645458      std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&, 0ul>(std::tuple<maze::Cell* const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [347]
                0.00    0.00     795/645458      std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00     798/645458      std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const [268]
                0.00    0.00     923/645458      void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
                0.00    0.00    1196/645458      std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
                0.00    0.00    1203/645458      _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [180]
                0.00    0.00    1203/645458      std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__construct_helper<maze::Cell*, maze::Cell* const&>::value, void>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_construct<maze::Cell*, maze::Cell* const&>(std::allocator<maze::Cell*>&, maze::Cell**, maze::Cell* const&) [179]
                0.00    0.00    1602/645458      _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [159]
                0.00    0.00  158801/645458      std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
                0.00    0.00  158801/645458      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_ [40]
                0.00    0.00  158801/645458      std::__detail::_Hash_node<maze::Cell*, false>::_Hash_node<maze::Cell* const&>(maze::Cell* const&) [44]
                0.00    0.00  160933/645458      maze::Cell* const& std::__detail::_Identity::operator()<maze::Cell* const&>(maze::Cell* const&) const [34]
[13]     0.0    0.00    0.00  645458         maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
-----------------------------------------------
                0.00    0.00    1199/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
                0.00    0.00    1199/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
                0.00    0.00  317602/637602      std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
                0.00    0.00  317602/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*) [43]
[14]     0.0    0.00    0.00  637602         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator() [14]
-----------------------------------------------
                                1596             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                                 400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() <cycle 3> [321]
                                 820             std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                                1194             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                                5206             void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                0.00    0.00      10/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [941]
                0.00    0.00     798/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [946]
                0.00    0.00    1993/835098      __gnu_cxx::new_allocator<std::pair<maze::Cell* const, unsigned int> >::new_allocator() [752]
                0.00    0.00  158802/835098      void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [53]
                0.00    0.00  160398/835098      void std::allocator_traits<std::allocator<maze::Priority_and_cell> >::destroy<maze::Priority_and_cell>(std::allocator<maze::Priority_and_cell>&, maze::Priority_and_cell*) [1044]
[15]     0.0    0.00    0.00  329621+1596    void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00    2391/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
                0.00    0.00     820/3230        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [75]
                0.00    0.00     798/3588        std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [72]
                0.00    0.00     798/3588        std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&) [71]
                0.00    0.00     798/3588        std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [70]
                0.00    0.00     798/798         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, unsigned long) [266]
                0.00    0.00       2/5           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [472]
                               80201             void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
                               80199             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const <cycle 3> [33]
                                7183             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                                 798             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                                   2             std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                                1596             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
-----------------------------------------------
                                  10             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                                 400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() <cycle 3> [321]
                               79401             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
                               81292             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                0.00    0.00     398/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::top() const [834]
                0.00    0.00   79401/835098      void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [53]
                0.00    0.00   79401/835098      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, unsigned long) const [868]
[16]     0.0    0.00    0.00  320303         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
                                 808             std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
-----------------------------------------------
                0.00    0.00     382/319511      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00     397/319511      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKPN4maze4CellEjELb0EEEE9constructIS9_IRKSt21piecewise_construct_tSt5tupleIIRS7_EESF_IIEEEEEvPT_DpOT0_ [733]
                0.00    0.00     478/319511      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [275]
                0.00    0.00     768/319511      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
                0.00    0.00    1076/319511      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [80]
                0.00    0.00  158006/319511      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
                0.00    0.00  158404/319511      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<maze::Cell*, false>*) [195]
[17]     0.0    0.00    0.00  319511         std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
-----------------------------------------------
                0.00    0.00     509/248377      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [296]
                0.00    0.00     855/248377      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
                0.00    0.00    2401/248377      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                0.00    0.00    3182/248377      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [79]
                0.00    0.00   81292/248377      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                0.00    0.00  160138/248377      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
[18]     0.0    0.00    0.00  248377         std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
-----------------------------------------------
                0.00    0.00    1364/248377      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [169]
                0.00    0.00   83693/248377      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                0.00    0.00  163320/248377      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [28]
[19]     0.0    0.00    0.00  248377         std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [19]
-----------------------------------------------
                0.00    0.00     504/248356      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [299]
                0.00    0.00     855/248356      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
                0.00    0.00    2391/248356      void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00    3176/248356      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [81]
                0.00    0.00   81292/248356      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                0.00    0.00  160138/248356      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
[20]     0.0    0.00    0.00  248356         std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
                0.00    0.00  248356/248356      std::hash<unsigned long>::operator()(unsigned long) const [21]
-----------------------------------------------
                0.00    0.00  248356/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
[21]     0.0    0.00    0.00  248356         std::hash<unsigned long>::operator()(unsigned long) const [21]
-----------------------------------------------
                0.00    0.00    1359/248356      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [170]
                0.00    0.00   83683/248356      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                0.00    0.00  163314/248356      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [29]
[22]     0.0    0.00    0.00  248356         std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true> const&) [22]
-----------------------------------------------
                                   6             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                                   1             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator--() <cycle 3> [109]
                                   2             bool __gnu_cxx::operator==<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) <cycle 3> [591]
                                   3             std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [538]
                                1927             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                                2401             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                              243877             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                0.00    0.00       1/835098      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::begin() const [849]
[23]     0.0    0.00    0.00  248212+6       std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                0.00    0.00   83693/248377      std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [19]
                0.00    0.00   83219/84460       std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&) [47]
                0.00    0.00       1/3           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator<std::pair<maze::Cell* const, unsigned int> >(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [498]
                               81292             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
                               81292             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const <cycle 3> [30]
                                   6             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
-----------------------------------------------
                0.00    0.00       1/243062      _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IS3_EEEvPT_DpOT0_ [586]
                0.00    0.00      15/243062      maze::Priority_and_cell* std::__uninitialized_move_if_noexcept_a<maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell> >(maze::Priority_and_cell*, maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [428]
                0.00    0.00      20/243062      _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_ [404]
                0.00    0.00      31/243062      void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [394]
                0.00    0.00     398/243062      void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
                0.00    0.00     399/243062      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                0.00    0.00     798/243062      std::tuple_element<0ul, std::pair<maze::Cell* const, unsigned int> >::type const& std::get<0ul, maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int> const&) [1202]
                0.00    0.00    1596/243062      void __gnu_cxx::new_allocator<maze::Pathway*>::construct<maze::Pathway*, maze::Pathway* const&>(maze::Pathway**, maze::Pathway* const&) [160]
                0.00    0.00    1602/243062      _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [159]
                0.00    0.00   79401/243062      void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
                0.00    0.00  158801/243062      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_ [40]
[24]     0.0    0.00    0.00  243062         operator new(unsigned long, void*) [24]
-----------------------------------------------
                               80199             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                               81292             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const <cycle 3> [30]
                0.00    0.00   79401/835098      void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [53]
[25]     0.0    0.00    0.00  240892         void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
                0.00    0.00   79401/243062      operator new(unsigned long, void*) [24]
                0.00    0.00   79401/79401       decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int>&>(std::pair<maze::Cell* const, unsigned int>&) const [52]
                               79401             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
-----------------------------------------------
                0.00    0.00       1/239403      std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [646]
                0.00    0.00       2/239403      std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&) [537]
                0.00    0.00       2/239403      void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
                0.00    0.00     398/239403      std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
                0.00    0.00     798/239403      void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                0.00    0.00   79401/239403      decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int>&>(std::pair<maze::Cell* const, unsigned int>&) const [52]
                0.00    0.00  158801/239403      std::__detail::_Hash_node<maze::Cell*, false>::_Hash_node<maze::Cell* const&>(maze::Cell* const&) [44]
[26]     0.0    0.00    0.00  239403         std::__detail::_Hash_node_base::_Hash_node_base() [26]
-----------------------------------------------
                0.00    0.00     400/164323      void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                0.00    0.00     636/164323      __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::__normal_iterator(maze::Priority_and_cell const* const&) [756]
                0.00    0.00     729/164323      __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocate(unsigned long, void const*) [731]
                0.00    0.00     796/164323      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::pop() [1032]
                0.00    0.00     796/164323      std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::erase(maze::Cell* const&) [1024]
                0.00    0.00     838/164323      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_Vector_impl(std::allocator<maze::Priority_and_cell>&&) [995]
                0.00    0.00     840/164323      __gnu_cxx::new_allocator<maze::Priority_and_cell>::deallocate(maze::Priority_and_cell*, unsigned long) [715]
                0.00    0.00    1282/164323      void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                0.00    0.00  158006/164323      std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > >::_Before_begin(std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > > const&) [1136]
[27]     0.0    0.00    0.00  164323         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::empty() const [27]
-----------------------------------------------
                0.00    0.00    3182/163320      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [79]
                0.00    0.00  160138/163320      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
[28]     0.0    0.00    0.00  163320         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [28]
                0.00    0.00  163320/248377      std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [19]
-----------------------------------------------
                0.00    0.00    3176/163314      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [81]
                0.00    0.00  160138/163314      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
[29]     0.0    0.00    0.00  163314         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [29]
                0.00    0.00  163314/248356      std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true> const&) [22]
-----------------------------------------------
                                 744             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                               80548             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const <cycle 3> [33]
                               81292             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
[30]     0.0    0.00    0.00  162584         __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const <cycle 3> [30]
                               81292             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
-----------------------------------------------
                0.00    0.00    2148/162286      std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const [114]
                0.00    0.00  160138/162286      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
[31]     0.0    0.00    0.00  162286         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [31]
                0.00    0.00  162286/162286      std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&) [32]
-----------------------------------------------
                0.00    0.00  162286/162286      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [31]
[32]     0.0    0.00    0.00  162286         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&) [32]
-----------------------------------------------
                                 744             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                               80199             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00     159/835098      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKPN4maze4CellEjELb0EEEE9constructIS9_IRKS8_EEEvPT_DpOT0_ [732]
                0.00    0.00     398/835098      std::__detail::_Insert_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base() [1128]
                0.00    0.00     418/835098      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_Vector_impl(std::allocator<maze::Priority_and_cell>&&) [995]
                0.00    0.00     729/835098      __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocate(unsigned long, void const*) [731]
                0.00    0.00   79003/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
[33]     0.0    0.00    0.00  161650         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const <cycle 3> [33]
                               80548             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const <cycle 3> [30]
-----------------------------------------------
                0.00    0.00     795/160933      std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00  160138/160933      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
[34]     0.0    0.00    0.00  160933         maze::Cell* const& std::__detail::_Identity::operator()<maze::Cell* const&>(maze::Cell* const&) const [34]
                0.00    0.00  160933/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
-----------------------------------------------
                0.00    0.00     382/160138      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00  159756/160138      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [36]
[35]     0.0    0.00    0.00  160138         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
                0.00    0.00  160138/162286      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [31]
                0.00    0.00  160138/160933      maze::Cell* const& std::__detail::_Identity::operator()<maze::Cell* const&>(maze::Cell* const&) const [34]
                0.00    0.00  160138/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
                0.00    0.00  160138/163314      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [29]
                0.00    0.00  160138/163320      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [28]
                0.00    0.00  160138/248377      std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
-----------------------------------------------
                0.00    0.00     372/159756      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
                0.00    0.00     478/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [275]
                0.00    0.00     900/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [80]
                0.00    0.00  158006/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[36]     0.0    0.00    0.00  159756         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [36]
                0.00    0.00  159756/160138      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
-----------------------------------------------
                0.00    0.00  158801/158801      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*) [43]
[37]     0.0    0.00    0.00  158801         __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::deallocate(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [37]
-----------------------------------------------
                0.00    0.00  158801/158801      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*) [43]
[38]     0.0    0.00    0.00  158801         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::destroy<std::__detail::_Hash_node<maze::Cell*, false> >(std::__detail::_Hash_node<maze::Cell*, false>*) [38]
-----------------------------------------------
                0.00    0.00  158801/158801      std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
[39]     0.0    0.00    0.00  158801         __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocate(unsigned long, void const*) [39]
                0.00    0.00  158801/158801      __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::max_size() const [41]
-----------------------------------------------
                0.00    0.00  158801/158801      std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
[40]     0.0    0.00    0.00  158801         _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_ [40]
                0.00    0.00  158801/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00  158801/243062      operator new(unsigned long, void*) [24]
                0.00    0.00  158801/158801      std::__detail::_Hash_node<maze::Cell*, false>::_Hash_node<maze::Cell* const&>(maze::Cell* const&) [44]
-----------------------------------------------
                0.00    0.00  158801/158801      __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocate(unsigned long, void const*) [39]
[41]     0.0    0.00    0.00  158801         __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::max_size() const [41]
-----------------------------------------------
                0.00    0.00     795/158801      std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00  158006/158801      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[42]     0.0    0.00    0.00  158801         std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
                0.00    0.00  317602/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator() [14]
                0.00    0.00  158801/158801      __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocate(unsigned long, void const*) [39]
                0.00    0.00  158801/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00  158801/158801      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_ [40]
-----------------------------------------------
                0.00    0.00     397/158801      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKPN4maze4CellEjELb0EEEE9constructIS9_IRKSt21piecewise_construct_tSt5tupleIIRS7_EESF_IIEEEEEvPT_DpOT0_ [733]
                0.00    0.00  158404/158801      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<maze::Cell*, false>*) [195]
[43]     0.0    0.00    0.00  158801         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*) [43]
                0.00    0.00  317602/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator() [14]
                0.00    0.00  158801/158801      void __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::destroy<std::__detail::_Hash_node<maze::Cell*, false> >(std::__detail::_Hash_node<maze::Cell*, false>*) [38]
                0.00    0.00  158801/158801      __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::deallocate(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [37]
-----------------------------------------------
                0.00    0.00  158801/158801      _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_ [40]
[44]     0.0    0.00    0.00  158801         std::__detail::_Hash_node<maze::Cell*, false>::_Hash_node<maze::Cell* const&>(maze::Cell* const&) [44]
                0.00    0.00  158801/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
                0.00    0.00  158801/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
-----------------------------------------------
                0.00    0.00  158006/158006      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[45]     0.0    0.00    0.00  158006         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<maze::Cell*, false>*, std::__detail::_Hash_node<maze::Cell*, false> const*) const [45]
-----------------------------------------------
                                7183             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                               81292             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
[46]     0.0    0.00    0.00   88475         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                0.00    0.00   83683/248356      std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true> const&) [22]
                0.00    0.00    2401/248377      std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
                               80199             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
                                2401             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
-----------------------------------------------
                0.00    0.00    1241/84460       std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [173]
                0.00    0.00   83219/84460       std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
[47]     0.0    0.00    0.00   84460         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&) [47]
-----------------------------------------------
                                   2             void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
                                 808             std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*, unsigned long) const <cycle 3> [437]
                0.00    0.00    1927/835098      __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocate(unsigned long, void const*) [731]
                0.00    0.00   80199/835098      void std::allocator_traits<std::allocator<maze::Priority_and_cell> >::destroy<maze::Priority_and_cell>(std::allocator<maze::Priority_and_cell>&, maze::Priority_and_cell*) [1044]
[48]     0.0    0.00    0.00   82936         void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                0.00    0.00    1927/1927        void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [127]
                0.00    0.00    1282/164323      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::empty() const [27]
                0.00    0.00     798/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
                0.00    0.00     798/3588        std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [72]
                0.00    0.00     798/3588        std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&) [71]
                0.00    0.00     798/1196        std::tuple<maze::Cell* const&>::tuple(std::tuple<maze::Cell* const&>&&) [188]
                0.00    0.00     798/3588        std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [70]
                0.00    0.00       2/3           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator<std::pair<maze::Cell* const, unsigned int> >(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [498]
                                2725             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                                1927             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                                 744             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const <cycle 3> [33]
                                 744             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const <cycle 3> [30]
                                  10             std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                                  10             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
-----------------------------------------------
                                 398             std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                                 798             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00     794/835098      std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [283]
                0.00    0.00   79401/835098      void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [53]
[49]     0.0    0.00    0.00   81391         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00     397/3176        std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [81]
                0.00    0.00     397/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [78]
                0.00    0.00     397/3176        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [80]
                0.00    0.00     378/378         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*) const [368]
                                 794             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
                                 378             std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                                 378             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
-----------------------------------------------
                                   2             void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
                               80201             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00       2/835098      __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator*() const [796]
[50]     0.0    0.00    0.00   80203+2       void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
                0.00    0.00       2/5           std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_Hashtable_ebo_helper(std::equal_to<maze::Cell*> const&) [473]
                0.00    0.00       2/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
                                   2             std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [538]
                                   2             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                                   2             void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
-----------------------------------------------
                0.00    0.00   80199/80199       std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::operator->() const [859]
[51]     0.0    0.00    0.00   80199         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [51]
-----------------------------------------------
                0.00    0.00   79401/79401       void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
[52]     0.0    0.00    0.00   79401         decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int>&>(std::pair<maze::Cell* const, unsigned int>&) const [52]
                0.00    0.00   79401/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
-----------------------------------------------
                0.00    0.00     398/79401       std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::pop() [1032]
                0.00    0.00   79003/79401       std::__detail::_Insert<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert() [1161]
[53]     0.0    0.00    0.00   79401         void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [53]
                0.00    0.00  158802/835098      void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00   79401/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00   79401/835098      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
                0.00    0.00   79401/835098      void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [25]
-----------------------------------------------
                                 378             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00       1/835098      bool josh::is_in_container<std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*>(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*) [263]
                0.00    0.00     215/835098      std::remove_reference<std::allocator<maze::Priority_and_cell>&>::type&& std::move<std::allocator<maze::Priority_and_cell>&>(std::allocator<maze::Priority_and_cell>&) [1209]
                0.00    0.00     378/835098      std::pair<maze::Cell* const, unsigned int>& std::forward<std::pair<maze::Cell* const, unsigned int>&>(std::remove_reference<std::pair<maze::Cell* const, unsigned int>&>::type&) [1230]
                0.00    0.00     397/835098      std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [211]
                0.00    0.00     399/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [330]
                0.00    0.00     399/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [942]
                0.00    0.00     645/835098      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_base(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) [1000]
                0.00    0.00     756/835098      std::tuple_element<0ul, std::pair<maze::Cell* const, unsigned int> >::type& std::get<0ul, maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int>&) [1203]
                0.00    0.00     844/835098      std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::find(maze::Cell* const&) [1022]
                0.00    0.00     844/835098      std::__detail::_Node_const_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_const_iterator(std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false> const&) [1154]
                0.00    0.00     844/835098      bool std::__detail::operator==<std::pair<maze::Cell* const, unsigned int>, false>(std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, unsigned int>, false> const&, std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, unsigned int>, false> const&) [1169]
                0.00    0.00     844/835098      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_Vector_impl() [996]
                0.00    0.00    1554/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [819]
                0.00    0.00    2594/835098      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [867]
                0.00    0.00    3984/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) [944]
[54]     0.0    0.00    0.00   15076         std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
                                6184             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
                                2350             __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator--() <cycle 3> [109]
-----------------------------------------------
                                6184             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
                0.00    0.00     399/835098      std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const [290]
                0.00    0.00     797/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                0.00    0.00     797/835098      bool josh::is_in_container<std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*>(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*) [263]
[55]     0.0    0.00    0.00    8177         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
                                   1             bool __gnu_cxx::operator==<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) <cycle 3> [591]
-----------------------------------------------
                                 399             std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                                 378             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00      15/835098      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::size() const [426]
                0.00    0.00     215/835098      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_base(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) [1000]
                0.00    0.00     378/835098      __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::difference_type __gnu_cxx::operator-<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) [782]
                0.00    0.00     378/835098      maze::Cell* const& std::__pair_get<0ul>::__get<maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int>&) [972]
                0.00    0.00     378/835098      std::tuple_element<0ul, std::pair<maze::Cell* const, unsigned int> >::type& std::get<0ul, maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int>&) [1203]
                0.00    0.00     399/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [942]
                0.00    0.00     422/835098      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_Vector_impl() [996]
                0.00    0.00     777/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [353]
                0.00    0.00     798/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [330]
                0.00    0.00     996/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) [944]
                0.00    0.00    2392/835098      maze::AStarSolver::solve_maze() <cycle 1> [506]
[56]     0.0    0.00    0.00    7526+399     std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                0.00    0.00     399/399         std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::~allocator() [329]
                                1993             void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                                 400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector() <cycle 3> [261]
                                 399             std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
-----------------------------------------------
                0.00    0.00     556/6571        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [1145]
                0.00    0.00     981/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00    1193/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [196]
                0.00    0.00    1497/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [275]
                0.00    0.00    2344/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[57]     0.0    0.00    0.00    6571         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() [57]
-----------------------------------------------
                0.00    0.00    1984/6351        std::__detail::_Node_const_iterator<maze::Cell*, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<maze::Cell*, true, false> const&) [125]
                0.00    0.00    4367/6351        std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*) [68]
[58]     0.0    0.00    0.00    6351         std::__detail::_Node_iterator_base<maze::Cell*, false>::_Node_iterator_base(std::__detail::_Hash_node<maze::Cell*, false>*) [58]
-----------------------------------------------
                0.00    0.00    3018/6036        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() const [86]
                0.00    0.00    3018/6036        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() const [87]
[59]     0.0    0.00    0.00    6036         __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway* const* const&) [59]
-----------------------------------------------
                0.00    0.00    6036/6036        bool __gnu_cxx::operator==<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [85]
[60]     0.0    0.00    0.00    6036         __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const [60]
-----------------------------------------------
                0.00    0.00     825/5613        void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
                0.00    0.00    1596/5613        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [162]
                0.00    0.00    1596/5613        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE12_S_constructIS2_IRKS2_EEENSt9enable_ifIXsrNS4_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS3_PSA_DpOSB_ [161]
                0.00    0.00    1596/5613        void __gnu_cxx::new_allocator<maze::Pathway*>::construct<maze::Pathway*, maze::Pathway* const&>(maze::Pathway**, maze::Pathway* const&) [160]
[61]     0.0    0.00    0.00    5613         maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&) [61]
-----------------------------------------------
                0.00    0.00      20/5034        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00     399/5034        maze::DepthFirstSearchGenerator::make_maze() [575]
                0.00    0.00     923/5034        void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
                0.00    0.00    3692/5034        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const [217]
[62]     0.0    0.00    0.00    5034         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const [62]
-----------------------------------------------
                0.00    0.00     798/4923        maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
                0.00    0.00     825/4923        void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
                0.00    0.00    3300/4923        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const [240]
[63]     0.0    0.00    0.00    4923         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::size() const [63]
-----------------------------------------------
                0.00    0.00    4780/4780        bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [106]
[64]     0.0    0.00    0.00    4780         __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const [64]
-----------------------------------------------
                                1937             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
                                3874             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) <cycle 3> [126]
                0.00    0.00     798/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [946]
[65]     0.0    0.00    0.00    4672+1937    std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
                0.00    0.00     798/1991        std::__detail::_Prime_rehash_policy::_M_state() const [119]
                                  20             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) <cycle 3> [126]
                                  10             std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*, unsigned long) const <cycle 3> [437]
                                1937             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
-----------------------------------------------
                0.00    0.00     386/4461        std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [367]
                0.00    0.00    1927/4461        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                0.00    0.00    2148/4461        std::__detail::_Equal_helper<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [115]
[66]     0.0    0.00    0.00    4461         std::equal_to<maze::Cell*>::operator()(maze::Cell* const&, maze::Cell* const&) const [66]
-----------------------------------------------
                0.00    0.00     386/4461        std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [365]
                0.00    0.00    1927/4461        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                0.00    0.00    2148/4461        std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [113]
[67]     0.0    0.00    0.00    4461         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true> const&) [67]
-----------------------------------------------
                0.00    0.00     397/4367        _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeISt4pairIKPN4maze4CellEjELb0EEEE9constructIS9_IRKSt21piecewise_construct_tSt5tupleIIRS7_EESF_IIEEEEEvPT_DpOT0_ [733]
                0.00    0.00     790/4367        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
                0.00    0.00     795/4367        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00    2385/4367        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [107]
[68]     0.0    0.00    0.00    4367         std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*) [68]
                0.00    0.00    4367/6351        std::__detail::_Node_iterator_base<maze::Cell*, false>::_Node_iterator_base(std::__detail::_Hash_node<maze::Cell*, false>*) [58]
-----------------------------------------------
                0.00    0.00     399/3819        maze::DepthFirstSearchGenerator::make_maze() [575]
                0.00    0.00     400/3819        maze::Maze::~Maze() [580]
                0.00    0.00    3020/3819        maze::Maze::get_cell(unsigned int, unsigned int) [83]
[69]     0.0    0.00    0.00    3819         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::operator[](unsigned long) [69]
-----------------------------------------------
                0.00    0.00     398/3588        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
                0.00    0.00     398/3588        void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
                0.00    0.00     398/3588        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
                0.00    0.00     798/3588        void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00     798/3588        maze::Cell* const& std::__pair_get<0ul>::__const_get<maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int> const&) [970]
                0.00    0.00     798/3588        void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
[70]     0.0    0.00    0.00    3588         std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [70]
-----------------------------------------------
                0.00    0.00     398/3588        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
                0.00    0.00     398/3588        void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
                0.00    0.00     398/3588        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
                0.00    0.00     798/3588        void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00     798/3588        maze::Cell* const& std::__pair_get<0ul>::__const_get<maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int> const&) [970]
                0.00    0.00     798/3588        void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
[71]     0.0    0.00    0.00    3588         std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&) [71]
-----------------------------------------------
                0.00    0.00     398/3588        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
                0.00    0.00     398/3588        void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
                0.00    0.00     398/3588        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
                0.00    0.00     798/3588        void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00     798/3588        std::tuple_element<0ul, std::pair<maze::Cell* const, unsigned int> >::type const& std::get<0ul, maze::Cell* const, unsigned int>(std::pair<maze::Cell* const, unsigned int> const&) [1202]
                0.00    0.00     798/3588        void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
[72]     0.0    0.00    0.00    3588         std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [72]
-----------------------------------------------
                0.00    0.00    1191/3562        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
                0.00    0.00    2371/3562        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [108]
[73]     0.0    0.00    0.00    3562         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() const [73]
-----------------------------------------------
                0.00    0.00       3/3499        maze::SVGSave::persist_maze() [581]
                0.00    0.00    3496/3499        maze::DepthFirstSearchGenerator::make_maze() [575]
[74]     0.0    0.00    0.00    3499         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator->() const [74]
-----------------------------------------------
                0.00    0.00      12/3230        std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > const&) [432]
                0.00    0.00     820/3230        void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                0.00    0.00    2398/3230        std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<maze::Cell*, false> >(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [102]
[75]     0.0    0.00    0.00    3230         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [75]
-----------------------------------------------
                0.00    0.00    3230/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
[76]     0.0    0.00    0.00    3230         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [76]
-----------------------------------------------
                0.00    0.00       6/3230        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
                0.00    0.00       6/3230        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
                0.00    0.00     410/3230        void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                0.00    0.00     410/3230        std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                0.00    0.00    1199/3230        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
                0.00    0.00    1199/3230        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
[77]     0.0    0.00    0.00    3230         std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
                0.00    0.00    3230/3230        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [76]
-----------------------------------------------
                0.00    0.00       6/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00     397/3182        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00     795/3182        std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00    1984/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
[78]     0.0    0.00    0.00    3182         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [78]
                0.00    0.00    3182/3182        std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [79]
-----------------------------------------------
                0.00    0.00    3182/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [78]
[79]     0.0    0.00    0.00    3182         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [79]
                0.00    0.00    3182/163320      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [28]
                0.00    0.00    3182/248377      std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
-----------------------------------------------
                0.00    0.00     397/3176        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00    2779/3176        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [96]
[80]     0.0    0.00    0.00    3176         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [80]
                0.00    0.00    2148/2148        std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const [114]
                0.00    0.00    1076/319511      std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
                0.00    0.00     900/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [36]
-----------------------------------------------
                0.00    0.00     397/3176        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00     795/3176        std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00    1984/3176        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
[81]     0.0    0.00    0.00    3176         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [81]
                0.00    0.00    3176/163314      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [29]
                0.00    0.00    3176/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
-----------------------------------------------
                                   5             std::allocator<maze::Priority_and_cell>::allocator(std::allocator<maze::Priority_and_cell> const&) <cycle 3> [354]
                                 404             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
                                2725             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                0.00    0.00       5/835098      __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::max_size() const [790]
                0.00    0.00       5/835098      std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [870]
                0.00    0.00      10/835098      __gnu_cxx::new_allocator<maze::Priority_and_cell>::new_allocator() [717]
[82]     0.0    0.00    0.00    3154         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                0.00    0.00    1927/4461        std::equal_to<maze::Cell*>::operator()(maze::Cell* const&, maze::Cell* const&) const [66]
                0.00    0.00    1927/4461        std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true> const&) [67]
                0.00    0.00     798/798         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const [268]
                0.00    0.00     399/243062      operator new(unsigned long, void*) [24]
                0.00    0.00      35/40          std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) <cycle 4> [380]
                                1927             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) <cycle 3> [126]
                                 399             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
-----------------------------------------------
                0.00    0.00       2/3099        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00    3097/3099        maze::DepthFirstSearchGenerator::make_maze() [575]
[83]     0.0    0.00    0.00    3099         maze::Maze::get_cell(unsigned int, unsigned int) [83]
                0.00    0.00    3020/3040        std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::operator[](unsigned long) [84]
                0.00    0.00    3020/3819        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::operator[](unsigned long) [69]
-----------------------------------------------
                0.00    0.00      20/3040        maze::Maze::~Maze() [580]
                0.00    0.00    3020/3040        maze::Maze::get_cell(unsigned int, unsigned int) [83]
[84]     0.0    0.00    0.00    3040         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::operator[](unsigned long) [84]
-----------------------------------------------
                0.00    0.00    3018/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [88]
[85]     0.0    0.00    0.00    3018         bool __gnu_cxx::operator==<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [85]
                0.00    0.00    6036/6036        __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const [60]
-----------------------------------------------
                0.00    0.00    3018/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [88]
[86]     0.0    0.00    0.00    3018         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() const [86]
                0.00    0.00    3018/6036        __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway* const* const&) [59]
-----------------------------------------------
                0.00    0.00    3018/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [88]
[87]     0.0    0.00    0.00    3018         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() const [87]
                0.00    0.00    3018/6036        __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway* const* const&) [59]
-----------------------------------------------
                0.00    0.00       1/3018        maze::SVGSave::persist_maze() [581]
                0.00    0.00    3017/3018        maze::Cell::has_pathway() [89]
[88]     0.0    0.00    0.00    3018         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [88]
                0.00    0.00    3018/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() const [86]
                0.00    0.00    3018/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() const [87]
                0.00    0.00    3018/3018        bool __gnu_cxx::operator==<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [85]
-----------------------------------------------
                0.00    0.00    3017/3017        maze::DepthFirstSearchGenerator::make_maze() [575]
[89]     0.0    0.00    0.00    3017         maze::Cell::has_pathway() [89]
                0.00    0.00    3017/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [88]
-----------------------------------------------
                                 398             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                                1594             std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) <cycle 3> [92]
                0.00    0.00       1/835098      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::erase(maze::Cell* const&) [600]
                0.00    0.00       2/835098      std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > const&) [515]
                0.00    0.00       5/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
                0.00    0.00     398/835098      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::pop_back() [271]
                0.00    0.00     796/835098      void std::pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [272]
[90]     0.0    0.00    0.00    2796+398     void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                0.00    0.00   81292/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
                0.00    0.00   81292/248377      std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
                              243877             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                               81292             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) <cycle 3> [46]
                                1194             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                                 796             std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) <cycle 3> [92]
                                 398             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
-----------------------------------------------
                0.00    0.00     949/2795        __gnu_cxx::new_allocator<maze::Cell*>::allocate(unsigned long, void const*) [215]
                0.00    0.00    1846/2795        std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__maxsize_helper<std::allocator<maze::Cell*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_max_size<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [133]
[91]     0.0    0.00    0.00    2795         __gnu_cxx::new_allocator<maze::Cell*>::max_size() const [91]
-----------------------------------------------
                                 394             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                                 796             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                0.00    0.00       5/835098      std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, unsigned int> > const&>(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [1137]
                0.00    0.00     798/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [939]
                0.00    0.00     798/835098      std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const [267]
[92]     0.0    0.00    0.00    2791         std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) <cycle 3> [92]
                                1594             void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
-----------------------------------------------
                0.00    0.00    2789/2789        std::_Niter_base<maze::Cell**>::iterator_type std::__niter_base<maze::Cell**>(maze::Cell**) [94]
[93]     0.0    0.00    0.00    2789         std::_Iter_base<maze::Cell**, false>::_S_base(maze::Cell**) [93]
-----------------------------------------------
                0.00    0.00      20/2789        maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [418]
                0.00    0.00    2769/2789        maze::Cell** std::__copy_move_a2<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [222]
[94]     0.0    0.00    0.00    2789         std::_Niter_base<maze::Cell**>::iterator_type std::__niter_base<maze::Cell**>(maze::Cell**) [94]
                0.00    0.00    2789/2789        std::_Iter_base<maze::Cell**, false>::_S_base(maze::Cell**) [93]
-----------------------------------------------
                0.00    0.00     399/2783        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     798/2783        maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
                0.00    0.00    1586/2783        maze::DepthFirstSearchGenerator::make_maze() [575]
[95]     0.0    0.00    0.00    2783         maze::Cell::get_x_position() [95]
-----------------------------------------------
                0.00    0.00     795/2779        std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00    1984/2779        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
[96]     0.0    0.00    0.00    2779         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [96]
                0.00    0.00    2779/3176        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [80]
-----------------------------------------------
                0.00    0.00      20/2761        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00      31/2761        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [391]
                0.00    0.00     864/2761        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
                0.00    0.00    1846/2761        void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[97]     0.0    0.00    0.00    2761         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [97]
-----------------------------------------------
                0.00    0.00     825/2475        __gnu_cxx::new_allocator<maze::Pathway*>::allocate(unsigned long, void const*) [239]
                0.00    0.00    1650/2475        std::enable_if<std::allocator_traits<std::allocator<maze::Pathway*> >::__maxsize_helper<std::allocator<maze::Pathway*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Pathway*> >::_S_max_size<std::allocator<maze::Pathway*> const>(std::allocator<maze::Pathway*> const&) [149]
[98]     0.0    0.00    0.00    2475         __gnu_cxx::new_allocator<maze::Pathway*>::max_size() const [98]
-----------------------------------------------
                0.00    0.00    2475/2475        std::_Niter_base<maze::Pathway**>::iterator_type std::__niter_base<maze::Pathway**>(maze::Pathway**) [100]
[99]     0.0    0.00    0.00    2475         std::_Iter_base<maze::Pathway**, false>::_S_base(maze::Pathway**) [99]
-----------------------------------------------
                0.00    0.00    2475/2475        maze::Pathway** std::__copy_move_a2<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [246]
[100]    0.0    0.00    0.00    2475         std::_Niter_base<maze::Pathway**>::iterator_type std::__niter_base<maze::Pathway**>(maze::Pathway**) [100]
                0.00    0.00    2475/2475        std::_Iter_base<maze::Pathway**, false>::_S_base(maze::Pathway**) [99]
-----------------------------------------------
                                  10             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
                                1993             std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                0.00    0.00     400/835098      std::remove_reference<std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&>::type&& std::move<std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&>(std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&) [1214]
[101]    0.0    0.00    0.00    2403         void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                0.00    0.00     410/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [155]
                0.00    0.00     410/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
                0.00    0.00     400/164323      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::empty() const [27]
                                5206             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
-----------------------------------------------
                0.00    0.00    1199/2398        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
                0.00    0.00    1199/2398        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
[102]    0.0    0.00    0.00    2398         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<maze::Cell*, false> >(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [102]
                0.00    0.00    2398/3230        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [75]
-----------------------------------------------
                0.00    0.00    2392/2392        std::_Tuple_impl<0ul, maze::Cell* const&>::_M_head(std::_Tuple_impl<0ul, maze::Cell* const&>&) [105]
[103]    0.0    0.00    0.00    2392         std::_Head_base<0ul, maze::Cell* const&, false>::_M_head(std::_Head_base<0ul, maze::Cell* const&, false>&) [103]
-----------------------------------------------
                0.00    0.00    1196/2392        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(maze::Cell* const&) [184]
                0.00    0.00    1196/2392        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
[104]    0.0    0.00    0.00    2392         std::_Head_base<0ul, maze::Cell* const&, false>::_Head_base(maze::Cell* const&) [104]
-----------------------------------------------
                0.00    0.00    1196/2392        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
                0.00    0.00    1196/2392        std::__add_ref<maze::Cell* const&>::type std::__get_helper<0ul, maze::Cell* const&>(std::_Tuple_impl<0ul, maze::Cell* const&>&) [190]
[105]    0.0    0.00    0.00    2392         std::_Tuple_impl<0ul, maze::Cell* const&>::_M_head(std::_Tuple_impl<0ul, maze::Cell* const&>&) [105]
                0.00    0.00    2392/2392        std::_Head_base<0ul, maze::Cell* const&, false>::_M_head(std::_Head_base<0ul, maze::Cell* const&, false>&) [103]
-----------------------------------------------
                0.00    0.00     400/2390        maze::Maze::~Maze() [580]
                0.00    0.00     801/2390        maze::SVGSave::persist_maze() [581]
                0.00    0.00    1189/2390        maze::AStarSolver::solve_maze() <cycle 1> [506]
[106]    0.0    0.00    0.00    2390         bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [106]
                0.00    0.00    4780/4780        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const [64]
-----------------------------------------------
                0.00    0.00    1191/2385        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::end() [209]
                0.00    0.00    1194/2385        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
[107]    0.0    0.00    0.00    2385         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [107]
                0.00    0.00    2385/4367        std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*) [68]
-----------------------------------------------
                0.00    0.00       6/2371        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00    1172/2371        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
                0.00    0.00    1193/2371        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [196]
[108]    0.0    0.00    0.00    2371         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [108]
                0.00    0.00    2371/3562        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() const [73]
-----------------------------------------------
                                2350             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
[109]    0.0    0.00    0.00    2350         __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator--() <cycle 3> [109]
                                   1             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
-----------------------------------------------
                0.00    0.00     756/2344        std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [283]
                0.00    0.00    1588/2344        std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [211]
[110]    0.0    0.00    0.00    2344         std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [110]
                0.00    0.00    1191/1191        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [205]
                0.00    0.00     794/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
-----------------------------------------------
                0.00    0.00       6/2154        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00    2148/2154        std::__detail::_Equal_helper<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [115]
[111]    0.0    0.00    0.00    2154         maze::Cell*& std::__detail::_Identity::operator()<maze::Cell*&>(maze::Cell*&) const [111]
                0.00    0.00    2154/2154        maze::Cell*& std::forward<maze::Cell*&>(std::remove_reference<maze::Cell*&>::type&) [112]
-----------------------------------------------
                0.00    0.00    2154/2154        maze::Cell*& std::__detail::_Identity::operator()<maze::Cell*&>(maze::Cell*&) const [111]
[112]    0.0    0.00    0.00    2154         maze::Cell*& std::forward<maze::Cell*&>(std::remove_reference<maze::Cell*&>::type&) [112]
-----------------------------------------------
                0.00    0.00    2148/2148        std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const [114]
[113]    0.0    0.00    0.00    2148         std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [113]
                0.00    0.00    2148/4461        std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true> const&) [67]
-----------------------------------------------
                0.00    0.00    2148/2148        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [80]
[114]    0.0    0.00    0.00    2148         std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const [114]
                0.00    0.00    2148/162286      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [31]
                0.00    0.00    2148/2148        std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [113]
                0.00    0.00    2148/2148        std::__detail::_Equal_helper<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [115]
-----------------------------------------------
                0.00    0.00    2148/2148        std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const [114]
[115]    0.0    0.00    0.00    2148         std::__detail::_Equal_helper<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [115]
                0.00    0.00    2148/2154        maze::Cell*& std::__detail::_Identity::operator()<maze::Cell*&>(maze::Cell*&) const [111]
                0.00    0.00    2148/4461        std::equal_to<maze::Cell*>::operator()(maze::Cell* const&, maze::Cell* const&) const [66]
-----------------------------------------------
                0.00    0.00     403/2053        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
                0.00    0.00    1650/2053        void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[116]    0.0    0.00    0.00    2053         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() [116]
-----------------------------------------------
                                 399             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                                 399             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
                                 399             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                0.00    0.00       5/835098      std::allocator<std::pair<maze::Cell* const, unsigned int> > const& std::forward<std::allocator<std::pair<maze::Cell* const, unsigned int> > const&>(std::remove_reference<std::allocator<std::pair<maze::Cell* const, unsigned int> > const&>::type&) [1225]
                0.00    0.00      15/835098      maze::Priority_and_cell* std::__uninitialized_move_if_noexcept_a<maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell> >(maze::Priority_and_cell*, maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [428]
                0.00    0.00     399/835098      __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::base() const [795]
                0.00    0.00     798/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [330]
[117]    0.0    0.00    0.00    2015+399     std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                                 394             std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) <cycle 3> [92]
                                   5             std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) <cycle 3> [471]
                                 399             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
-----------------------------------------------
                                   2             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                                  10             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
                                 808             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
                0.00    0.00     398/835098      std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::operator[](maze::Cell* const&) [1023]
                0.00    0.00     398/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::empty() const [835]
                0.00    0.00     398/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::top() const [834]
[118]    0.0    0.00    0.00    2014         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                0.00    0.00     410/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [156]
                0.00    0.00     410/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
                                 820             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                                 398             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
-----------------------------------------------
                0.00    0.00     398/1991        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
                0.00    0.00     795/1991        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00     798/1991        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
[119]    0.0    0.00    0.00    1991         std::__detail::_Prime_rehash_policy::_M_state() const [119]
-----------------------------------------------
                0.00    0.00     399/1990        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     793/1990        maze::DepthFirstSearchGenerator::make_maze() [575]
                0.00    0.00     798/1990        maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
[120]    0.0    0.00    0.00    1990         maze::Cell::get_y_position() [120]
-----------------------------------------------
                0.00    0.00     399/1990        maze::Maze::~Maze() [580]
                0.00    0.00     793/1990        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     798/1990        maze::SVGSave::persist_maze() [581]
[121]    0.0    0.00    0.00    1990         __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator++() [121]
-----------------------------------------------
                0.00    0.00     399/1990        maze::Maze::~Maze() [580]
                0.00    0.00     793/1990        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     798/1990        maze::SVGSave::persist_maze() [581]
[122]    0.0    0.00    0.00    1990         __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator*() const [122]
-----------------------------------------------
                0.00    0.00    1984/1984        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::find(maze::Cell* const&) [124]
[123]    0.0    0.00    0.00    1984         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
                0.00    0.00    1984/3176        std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [81]
                0.00    0.00    1984/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [78]
                0.00    0.00    1984/2779        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [96]
                0.00    0.00    1194/2385        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [107]
                0.00    0.00     790/4367        std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*) [68]
-----------------------------------------------
                0.00    0.00     793/1984        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00    1191/1984        bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [203]
[124]    0.0    0.00    0.00    1984         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::find(maze::Cell* const&) [124]
                0.00    0.00    1984/1984        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [123]
-----------------------------------------------
                0.00    0.00     793/1984        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00    1191/1984        bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [203]
[125]    0.0    0.00    0.00    1984         std::__detail::_Node_const_iterator<maze::Cell*, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<maze::Cell*, true, false> const&) [125]
                0.00    0.00    1984/6351        std::__detail::_Node_iterator_base<maze::Cell*, false>::_Node_iterator_base(std::__detail::_Hash_node<maze::Cell*, false>*) [58]
-----------------------------------------------
                                  20             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
                                1927             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
[126]    0.0    0.00    0.00    1947         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) <cycle 3> [126]
                0.00    0.00      10/15          std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&) [427]
                                3874             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
-----------------------------------------------
                0.00    0.00    1927/1927        void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
[127]    0.0    0.00    0.00    1927         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [127]
-----------------------------------------------
                0.00    0.00      20/1866        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00    1846/1866        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::max_size() const [130]
[128]    0.0    0.00    0.00    1866         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [128]
-----------------------------------------------
                0.00    0.00    1846/1846        std::_Iter_base<std::move_iterator<maze::Cell**>, true>::_S_base(std::move_iterator<maze::Cell**>) [131]
[129]    0.0    0.00    0.00    1846         std::move_iterator<maze::Cell**>::base() const [129]
-----------------------------------------------
                0.00    0.00    1846/1846        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const [217]
[130]    0.0    0.00    0.00    1846         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::max_size() const [130]
                0.00    0.00    1846/1846        std::allocator_traits<std::allocator<maze::Cell*> >::max_size(std::allocator<maze::Cell*> const&) [134]
                0.00    0.00    1846/1866        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [128]
-----------------------------------------------
                0.00    0.00    1846/1846        std::_Miter_base<std::move_iterator<maze::Cell**> >::iterator_type std::__miter_base<std::move_iterator<maze::Cell**> >(std::move_iterator<maze::Cell**>) [135]
[131]    0.0    0.00    0.00    1846         std::_Iter_base<std::move_iterator<maze::Cell**>, true>::_S_base(std::move_iterator<maze::Cell**>) [131]
                0.00    0.00    1846/1846        std::move_iterator<maze::Cell**>::base() const [129]
-----------------------------------------------
                0.00    0.00    1846/1846        std::move_iterator<maze::Cell**> std::__make_move_if_noexcept_iterator<maze::Cell**, std::move_iterator<maze::Cell**> >(maze::Cell**) [136]
[132]    0.0    0.00    0.00    1846         std::move_iterator<maze::Cell**>::move_iterator(maze::Cell**) [132]
-----------------------------------------------
                0.00    0.00    1846/1846        std::allocator_traits<std::allocator<maze::Cell*> >::max_size(std::allocator<maze::Cell*> const&) [134]
[133]    0.0    0.00    0.00    1846         std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__maxsize_helper<std::allocator<maze::Cell*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_max_size<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [133]
                0.00    0.00    1846/2795        __gnu_cxx::new_allocator<maze::Cell*>::max_size() const [91]
-----------------------------------------------
                0.00    0.00    1846/1846        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::max_size() const [130]
[134]    0.0    0.00    0.00    1846         std::allocator_traits<std::allocator<maze::Cell*> >::max_size(std::allocator<maze::Cell*> const&) [134]
                0.00    0.00    1846/1846        std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__maxsize_helper<std::allocator<maze::Cell*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_max_size<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [133]
-----------------------------------------------
                0.00    0.00    1846/1846        maze::Cell** std::copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [226]
[135]    0.0    0.00    0.00    1846         std::_Miter_base<std::move_iterator<maze::Cell**> >::iterator_type std::__miter_base<std::move_iterator<maze::Cell**> >(std::move_iterator<maze::Cell**>) [135]
                0.00    0.00    1846/1846        std::_Iter_base<std::move_iterator<maze::Cell**>, true>::_S_base(std::move_iterator<maze::Cell**>) [131]
-----------------------------------------------
                0.00    0.00    1846/1846        maze::Cell** std::__uninitialized_move_if_noexcept_a<maze::Cell**, maze::Cell**, std::allocator<maze::Cell*> >(maze::Cell**, maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [225]
[136]    0.0    0.00    0.00    1846         std::move_iterator<maze::Cell**> std::__make_move_if_noexcept_iterator<maze::Cell**, std::move_iterator<maze::Cell**> >(maze::Cell**) [136]
                0.00    0.00    1846/1846        std::move_iterator<maze::Cell**>::move_iterator(maze::Cell**) [132]
-----------------------------------------------
                0.00    0.00     399/1799        maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
                0.00    0.00    1400/1799        maze::Pathway::get_other_cell(maze::Cell*) [227]
[137]    0.0    0.00    0.00    1799         maze::Pathway::get_first_cell() [137]
-----------------------------------------------
                0.00    0.00    1787/1787        void std::_Destroy<maze::Cell**>(maze::Cell**, maze::Cell**) [140]
[138]    0.0    0.00    0.00    1787         void std::_Destroy_aux<true>::__destroy<maze::Cell**>(maze::Cell**, maze::Cell**) [138]
-----------------------------------------------
                0.00    0.00     864/1787        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Vector_base() [231]
                0.00    0.00     923/1787        void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[139]    0.0    0.00    0.00    1787         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate(maze::Cell**, unsigned long) [139]
                0.00    0.00     943/949         __gnu_cxx::new_allocator<maze::Cell*>::deallocate(maze::Cell**, unsigned long) [214]
-----------------------------------------------
                0.00    0.00    1787/1787        void std::_Destroy<maze::Cell**, maze::Cell*>(maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [141]
[140]    0.0    0.00    0.00    1787         void std::_Destroy<maze::Cell**>(maze::Cell**, maze::Cell**) [140]
                0.00    0.00    1787/1787        void std::_Destroy_aux<true>::__destroy<maze::Cell**>(maze::Cell**, maze::Cell**) [138]
-----------------------------------------------
                0.00    0.00     864/1787        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
                0.00    0.00     923/1787        void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[141]    0.0    0.00    0.00    1787         void std::_Destroy<maze::Cell**, maze::Cell*>(maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [141]
                0.00    0.00    1787/1787        void std::_Destroy<maze::Cell**>(maze::Cell**, maze::Cell**) [140]
-----------------------------------------------
                0.00    0.00       2/1761        std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
                0.00    0.00       5/1761        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
                0.00    0.00       6/1761        std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const [449]
                0.00    0.00     825/1761        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const [240]
                0.00    0.00     923/1761        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const [217]
[142]    0.0    0.00    0.00    1761         unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [142]
-----------------------------------------------
                0.00    0.00     422/1719        std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::end() [1021]
                0.00    0.00    1297/1719        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [867]
[143]    0.0    0.00    0.00    1719         __static_initialization_and_destruction_0(int, int) [143]
-----------------------------------------------
                0.00    0.00    1650/1650        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::max_size() const [146]
[144]    0.0    0.00    0.00    1650         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() const [144]
-----------------------------------------------
                0.00    0.00    1650/1650        std::_Iter_base<std::move_iterator<maze::Pathway**>, true>::_S_base(std::move_iterator<maze::Pathway**>) [147]
[145]    0.0    0.00    0.00    1650         std::move_iterator<maze::Pathway**>::base() const [145]
-----------------------------------------------
                0.00    0.00    1650/1650        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const [240]
[146]    0.0    0.00    0.00    1650         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::max_size() const [146]
                0.00    0.00    1650/1650        std::allocator_traits<std::allocator<maze::Pathway*> >::max_size(std::allocator<maze::Pathway*> const&) [150]
                0.00    0.00    1650/1650        std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() const [144]
-----------------------------------------------
                0.00    0.00    1650/1650        std::_Miter_base<std::move_iterator<maze::Pathway**> >::iterator_type std::__miter_base<std::move_iterator<maze::Pathway**> >(std::move_iterator<maze::Pathway**>) [151]
[147]    0.0    0.00    0.00    1650         std::_Iter_base<std::move_iterator<maze::Pathway**>, true>::_S_base(std::move_iterator<maze::Pathway**>) [147]
                0.00    0.00    1650/1650        std::move_iterator<maze::Pathway**>::base() const [145]
-----------------------------------------------
                0.00    0.00    1650/1650        std::move_iterator<maze::Pathway**> std::__make_move_if_noexcept_iterator<maze::Pathway**, std::move_iterator<maze::Pathway**> >(maze::Pathway**) [152]
[148]    0.0    0.00    0.00    1650         std::move_iterator<maze::Pathway**>::move_iterator(maze::Pathway**) [148]
-----------------------------------------------
                0.00    0.00    1650/1650        std::allocator_traits<std::allocator<maze::Pathway*> >::max_size(std::allocator<maze::Pathway*> const&) [150]
[149]    0.0    0.00    0.00    1650         std::enable_if<std::allocator_traits<std::allocator<maze::Pathway*> >::__maxsize_helper<std::allocator<maze::Pathway*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Pathway*> >::_S_max_size<std::allocator<maze::Pathway*> const>(std::allocator<maze::Pathway*> const&) [149]
                0.00    0.00    1650/2475        __gnu_cxx::new_allocator<maze::Pathway*>::max_size() const [98]
-----------------------------------------------
                0.00    0.00    1650/1650        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::max_size() const [146]
[150]    0.0    0.00    0.00    1650         std::allocator_traits<std::allocator<maze::Pathway*> >::max_size(std::allocator<maze::Pathway*> const&) [150]
                0.00    0.00    1650/1650        std::enable_if<std::allocator_traits<std::allocator<maze::Pathway*> >::__maxsize_helper<std::allocator<maze::Pathway*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Pathway*> >::_S_max_size<std::allocator<maze::Pathway*> const>(std::allocator<maze::Pathway*> const&) [149]
-----------------------------------------------
                0.00    0.00    1650/1650        maze::Pathway** std::copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [250]
[151]    0.0    0.00    0.00    1650         std::_Miter_base<std::move_iterator<maze::Pathway**> >::iterator_type std::__miter_base<std::move_iterator<maze::Pathway**> >(std::move_iterator<maze::Pathway**>) [151]
                0.00    0.00    1650/1650        std::_Iter_base<std::move_iterator<maze::Pathway**>, true>::_S_base(std::move_iterator<maze::Pathway**>) [147]
-----------------------------------------------
                0.00    0.00    1650/1650        maze::Pathway** std::__uninitialized_move_if_noexcept_a<maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*> >(maze::Pathway**, maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [249]
[152]    0.0    0.00    0.00    1650         std::move_iterator<maze::Pathway**> std::__make_move_if_noexcept_iterator<maze::Pathway**, std::move_iterator<maze::Pathway**> >(maze::Pathway**) [152]
                0.00    0.00    1650/1650        std::move_iterator<maze::Pathway**>::move_iterator(maze::Pathway**) [148]
-----------------------------------------------
                0.00    0.00     813/1626        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::begin() const [254]
                0.00    0.00     813/1626        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::end() const [253]
[153]    0.0    0.00    0.00    1626         __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::__normal_iterator(maze::Cell* const* const&) [153]
-----------------------------------------------
                0.00    0.00      40/1626        std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [382]
                0.00    0.00    1586/1626        bool __gnu_cxx::operator==<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [284]
[154]    0.0    0.00    0.00    1626         __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::base() const [154]
-----------------------------------------------
                0.00    0.00       6/1615        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
                0.00    0.00     410/1615        void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
                0.00    0.00    1199/1615        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
[155]    0.0    0.00    0.00    1615         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [155]
-----------------------------------------------
                0.00    0.00       6/1615        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
                0.00    0.00     410/1615        std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) <cycle 3> [118]
                0.00    0.00    1199/1615        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
[156]    0.0    0.00    0.00    1615         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [156]
                0.00    0.00    1615/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [157]
-----------------------------------------------
                0.00    0.00    1615/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [156]
[157]    0.0    0.00    0.00    1615         __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [157]
-----------------------------------------------
                0.00    0.00       6/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
                0.00    0.00       6/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
                0.00    0.00     796/1604        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
                0.00    0.00     796/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [343]
[158]    0.0    0.00    0.00    1604         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [158]
-----------------------------------------------
                0.00    0.00       4/1602        void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
                0.00    0.00     395/1602        std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [332]
                0.00    0.00    1203/1602        std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__construct_helper<maze::Cell*, maze::Cell* const&>::value, void>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_construct<maze::Cell*, maze::Cell* const&>(std::allocator<maze::Cell*>&, maze::Cell**, maze::Cell* const&) [179]
[159]    0.0    0.00    0.00    1602         _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [159]
                0.00    0.00    1602/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00    1602/243062      operator new(unsigned long, void*) [24]
-----------------------------------------------
                0.00    0.00    1596/1596        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE12_S_constructIS2_IRKS2_EEENSt9enable_ifIXsrNS4_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS3_PSA_DpOSB_ [161]
[160]    0.0    0.00    0.00    1596         void __gnu_cxx::new_allocator<maze::Pathway*>::construct<maze::Pathway*, maze::Pathway* const&>(maze::Pathway**, maze::Pathway* const&) [160]
                0.00    0.00    1596/5613        maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&) [61]
                0.00    0.00    1596/243062      operator new(unsigned long, void*) [24]
-----------------------------------------------
                0.00    0.00    1596/1596        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [162]
[161]    0.0    0.00    0.00    1596         _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE12_S_constructIS2_IRKS2_EEENSt9enable_ifIXsrNS4_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS3_PSA_DpOSB_ [161]
                0.00    0.00    1596/5613        maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&) [61]
                0.00    0.00    1596/1596        void __gnu_cxx::new_allocator<maze::Pathway*>::construct<maze::Pathway*, maze::Pathway* const&>(maze::Pathway**, maze::Pathway* const&) [160]
-----------------------------------------------
                0.00    0.00     771/1596        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&) [163]
                0.00    0.00     825/1596        void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[162]    0.0    0.00    0.00    1596         _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [162]
                0.00    0.00    1596/5613        maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&) [61]
                0.00    0.00    1596/1596        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE12_S_constructIS2_IRKS2_EEENSt9enable_ifIXsrNS4_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS3_PSA_DpOSB_ [161]
-----------------------------------------------
                0.00    0.00     399/1596        maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
                0.00    0.00     399/1596        maze::SVGSave::persist_maze() [581]
                0.00    0.00     798/1596        maze::Cell::add_pathway(maze::Pathway*) [264]
[163]    0.0    0.00    0.00    1596         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&) [163]
                0.00    0.00     825/825         void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
                0.00    0.00     771/1596        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [162]
-----------------------------------------------
                0.00    0.00    1596/1596        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [941]
[164]    0.0    0.00    0.00    1596         std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, unsigned int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [164]
-----------------------------------------------
                0.00    0.00     795/1590        std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool, void>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [278]
                0.00    0.00     795/1590        std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [282]
[165]    0.0    0.00    0.00    1590         std::__detail::_Node_iterator<maze::Cell*, true, false>&& std::forward<std::__detail::_Node_iterator<maze::Cell*, true, false> >(std::remove_reference<std::__detail::_Node_iterator<maze::Cell*, true, false> >::type&) [165]
-----------------------------------------------
                0.00    0.00     795/1590        std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool, void>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [278]
                0.00    0.00     795/1590        std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [282]
[166]    0.0    0.00    0.00    1590         bool&& std::forward<bool>(std::remove_reference<bool>::type&) [166]
-----------------------------------------------
                                 794             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00     794/835098      std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [110]
[167]    0.0    0.00    0.00    1588         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
                0.00    0.00     768/319511      std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
                0.00    0.00     396/396         std::remove_reference<maze::Priority_and_cell*&>::type&& std::move<maze::Priority_and_cell*&>(maze::Priority_and_cell*&) [357]
                0.00    0.00     372/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [36]
                                 397             std::allocator<maze::Priority_and_cell>::allocator(std::allocator<maze::Priority_and_cell> const&) <cycle 3> [354]
-----------------------------------------------
                0.00    0.00       1/1584        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [602]
                0.00    0.00     621/1584        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [345]
                0.00    0.00     962/1584        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
[168]    0.0    0.00    0.00    1584         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() [168]
-----------------------------------------------
                0.00    0.00     509/1364        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [296]
                0.00    0.00     855/1364        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
[169]    0.0    0.00    0.00    1364         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [169]
                0.00    0.00    1364/248377      std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&) [19]
-----------------------------------------------
                0.00    0.00     504/1359        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [299]
                0.00    0.00     855/1359        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
[170]    0.0    0.00    0.00    1359         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [170]
                0.00    0.00    1359/248356      std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true> const&) [22]
-----------------------------------------------
                0.00    0.00     206/1343        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [345]
                0.00    0.00     367/1343        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [298]
                0.00    0.00     372/1343        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
                0.00    0.00     398/1343        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [601]
[171]    0.0    0.00    0.00    1343         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const [171]
-----------------------------------------------
                0.00    0.00     399/1298        maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
                0.00    0.00     899/1298        maze::Pathway::get_other_cell(maze::Cell*) [227]
[172]    0.0    0.00    0.00    1298         maze::Pathway::get_second_cell() [172]
-----------------------------------------------
                0.00    0.00     386/1241        std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [366]
                0.00    0.00     855/1241        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
[173]    0.0    0.00    0.00    1241         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [173]
                0.00    0.00    1241/84460       std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&) [47]
-----------------------------------------------
                0.00    0.00    1228/1228        void std::_Destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**) [176]
[174]    0.0    0.00    0.00    1228         void std::_Destroy_aux<true>::__destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**) [174]
-----------------------------------------------
                0.00    0.00     403/1228        std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::~_Vector_base() [311]
                0.00    0.00     825/1228        void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[175]    0.0    0.00    0.00    1228         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_deallocate(maze::Pathway**, unsigned long) [175]
                0.00    0.00     825/825         __gnu_cxx::new_allocator<maze::Pathway*>::deallocate(maze::Pathway**, unsigned long) [238]
-----------------------------------------------
                0.00    0.00    1228/1228        void std::_Destroy<maze::Pathway**, maze::Pathway*>(maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [177]
[176]    0.0    0.00    0.00    1228         void std::_Destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**) [176]
                0.00    0.00    1228/1228        void std::_Destroy_aux<true>::__destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**) [174]
-----------------------------------------------
                0.00    0.00     403/1228        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
                0.00    0.00     825/1228        void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[177]    0.0    0.00    0.00    1228         void std::_Destroy<maze::Pathway**, maze::Pathway*>(maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [177]
                0.00    0.00    1228/1228        void std::_Destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**) [176]
-----------------------------------------------
                                   2             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                                   1             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
                                   6             std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
                0.00    0.00       1/1222        std::__detail::_Prime_rehash_policy::max_load_factor() const [593]
                0.00    0.00       2/1222        maze::Priority_and_cell::Priority_and_cell(maze::Cell*, double) [700]
                0.00    0.00       5/1222        std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, unsigned int> > const&>(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [1137]
                0.00    0.00      10/1222        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [940]
                0.00    0.00     397/1222        std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > >::~_Before_begin() [1138]
                0.00    0.00     398/1222        maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     399/1222        std::allocator<std::pair<maze::Cell* const, unsigned int> >::allocator() [904]
[178]    0.0    0.00    0.00    1219+2       std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                0.00    0.00   79003/835098      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const <cycle 3> [33]
                0.00    0.00     797/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
                0.00    0.00     796/796         void std::pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [272]
                0.00    0.00     796/796         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::pop_back() [271]
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > const&) [515]
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::erase(maze::Cell* const&) [600]
                                  10             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
                                   1             std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
                                   2             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
-----------------------------------------------
                0.00    0.00    1203/1203        _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [180]
[179]    0.0    0.00    0.00    1203         std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__construct_helper<maze::Cell*, maze::Cell* const&>::value, void>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_construct<maze::Cell*, maze::Cell* const&>(std::allocator<maze::Cell*>&, maze::Cell**, maze::Cell* const&) [179]
                0.00    0.00    1203/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00    1203/1602        _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [159]
-----------------------------------------------
                0.00    0.00     280/1203        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [181]
                0.00    0.00     923/1203        void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[180]    0.0    0.00    0.00    1203         _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [180]
                0.00    0.00    1203/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00    1203/1203        std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__construct_helper<maze::Cell*, maze::Cell* const&>::value, void>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_construct<maze::Cell*, maze::Cell* const&>(std::allocator<maze::Cell*>&, maze::Cell**, maze::Cell* const&) [179]
-----------------------------------------------
                0.00    0.00     400/1203        maze::Maze::Maze(unsigned int, unsigned int) [579]
                0.00    0.00     803/1203        maze::DepthFirstSearchGenerator::make_maze() [575]
[181]    0.0    0.00    0.00    1203         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [181]
                0.00    0.00     923/923         void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
                0.00    0.00     280/1203        _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [180]
-----------------------------------------------
                0.00    0.00       2/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
                0.00    0.00       6/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00    1191/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[182]    0.0    0.00    0.00    1199         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
                0.00    0.00    1199/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator() [14]
                0.00    0.00    1199/2398        std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<maze::Cell*, false> >(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [102]
                0.00    0.00    1199/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [156]
                0.00    0.00    1199/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
-----------------------------------------------
                0.00    0.00       6/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00    1193/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [197]
[183]    0.0    0.00    0.00    1199         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
                0.00    0.00    1199/637602      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator() [14]
                0.00    0.00    1199/2398        std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<maze::Cell*, false> >(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [102]
                0.00    0.00    1199/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [155]
                0.00    0.00    1199/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
-----------------------------------------------
                0.00    0.00    1196/1196        std::tuple<maze::Cell* const&>::tuple(maze::Cell* const&) [189]
[184]    0.0    0.00    0.00    1196         std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(maze::Cell* const&) [184]
                0.00    0.00    1196/1196        std::_Tuple_impl<1ul>::_Tuple_impl() [187]
                0.00    0.00    1196/2392        std::_Head_base<0ul, maze::Cell* const&, false>::_Head_base(maze::Cell* const&) [104]
-----------------------------------------------
                0.00    0.00    1196/1196        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
[185]    0.0    0.00    0.00    1196         std::_Tuple_impl<0ul, maze::Cell* const&>::_M_tail(std::_Tuple_impl<0ul, maze::Cell* const&>&) [185]
-----------------------------------------------
                0.00    0.00    1196/1196        std::tuple<maze::Cell* const&>::tuple(std::tuple<maze::Cell* const&>&&) [188]
[186]    0.0    0.00    0.00    1196         std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
                0.00    0.00    1196/1196        std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&) [192]
                0.00    0.00    1196/1196        std::_Tuple_impl<0ul, maze::Cell* const&>::_M_tail(std::_Tuple_impl<0ul, maze::Cell* const&>&) [185]
                0.00    0.00    1196/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00    1196/2392        std::_Tuple_impl<0ul, maze::Cell* const&>::_M_head(std::_Tuple_impl<0ul, maze::Cell* const&>&) [105]
                0.00    0.00    1196/2392        std::_Head_base<0ul, maze::Cell* const&, false>::_Head_base(maze::Cell* const&) [104]
-----------------------------------------------
                0.00    0.00    1196/1196        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(maze::Cell* const&) [184]
[187]    0.0    0.00    0.00    1196         std::_Tuple_impl<1ul>::_Tuple_impl() [187]
-----------------------------------------------
                0.00    0.00     398/1196        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
                0.00    0.00     798/1196        void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
[188]    0.0    0.00    0.00    1196         std::tuple<maze::Cell* const&>::tuple(std::tuple<maze::Cell* const&>&&) [188]
                0.00    0.00    1196/1196        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
-----------------------------------------------
                0.00    0.00     398/1196        std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
                0.00    0.00     798/1196        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [946]
[189]    0.0    0.00    0.00    1196         std::tuple<maze::Cell* const&>::tuple(maze::Cell* const&) [189]
                0.00    0.00    1196/1196        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(maze::Cell* const&) [184]
-----------------------------------------------
                0.00    0.00    1196/1196        std::__add_ref<std::tuple_element<0ul, std::tuple<maze::Cell* const&> >::type>::type std::get<0ul, maze::Cell* const&>(std::tuple<maze::Cell* const&>&) [191]
[190]    0.0    0.00    0.00    1196         std::__add_ref<maze::Cell* const&>::type std::__get_helper<0ul, maze::Cell* const&>(std::_Tuple_impl<0ul, maze::Cell* const&>&) [190]
                0.00    0.00    1196/2392        std::_Tuple_impl<0ul, maze::Cell* const&>::_M_head(std::_Tuple_impl<0ul, maze::Cell* const&>&) [105]
-----------------------------------------------
                0.00    0.00     398/1196        std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&, 0ul>(std::tuple<maze::Cell* const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [347]
                0.00    0.00     798/1196        std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const [268]
[191]    0.0    0.00    0.00    1196         std::__add_ref<std::tuple_element<0ul, std::tuple<maze::Cell* const&> >::type>::type std::get<0ul, maze::Cell* const&>(std::tuple<maze::Cell* const&>&) [191]
                0.00    0.00    1196/1196        std::__add_ref<maze::Cell* const&>::type std::__get_helper<0ul, maze::Cell* const&>(std::_Tuple_impl<0ul, maze::Cell* const&>&) [190]
-----------------------------------------------
                0.00    0.00    1196/1196        std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [186]
[192]    0.0    0.00    0.00    1196         std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&) [192]
-----------------------------------------------
                0.00    0.00    1193/1193        std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~allocator() [194]
[193]    0.0    0.00    0.00    1193         __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~new_allocator() [193]
-----------------------------------------------
                0.00    0.00    1193/1193        std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::~_Before_begin() [200]
[194]    0.0    0.00    0.00    1193         std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~allocator() [194]
                0.00    0.00    1193/1193        __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~new_allocator() [193]
-----------------------------------------------
                0.00    0.00    1193/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [196]
[195]    0.0    0.00    0.00    1193         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<maze::Cell*, false>*) [195]
                0.00    0.00  158404/319511      std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
                0.00    0.00  158404/158801      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*) [43]
-----------------------------------------------
                0.00    0.00    1193/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [197]
[196]    0.0    0.00    0.00    1193         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [196]
                0.00    0.00    1193/2371        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [108]
                0.00    0.00    1193/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<maze::Cell*, false>*) [195]
                0.00    0.00    1193/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() [57]
-----------------------------------------------
                0.00    0.00    1193/1193        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::~unordered_set() [198]
[197]    0.0    0.00    0.00    1193         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [197]
                0.00    0.00    1193/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [196]
                0.00    0.00    1193/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
                0.00    0.00    1193/1193        std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::~_Before_begin() [200]
-----------------------------------------------
                0.00    0.00    1193/1193        maze::AStarSolver::solve_maze() <cycle 1> [506]
[198]    0.0    0.00    0.00    1193         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::~unordered_set() [198]
                0.00    0.00    1193/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [197]
-----------------------------------------------
                0.00    0.00    1193/1193        std::__detail::_Insert<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true, true>::_Insert() [201]
[199]    0.0    0.00    0.00    1193         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Insert_base() [199]
-----------------------------------------------
                0.00    0.00    1193/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [197]
[200]    0.0    0.00    0.00    1193         std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::~_Before_begin() [200]
                0.00    0.00    1193/1193        std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~allocator() [194]
-----------------------------------------------
                0.00    0.00       2/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
                0.00    0.00    1191/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[201]    0.0    0.00    0.00    1193         std::__detail::_Insert<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true, true>::_Insert() [201]
                0.00    0.00    1193/1193        std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Insert_base() [199]
-----------------------------------------------
                0.00    0.00       2/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
                0.00    0.00    1191/1193        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[202]    0.0    0.00    0.00    1193         std::__detail::_Equality<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::_Equality() [202]
-----------------------------------------------
                0.00    0.00    1191/1191        maze::AStarSolver::solve_maze() <cycle 1> [506]
[203]    0.0    0.00    0.00    1191         bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [203]
                0.00    0.00    1191/1984        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::find(maze::Cell* const&) [124]
                0.00    0.00    1191/1984        std::__detail::_Node_const_iterator<maze::Cell*, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<maze::Cell*, true, false> const&) [125]
                0.00    0.00    1191/1191        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::end() [209]
                0.00    0.00    1191/1191        bool std::__detail::operator==<maze::Cell*, false>(std::__detail::_Node_iterator_base<maze::Cell*, false> const&, std::__detail::_Node_iterator_base<maze::Cell*, false> const&) [213]
-----------------------------------------------
                0.00    0.00    1191/1191        std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [206]
[204]    0.0    0.00    0.00    1191         __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [204]
-----------------------------------------------
                0.00    0.00    1191/1191        std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [110]
[205]    0.0    0.00    0.00    1191         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [205]
-----------------------------------------------
                0.00    0.00    1191/1191        std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin(std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > > const&) [212]
[206]    0.0    0.00    0.00    1191         std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [206]
                0.00    0.00    1191/1191        __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [204]
-----------------------------------------------
                0.00    0.00    1191/1191        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> > const&) [210]
[207]    0.0    0.00    0.00    1191         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
                0.00    0.00  158006/158801      std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
                0.00    0.00  158006/158006      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<maze::Cell*, false>*, std::__detail::_Hash_node<maze::Cell*, false> const*) const [45]
                0.00    0.00  158006/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [36]
                0.00    0.00  158006/319511      std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
                0.00    0.00    2344/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() [57]
                0.00    0.00    1191/1193        std::__detail::_Insert<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true, true>::_Insert() [201]
                0.00    0.00    1191/1193        std::__detail::_Equality<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::_Equality() [202]
                0.00    0.00    1191/1191        std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin(std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > > const&) [212]
                0.00    0.00    1191/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
                0.00    0.00    1191/3562        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() const [73]
                0.00    0.00    1172/2371        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [108]
-----------------------------------------------
                0.00    0.00    1191/1191        maze::AStarSolver::solve_maze() <cycle 1> [506]
[208]    0.0    0.00    0.00    1191         std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [208]
                0.00    0.00     794/1191        std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [211]
-----------------------------------------------
                0.00    0.00    1191/1191        bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [203]
[209]    0.0    0.00    0.00    1191         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::end() [209]
                0.00    0.00    1191/2385        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [107]
-----------------------------------------------
                0.00    0.00    1191/1191        maze::AStarSolver::solve_maze() <cycle 1> [506]
[210]    0.0    0.00    0.00    1191         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> > const&) [210]
                0.00    0.00    1191/1191        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
-----------------------------------------------
                0.00    0.00     397/1191        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [355]
                0.00    0.00     794/1191        std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [208]
[211]    0.0    0.00    0.00    1191         std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [211]
                0.00    0.00    1588/2344        std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [110]
                0.00    0.00     397/397         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [353]
                0.00    0.00     397/835098      std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
-----------------------------------------------
                0.00    0.00    1191/1191        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [207]
[212]    0.0    0.00    0.00    1191         std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin(std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > > const&) [212]
                0.00    0.00    1191/1191        std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [206]
-----------------------------------------------
                0.00    0.00    1191/1191        bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [203]
[213]    0.0    0.00    0.00    1191         bool std::__detail::operator==<maze::Cell*, false>(std::__detail::_Node_iterator_base<maze::Cell*, false> const&, std::__detail::_Node_iterator_base<maze::Cell*, false> const&) [213]
-----------------------------------------------
                0.00    0.00       6/949         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**) [455]
                0.00    0.00     943/949         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate(maze::Cell**, unsigned long) [139]
[214]    0.0    0.00    0.00     949         __gnu_cxx::new_allocator<maze::Cell*>::deallocate(maze::Cell**, unsigned long) [214]
-----------------------------------------------
                0.00    0.00       6/949         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node() [454]
                0.00    0.00     943/949         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate(unsigned long) [216]
[215]    0.0    0.00    0.00     949         __gnu_cxx::new_allocator<maze::Cell*>::allocate(unsigned long, void const*) [215]
                0.00    0.00     949/2795        __gnu_cxx::new_allocator<maze::Cell*>::max_size() const [91]
-----------------------------------------------
                0.00    0.00      20/943         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_storage(unsigned long) [408]
                0.00    0.00     923/943         void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[216]    0.0    0.00    0.00     943         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate(unsigned long) [216]
                0.00    0.00     943/949         __gnu_cxx::new_allocator<maze::Cell*>::allocate(unsigned long, void const*) [215]
-----------------------------------------------
                0.00    0.00     923/923         void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[217]    0.0    0.00    0.00     923         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const [217]
                0.00    0.00    3692/5034        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const [62]
                0.00    0.00    1846/1846        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::max_size() const [130]
                0.00    0.00     923/1761        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [142]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::__copy_move_a<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [221]
[218]    0.0    0.00    0.00     923         maze::Cell** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [218]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::uninitialized_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [223]
[219]    0.0    0.00    0.00     923         maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [219]
                0.00    0.00     923/923         maze::Cell** std::copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [226]
-----------------------------------------------
                0.00    0.00     923/923         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [181]
[220]    0.0    0.00    0.00     923         void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
                0.00    0.00    1846/2761        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [97]
                0.00    0.00     923/923         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const [217]
                0.00    0.00     923/943         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate(unsigned long) [216]
                0.00    0.00     923/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00     923/5034        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const [62]
                0.00    0.00     923/1203        _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [180]
                0.00    0.00     923/923         maze::Cell** std::__uninitialized_move_if_noexcept_a<maze::Cell**, maze::Cell**, std::allocator<maze::Cell*> >(maze::Cell**, maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [225]
                0.00    0.00     923/1787        void std::_Destroy<maze::Cell**, maze::Cell*>(maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [141]
                0.00    0.00     923/1787        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate(maze::Cell**, unsigned long) [139]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::__copy_move_a2<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [222]
[221]    0.0    0.00    0.00     923         maze::Cell** std::__copy_move_a<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [221]
                0.00    0.00     923/923         maze::Cell** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [218]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [226]
[222]    0.0    0.00    0.00     923         maze::Cell** std::__copy_move_a2<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [222]
                0.00    0.00    2769/2789        std::_Niter_base<maze::Cell**>::iterator_type std::__niter_base<maze::Cell**>(maze::Cell**) [94]
                0.00    0.00     923/923         maze::Cell** std::__copy_move_a<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [221]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::__uninitialized_copy_a<std::move_iterator<maze::Cell**>, maze::Cell**, maze::Cell*>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**, std::allocator<maze::Cell*>&) [224]
[223]    0.0    0.00    0.00     923         maze::Cell** std::uninitialized_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [223]
                0.00    0.00     923/923         maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [219]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::__uninitialized_move_if_noexcept_a<maze::Cell**, maze::Cell**, std::allocator<maze::Cell*> >(maze::Cell**, maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [225]
[224]    0.0    0.00    0.00     923         maze::Cell** std::__uninitialized_copy_a<std::move_iterator<maze::Cell**>, maze::Cell**, maze::Cell*>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**, std::allocator<maze::Cell*>&) [224]
                0.00    0.00     923/923         maze::Cell** std::uninitialized_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [223]
-----------------------------------------------
                0.00    0.00     923/923         void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&) [220]
[225]    0.0    0.00    0.00     923         maze::Cell** std::__uninitialized_move_if_noexcept_a<maze::Cell**, maze::Cell**, std::allocator<maze::Cell*> >(maze::Cell**, maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [225]
                0.00    0.00    1846/1846        std::move_iterator<maze::Cell**> std::__make_move_if_noexcept_iterator<maze::Cell**, std::move_iterator<maze::Cell**> >(maze::Cell**) [136]
                0.00    0.00     923/923         maze::Cell** std::__uninitialized_copy_a<std::move_iterator<maze::Cell**>, maze::Cell**, maze::Cell*>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**, std::allocator<maze::Cell*>&) [224]
-----------------------------------------------
                0.00    0.00     923/923         maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [219]
[226]    0.0    0.00    0.00     923         maze::Cell** std::copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**) [226]
                0.00    0.00    1846/1846        std::_Miter_base<std::move_iterator<maze::Cell**> >::iterator_type std::__miter_base<std::move_iterator<maze::Cell**> >(std::move_iterator<maze::Cell**>) [135]
                0.00    0.00     923/923         maze::Cell** std::__copy_move_a2<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**) [222]
-----------------------------------------------
                0.00    0.00     106/899         maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*) [569]
                0.00    0.00     793/899         maze::AStarSolver::solve_maze() <cycle 1> [506]
[227]    0.0    0.00    0.00     899         maze::Pathway::get_other_cell(maze::Cell*) [227]
                0.00    0.00    1400/1799        maze::Pathway::get_first_cell() [137]
                0.00    0.00     899/1298        maze::Pathway::get_second_cell() [172]
-----------------------------------------------
                0.00    0.00     888/888         std::allocator<maze::Cell*>::~allocator() [229]
[228]    0.0    0.00    0.00     888         __gnu_cxx::new_allocator<maze::Cell*>::~new_allocator() [228]
-----------------------------------------------
                0.00    0.00       2/888         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::~_Deque_impl() [519]
                0.00    0.00       2/888         maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00      20/888         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00     864/888         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::~_Vector_impl() [230]
[229]    0.0    0.00    0.00     888         std::allocator<maze::Cell*>::~allocator() [229]
                0.00    0.00     888/888         __gnu_cxx::new_allocator<maze::Cell*>::~new_allocator() [228]
-----------------------------------------------
                0.00    0.00     864/864         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Vector_base() [231]
[230]    0.0    0.00    0.00     864         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::~_Vector_impl() [230]
                0.00    0.00     864/888         std::allocator<maze::Cell*>::~allocator() [229]
-----------------------------------------------
                0.00    0.00     864/864         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
[231]    0.0    0.00    0.00     864         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Vector_base() [231]
                0.00    0.00     864/1787        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate(maze::Cell**, unsigned long) [139]
                0.00    0.00     864/864         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::~_Vector_impl() [230]
-----------------------------------------------
                0.00    0.00      20/864         maze::Maze::Maze(unsigned int, unsigned int) [579]
                0.00    0.00      51/864         void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [379]
                0.00    0.00     793/864         maze::DepthFirstSearchGenerator::make_maze() [575]
[232]    0.0    0.00    0.00     864         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
                0.00    0.00     864/2761        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [97]
                0.00    0.00     864/864         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Vector_base() [231]
                0.00    0.00     864/1787        void std::_Destroy<maze::Cell**, maze::Cell*>(maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&) [141]
-----------------------------------------------
                0.00    0.00     855/855         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
[233]    0.0    0.00    0.00     855         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::pair<maze::Cell* const, maze::Pathway*> const&) const [233]
                0.00    0.00     855/855         std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type const& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&) [236]
                0.00    0.00     855/855         std::pair<maze::Cell* const, maze::Pathway*> const& std::forward<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*> const&>::type&) [237]
-----------------------------------------------
                0.00    0.00     372/855         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
                0.00    0.00     483/855         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [302]
[234]    0.0    0.00    0.00     855         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
                0.00    0.00     855/855         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::pair<maze::Cell* const, maze::Pathway*> const&) const [233]
                0.00    0.00     855/1241        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [173]
                0.00    0.00     855/1359        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [170]
                0.00    0.00     855/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
                0.00    0.00     855/1364        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [169]
                0.00    0.00     855/248377      std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
-----------------------------------------------
                0.00    0.00     855/855         std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type const& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&) [236]
[235]    0.0    0.00    0.00     855         maze::Cell* const& std::__pair_get<0ul>::__const_get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&) [235]
-----------------------------------------------
                0.00    0.00     855/855         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::pair<maze::Cell* const, maze::Pathway*> const&) const [233]
[236]    0.0    0.00    0.00     855         std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type const& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&) [236]
                0.00    0.00     855/855         maze::Cell* const& std::__pair_get<0ul>::__const_get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&) [235]
-----------------------------------------------
                0.00    0.00     855/855         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::pair<maze::Cell* const, maze::Pathway*> const&) const [233]
[237]    0.0    0.00    0.00     855         std::pair<maze::Cell* const, maze::Pathway*> const& std::forward<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*> const&>::type&) [237]
-----------------------------------------------
                0.00    0.00     825/825         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_deallocate(maze::Pathway**, unsigned long) [175]
[238]    0.0    0.00    0.00     825         __gnu_cxx::new_allocator<maze::Pathway*>::deallocate(maze::Pathway**, unsigned long) [238]
-----------------------------------------------
                0.00    0.00     825/825         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_allocate(unsigned long) [242]
[239]    0.0    0.00    0.00     825         __gnu_cxx::new_allocator<maze::Pathway*>::allocate(unsigned long, void const*) [239]
                0.00    0.00     825/2475        __gnu_cxx::new_allocator<maze::Pathway*>::max_size() const [98]
-----------------------------------------------
                0.00    0.00     825/825         void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[240]    0.0    0.00    0.00     825         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const [240]
                0.00    0.00    3300/4923        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::size() const [63]
                0.00    0.00    1650/1650        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::max_size() const [146]
                0.00    0.00     825/1761        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [142]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::__copy_move_a<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [245]
[241]    0.0    0.00    0.00     825         maze::Pathway** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Pathway*>(maze::Pathway* const*, maze::Pathway* const*, maze::Pathway**) [241]
-----------------------------------------------
                0.00    0.00     825/825         void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[242]    0.0    0.00    0.00     825         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_allocate(unsigned long) [242]
                0.00    0.00     825/825         __gnu_cxx::new_allocator<maze::Pathway*>::allocate(unsigned long, void const*) [239]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::uninitialized_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [247]
[243]    0.0    0.00    0.00     825         maze::Pathway** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [243]
                0.00    0.00     825/825         maze::Pathway** std::copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [250]
-----------------------------------------------
                0.00    0.00     825/825         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&) [163]
[244]    0.0    0.00    0.00     825         void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
                0.00    0.00    1650/2053        std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() [116]
                0.00    0.00     825/825         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const [240]
                0.00    0.00     825/825         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_allocate(unsigned long) [242]
                0.00    0.00     825/5613        maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&) [61]
                0.00    0.00     825/4923        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::size() const [63]
                0.00    0.00     825/1596        _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [162]
                0.00    0.00     825/825         maze::Pathway** std::__uninitialized_move_if_noexcept_a<maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*> >(maze::Pathway**, maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [249]
                0.00    0.00     825/1228        void std::_Destroy<maze::Pathway**, maze::Pathway*>(maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [177]
                0.00    0.00     825/1228        std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_deallocate(maze::Pathway**, unsigned long) [175]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::__copy_move_a2<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [246]
[245]    0.0    0.00    0.00     825         maze::Pathway** std::__copy_move_a<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [245]
                0.00    0.00     825/825         maze::Pathway** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Pathway*>(maze::Pathway* const*, maze::Pathway* const*, maze::Pathway**) [241]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [250]
[246]    0.0    0.00    0.00     825         maze::Pathway** std::__copy_move_a2<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [246]
                0.00    0.00    2475/2475        std::_Niter_base<maze::Pathway**>::iterator_type std::__niter_base<maze::Pathway**>(maze::Pathway**) [100]
                0.00    0.00     825/825         maze::Pathway** std::__copy_move_a<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [245]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::__uninitialized_copy_a<std::move_iterator<maze::Pathway**>, maze::Pathway**, maze::Pathway*>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**, std::allocator<maze::Pathway*>&) [248]
[247]    0.0    0.00    0.00     825         maze::Pathway** std::uninitialized_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [247]
                0.00    0.00     825/825         maze::Pathway** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [243]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::__uninitialized_move_if_noexcept_a<maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*> >(maze::Pathway**, maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [249]
[248]    0.0    0.00    0.00     825         maze::Pathway** std::__uninitialized_copy_a<std::move_iterator<maze::Pathway**>, maze::Pathway**, maze::Pathway*>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**, std::allocator<maze::Pathway*>&) [248]
                0.00    0.00     825/825         maze::Pathway** std::uninitialized_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [247]
-----------------------------------------------
                0.00    0.00     825/825         void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&) [244]
[249]    0.0    0.00    0.00     825         maze::Pathway** std::__uninitialized_move_if_noexcept_a<maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*> >(maze::Pathway**, maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [249]
                0.00    0.00    1650/1650        std::move_iterator<maze::Pathway**> std::__make_move_if_noexcept_iterator<maze::Pathway**, std::move_iterator<maze::Pathway**> >(maze::Pathway**) [152]
                0.00    0.00     825/825         maze::Pathway** std::__uninitialized_copy_a<std::move_iterator<maze::Pathway**>, maze::Pathway**, maze::Pathway*>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**, std::allocator<maze::Pathway*>&) [248]
-----------------------------------------------
                0.00    0.00     825/825         maze::Pathway** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [243]
[250]    0.0    0.00    0.00     825         maze::Pathway** std::copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**) [250]
                0.00    0.00    1650/1650        std::_Miter_base<std::move_iterator<maze::Pathway**> >::iterator_type std::__miter_base<std::move_iterator<maze::Pathway**> >(std::move_iterator<maze::Pathway**>) [151]
                0.00    0.00     825/825         maze::Pathway** std::__copy_move_a2<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**) [246]
-----------------------------------------------
                0.00    0.00     816/816         std::allocator<maze::Cell*>::allocator() [252]
[251]    0.0    0.00    0.00     816         __gnu_cxx::new_allocator<maze::Cell*>::new_allocator() [251]
-----------------------------------------------
                0.00    0.00       1/816         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl() [609]
                0.00    0.00       2/816         maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00     813/816         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl() [255]
[252]    0.0    0.00    0.00     816         std::allocator<maze::Cell*>::allocator() [252]
                0.00    0.00     816/816         __gnu_cxx::new_allocator<maze::Cell*>::new_allocator() [251]
-----------------------------------------------
                0.00    0.00      20/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00     793/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const [286]
[253]    0.0    0.00    0.00     813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::end() const [253]
                0.00    0.00     813/1626        __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::__normal_iterator(maze::Cell* const* const&) [153]
-----------------------------------------------
                0.00    0.00      20/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00     793/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const [286]
[254]    0.0    0.00    0.00     813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::begin() const [254]
                0.00    0.00     813/1626        __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::__normal_iterator(maze::Cell* const* const&) [153]
-----------------------------------------------
                0.00    0.00     813/813         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base() [256]
[255]    0.0    0.00    0.00     813         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl() [255]
                0.00    0.00     813/816         std::allocator<maze::Cell*>::allocator() [252]
-----------------------------------------------
                0.00    0.00     813/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector() [257]
[256]    0.0    0.00    0.00     813         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base() [256]
                0.00    0.00     813/813         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl() [255]
-----------------------------------------------
                0.00    0.00      20/813         maze::Maze::Maze(unsigned int, unsigned int) [579]
                0.00    0.00     793/813         maze::DepthFirstSearchGenerator::make_maze() [575]
[257]    0.0    0.00    0.00     813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector() [257]
                0.00    0.00     813/813         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base() [256]
-----------------------------------------------
                0.00    0.00       6/801         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00     795/801         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
[258]    0.0    0.00    0.00     801         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [258]
                0.00    0.00     801/801         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&) [259]
-----------------------------------------------
                0.00    0.00     801/801         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [258]
[259]    0.0    0.00    0.00     801         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&) [259]
-----------------------------------------------
                0.00    0.00     400/800         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() [324]
                0.00    0.00     400/800         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() [323]
[260]    0.0    0.00    0.00     800         __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway** const&) [260]
-----------------------------------------------
                                 400             std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                0.00    0.00     400/835098      maze::Maze::max_num_pathways() [319]
[261]    0.0    0.00    0.00     800         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector() <cycle 3> [261]
                0.00    0.00     400/400         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::begin() [322]
                                 400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() <cycle 3> [321]
-----------------------------------------------
                0.00    0.00       2/799         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::begin() [535]
                0.00    0.00       2/799         void std::swap<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> >(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&) [544]
                0.00    0.00     795/799         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::end() [279]
[262]    0.0    0.00    0.00     799         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> const&) [262]
-----------------------------------------------
                0.00    0.00       1/798         maze::Priority_and_cell::Priority_and_cell(maze::Cell*, double) [700]
                0.00    0.00       1/798         std::less<maze::Priority_and_cell>::operator()(maze::Priority_and_cell const&, maze::Priority_and_cell const&) const [840]
                0.00    0.00     397/798         std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > >::~_Before_begin() [1138]
                0.00    0.00     399/798         std::allocator<std::pair<maze::Cell* const, unsigned int> >::allocator() [904]
[263]    0.0    0.00    0.00     798         bool josh::is_in_container<std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*>(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*) [263]
                0.00    0.00     797/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
                0.00    0.00       1/835098      std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
-----------------------------------------------
                0.00    0.00     798/798         maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
[264]    0.0    0.00    0.00     798         maze::Cell::add_pathway(maze::Pathway*) [264]
                0.00    0.00     798/1596        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&) [163]
-----------------------------------------------
                0.00    0.00     399/798         maze::SVGSave::persist_maze() [581]
                0.00    0.00     399/798         maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
[265]    0.0    0.00    0.00     798         maze::Pathway::is_in_solved_pathway() [265]
-----------------------------------------------
                0.00    0.00     798/798         void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
[266]    0.0    0.00    0.00     798         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, unsigned long) [266]
-----------------------------------------------
                0.00    0.00     798/798         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [946]
[267]    0.0    0.00    0.00     798         std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const [267]
                0.00    0.00     798/835098      std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) <cycle 3> [92]
-----------------------------------------------
                0.00    0.00     798/798         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
[268]    0.0    0.00    0.00     798         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const [268]
                0.00    0.00     798/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00     798/1196        std::__add_ref<std::tuple_element<0ul, std::tuple<maze::Cell* const&> >::type>::type std::get<0ul, maze::Cell* const&>(std::tuple<maze::Cell* const&>&) [191]
                0.00    0.00       5/40          std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) <cycle 4> [380]
-----------------------------------------------
                0.00    0.00       2/798         __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator*() const [796]
                0.00    0.00     796/798         std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::push(maze::Priority_and_cell&&) [1033]
[269]    0.0    0.00    0.00     798         std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::reserve(unsigned long) [269]
-----------------------------------------------
                0.00    0.00     798/798         maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
[270]    0.0    0.00    0.00     798         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::operator[](unsigned long) [270]
-----------------------------------------------
                0.00    0.00     796/796         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
[271]    0.0    0.00    0.00     796         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::pop_back() [271]
                0.00    0.00     398/835098      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
-----------------------------------------------
                0.00    0.00     796/796         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
[272]    0.0    0.00    0.00     796         void std::pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) [272]
                0.00    0.00     796/835098      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
-----------------------------------------------
                0.00    0.00     795/795         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
[273]    0.0    0.00    0.00     795         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) const [273]
-----------------------------------------------
                0.00    0.00     795/795         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
[274]    0.0    0.00    0.00     795         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00     795/1991        std::__detail::_Prime_rehash_policy::_M_state() const [119]
                0.00    0.00     795/795         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) const [273]
                0.00    0.00     795/795         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [275]
                0.00    0.00     795/4367        std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*) [68]
                0.00    0.00       6/6           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [451]
                0.00    0.00       6/2154        maze::Cell*& std::__detail::_Identity::operator()<maze::Cell*&>(maze::Cell*&) const [111]
                0.00    0.00       6/801         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [258]
                0.00    0.00       6/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [78]
-----------------------------------------------
                0.00    0.00     795/795         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
[275]    0.0    0.00    0.00     795         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [275]
                0.00    0.00    1497/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() [57]
                0.00    0.00     478/319511      std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
                0.00    0.00     478/159756      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [36]
-----------------------------------------------
                0.00    0.00     795/795         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(maze::Cell* const&) [281]
[276]    0.0    0.00    0.00     795         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
                0.00    0.00     795/801         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [258]
                0.00    0.00     795/160933      maze::Cell* const& std::__detail::_Identity::operator()<maze::Cell* const&>(maze::Cell* const&) const [34]
                0.00    0.00     795/3176        std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [81]
                0.00    0.00     795/3182        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [78]
                0.00    0.00     795/2779        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [96]
                0.00    0.00     795/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00     795/158801      std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [42]
                0.00    0.00     795/795         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
                0.00    0.00     795/795         std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [282]
-----------------------------------------------
                0.00    0.00     795/795         maze::AStarSolver::solve_maze() <cycle 1> [506]
[277]    0.0    0.00    0.00     795         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::insert(maze::Cell* const&) [277]
                0.00    0.00     795/795         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(maze::Cell* const&) [281]
-----------------------------------------------
                0.00    0.00     795/795         std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [282]
[278]    0.0    0.00    0.00     795         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool, void>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [278]
                0.00    0.00     795/1590        std::__detail::_Node_iterator<maze::Cell*, true, false>&& std::forward<std::__detail::_Node_iterator<maze::Cell*, true, false> >(std::remove_reference<std::__detail::_Node_iterator<maze::Cell*, true, false> >::type&) [165]
                0.00    0.00     795/1590        bool&& std::forward<bool>(std::remove_reference<bool>::type&) [166]
-----------------------------------------------
                0.00    0.00       2/795         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
                0.00    0.00     793/795         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back() [288]
[279]    0.0    0.00    0.00     795         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::end() [279]
                0.00    0.00     795/799         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> const&) [262]
-----------------------------------------------
                0.00    0.00     795/795         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(maze::Cell* const&) [281]
[280]    0.0    0.00    0.00     795         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [280]
-----------------------------------------------
                0.00    0.00     795/795         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::insert(maze::Cell* const&) [277]
[281]    0.0    0.00    0.00     795         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(maze::Cell* const&) [281]
                0.00    0.00     795/795         std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable() [280]
                0.00    0.00     795/795         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
-----------------------------------------------
                0.00    0.00     795/795         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [276]
[282]    0.0    0.00    0.00     795         std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [282]
                0.00    0.00     795/1590        bool&& std::forward<bool>(std::remove_reference<bool>::type&) [166]
                0.00    0.00     795/1590        std::__detail::_Node_iterator<maze::Cell*, true, false>&& std::forward<std::__detail::_Node_iterator<maze::Cell*, true, false> >(std::remove_reference<std::__detail::_Node_iterator<maze::Cell*, true, false> >::type&) [165]
                0.00    0.00     795/795         std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool, void>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&) [278]
-----------------------------------------------
                0.00    0.00     794/794         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [355]
[283]    0.0    0.00    0.00     794         std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [283]
                0.00    0.00     794/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
                0.00    0.00     756/2344        std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [110]
-----------------------------------------------
                0.00    0.00     793/793         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const [286]
[284]    0.0    0.00    0.00     793         bool __gnu_cxx::operator==<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [284]
                0.00    0.00    1586/1626        __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::base() const [154]
-----------------------------------------------
                0.00    0.00     793/793         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back() [288]
[285]    0.0    0.00    0.00     793         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator*() const [285]
-----------------------------------------------
                0.00    0.00     793/793         maze::DepthFirstSearchGenerator::make_maze() [575]
[286]    0.0    0.00    0.00     793         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const [286]
                0.00    0.00     793/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::end() const [253]
                0.00    0.00     793/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::begin() const [254]
                0.00    0.00     793/793         bool __gnu_cxx::operator==<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [284]
-----------------------------------------------
                0.00    0.00     793/793         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back() [288]
[287]    0.0    0.00    0.00     793         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator--() [287]
                0.00    0.00       9/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [401]
-----------------------------------------------
                0.00    0.00     793/793         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::top() [289]
[288]    0.0    0.00    0.00     793         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back() [288]
                0.00    0.00     793/795         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::end() [279]
                0.00    0.00     793/793         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator--() [287]
                0.00    0.00     793/793         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator*() const [285]
-----------------------------------------------
                0.00    0.00     793/793         maze::DepthFirstSearchGenerator::make_maze() [575]
[289]    0.0    0.00    0.00     793         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::top() [289]
                0.00    0.00     793/793         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back() [288]
-----------------------------------------------
                0.00    0.00     378/777         __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::difference_type __gnu_cxx::operator-<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) [782]
                0.00    0.00     399/777         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [942]
[290]    0.0    0.00    0.00     777         std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const [290]
                0.00    0.00     399/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
-----------------------------------------------
                0.00    0.00     624/624         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [292]
[291]    0.0    0.00    0.00     624         std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [291]
-----------------------------------------------
                0.00    0.00     624/624         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [634]
[292]    0.0    0.00    0.00     624         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [292]
                0.00    0.00     624/624         std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long) [291]
-----------------------------------------------
                0.00    0.00     623/623         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [294]
[293]    0.0    0.00    0.00     623         std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [293]
-----------------------------------------------
                0.00    0.00     623/623         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [634]
[294]    0.0    0.00    0.00     623         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [294]
                0.00    0.00     623/623         std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long) [293]
-----------------------------------------------
                0.00    0.00       5/509         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
                0.00    0.00     504/509         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
[295]    0.0    0.00    0.00     509         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [295]
                0.00    0.00     509/509         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [296]
-----------------------------------------------
                0.00    0.00     509/509         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [295]
[296]    0.0    0.00    0.00     509         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [296]
                0.00    0.00     509/1364        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [169]
                0.00    0.00     509/248377      std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [18]
-----------------------------------------------
                0.00    0.00     504/504         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
[297]    0.0    0.00    0.00     504         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [297]
                0.00    0.00     504/504         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [298]
-----------------------------------------------
                0.00    0.00     504/504         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [297]
[298]    0.0    0.00    0.00     504         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [298]
                0.00    0.00     386/386         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [366]
                0.00    0.00     367/1343        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const [171]
                0.00    0.00     277/483         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [302]
-----------------------------------------------
                0.00    0.00     504/504         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
[299]    0.0    0.00    0.00     504         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [299]
                0.00    0.00     504/1359        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [170]
                0.00    0.00     504/248356      std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [20]
-----------------------------------------------
                0.00    0.00     106/504         maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*) [569]
                0.00    0.00     398/504         maze::AStarSolver::solve_maze() <cycle 1> [506]
[300]    0.0    0.00    0.00     504         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::operator[](maze::Cell* const&) [300]
                0.00    0.00     504/504         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
-----------------------------------------------
                0.00    0.00     504/504         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::operator[](maze::Cell* const&) [300]
[301]    0.0    0.00    0.00     504         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
                0.00    0.00     504/504         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [299]
                0.00    0.00     504/509         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [295]
                0.00    0.00     504/504         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [297]
                0.00    0.00     398/1196        std::tuple<maze::Cell* const&>::tuple(maze::Cell* const&) [189]
                0.00    0.00     398/398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
                0.00    0.00     398/398         std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::operator->() const [340]
-----------------------------------------------
                0.00    0.00     206/483         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [345]
                0.00    0.00     277/483         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [298]
[302]    0.0    0.00    0.00     483         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [302]
                0.00    0.00     483/855         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
-----------------------------------------------
                                 404             std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) <cycle 3> [471]
[303]    0.0    0.00    0.00     404         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
                0.00    0.00      20/25          std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [398]
                0.00    0.00       5/1761        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [142]
                                 404             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
                                 399             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                                  10             void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [101]
-----------------------------------------------
                0.00    0.00     403/403         std::allocator<maze::Pathway*>::allocator() [306]
[304]    0.0    0.00    0.00     403         __gnu_cxx::new_allocator<maze::Pathway*>::new_allocator() [304]
-----------------------------------------------
                0.00    0.00     403/403         std::allocator<maze::Pathway*>::~allocator() [307]
[305]    0.0    0.00    0.00     403         __gnu_cxx::new_allocator<maze::Pathway*>::~new_allocator() [305]
-----------------------------------------------
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::_Vector_impl() [308]
[306]    0.0    0.00    0.00     403         std::allocator<maze::Pathway*>::allocator() [306]
                0.00    0.00     403/403         __gnu_cxx::new_allocator<maze::Pathway*>::new_allocator() [304]
-----------------------------------------------
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::~_Vector_impl() [309]
[307]    0.0    0.00    0.00     403         std::allocator<maze::Pathway*>::~allocator() [307]
                0.00    0.00     403/403         __gnu_cxx::new_allocator<maze::Pathway*>::~new_allocator() [305]
-----------------------------------------------
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_base() [310]
[308]    0.0    0.00    0.00     403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::_Vector_impl() [308]
                0.00    0.00     403/403         std::allocator<maze::Pathway*>::allocator() [306]
-----------------------------------------------
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::~_Vector_base() [311]
[309]    0.0    0.00    0.00     403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::~_Vector_impl() [309]
                0.00    0.00     403/403         std::allocator<maze::Pathway*>::~allocator() [307]
-----------------------------------------------
                0.00    0.00     403/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector() [312]
[310]    0.0    0.00    0.00     403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_base() [310]
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::_Vector_impl() [308]
-----------------------------------------------
                0.00    0.00     403/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
[311]    0.0    0.00    0.00     403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::~_Vector_base() [311]
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::~_Vector_impl() [309]
                0.00    0.00     403/1228        std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_deallocate(maze::Pathway**, unsigned long) [175]
-----------------------------------------------
                0.00    0.00       1/403         maze::Maze::Maze(unsigned int, unsigned int) [579]
                0.00    0.00       2/403         maze::SVGSave::persist_maze() [581]
                0.00    0.00     400/403         maze::Cell::Cell(unsigned int, unsigned int) [317]
[312]    0.0    0.00    0.00     403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector() [312]
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_base() [310]
-----------------------------------------------
                0.00    0.00       1/403         maze::Maze::~Maze() [580]
                0.00    0.00       2/403         maze::SVGSave::persist_maze() [581]
                0.00    0.00     400/403         maze::Cell::~Cell() [318]
[313]    0.0    0.00    0.00     403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
                0.00    0.00     403/2053        std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() [116]
                0.00    0.00     403/403         std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::~_Vector_base() [311]
                0.00    0.00     403/1228        void std::_Destroy<maze::Pathway**, maze::Pathway*>(maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&) [177]
-----------------------------------------------
                0.00    0.00       1/401         maze::SVGSave::persist_maze() [581]
                0.00    0.00     400/401         maze::AStarSolver::solve_maze() <cycle 1> [506]
[314]    0.0    0.00    0.00     401         maze::Maze::get_height() [314]
-----------------------------------------------
                0.00    0.00       1/401         maze::SVGSave::persist_maze() [581]
                0.00    0.00     400/401         maze::AStarSolver::solve_maze() <cycle 1> [506]
[315]    0.0    0.00    0.00     401         maze::Maze::get_width() [315]
-----------------------------------------------
                                 399             maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00       1/2           std::string::shrink_to_fit() [911]
[316]    0.0    0.00    0.00     400         maze::AStarSolver::heuristic_estimate(maze::Cell&, maze::Maze&) <cycle 1> [316]
                                   1             maze::AStarSolver::solve_maze() <cycle 1> [506]
-----------------------------------------------
                0.00    0.00     400/400         maze::Maze::Maze(unsigned int, unsigned int) [579]
[317]    0.0    0.00    0.00     400         maze::Cell::Cell(unsigned int, unsigned int) [317]
                0.00    0.00     400/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector() [312]
-----------------------------------------------
                0.00    0.00     400/400         maze::Maze::~Maze() [580]
[318]    0.0    0.00    0.00     400         maze::Cell::~Cell() [318]
                0.00    0.00     400/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
-----------------------------------------------
                0.00    0.00     400/400         maze::AStarSolver::solve_maze() <cycle 1> [506]
[319]    0.0    0.00    0.00     400         maze::Maze::max_num_pathways() [319]
                0.00    0.00     400/835098      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector() <cycle 3> [261]
-----------------------------------------------
                                 400             std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::reserve(unsigned long) [320]
                0.00    0.00       2/400         __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator*() const [796]
                0.00    0.00     398/400         std::remove_reference<maze::Priority_and_cell&>::type&& std::move<maze::Priority_and_cell&>(maze::Priority_and_cell&) [352]
[320]    0.0    0.00    0.00     400+400     std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::reserve(unsigned long) [320]
                                 400             std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::reserve(unsigned long) [320]
-----------------------------------------------
                                 400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector() <cycle 3> [261]
[321]    0.0    0.00    0.00     400         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() <cycle 3> [321]
                                 400             void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
                                 400             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&) <cycle 3> [16]
-----------------------------------------------
                0.00    0.00     400/400         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector() <cycle 3> [261]
[322]    0.0    0.00    0.00     400         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::begin() [322]
                0.00    0.00       2/2           __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator+(long const&) const [513]
-----------------------------------------------
                0.00    0.00       1/400         maze::Maze::~Maze() [580]
                0.00    0.00       3/400         maze::SVGSave::persist_maze() [581]
                0.00    0.00     396/400         maze::AStarSolver::solve_maze() <cycle 1> [506]
[323]    0.0    0.00    0.00     400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() [323]
                0.00    0.00     400/800         __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway** const&) [260]
-----------------------------------------------
                0.00    0.00       1/400         maze::Maze::~Maze() [580]
                0.00    0.00       3/400         maze::SVGSave::persist_maze() [581]
                0.00    0.00     396/400         maze::AStarSolver::solve_maze() <cycle 1> [506]
[324]    0.0    0.00    0.00     400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() [324]
                0.00    0.00     400/800         __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway** const&) [260]
-----------------------------------------------
                0.00    0.00     399/399         maze::DepthFirstSearchGenerator::make_maze() [575]
[325]    0.0    0.00    0.00     399         maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
                0.00    0.00     798/4923        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::size() const [63]
                0.00    0.00     798/798         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::operator[](unsigned long) [270]
                0.00    0.00     798/798         maze::Cell::add_pathway(maze::Pathway*) [264]
                0.00    0.00     399/399         maze::Pathway::Pathway(maze::Cell*, maze::Cell*) [326]
                0.00    0.00     399/1596        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&) [163]
-----------------------------------------------
                0.00    0.00     399/399         maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
[326]    0.0    0.00    0.00     399         maze::Pathway::Pathway(maze::Cell*, maze::Cell*) [326]
-----------------------------------------------
                0.00    0.00     399/399         maze::Maze::~Maze() [580]
[327]    0.0    0.00    0.00     399         maze::Pathway::~Pathway() [327]
-----------------------------------------------
                0.00    0.00     399/399         maze::SVGSave::persist_maze() [581]
[328]    0.0    0.00    0.00     399         maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
                0.00    0.00     798/2783        maze::Cell::get_x_position() [95]
                0.00    0.00     798/1990        maze::Cell::get_y_position() [120]
                0.00    0.00     399/1799        maze::Pathway::get_first_cell() [137]
                0.00    0.00     399/1298        maze::Pathway::get_second_cell() [172]
                0.00    0.00     399/798         maze::Pathway::is_in_solved_pathway() [265]
-----------------------------------------------
                0.00    0.00     399/399         std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
[329]    0.0    0.00    0.00     399         std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::~allocator() [329]
-----------------------------------------------
                0.00    0.00     399/399         std::allocator<std::pair<maze::Cell* const, unsigned int> >::allocator() [904]
[330]    0.0    0.00    0.00     399         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [330]
                0.00    0.00     798/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                0.00    0.00     798/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                0.00    0.00     399/835098      std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) <cycle 3> [54]
-----------------------------------------------
                0.00    0.00     399/399         maze::DepthFirstSearchGenerator::make_maze() [575]
[331]    0.0    0.00    0.00     399         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [331]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [633]
-----------------------------------------------
                0.00    0.00     399/399         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell* const&) [333]
[332]    0.0    0.00    0.00     399         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [332]
                0.00    0.00     395/1602        _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [159]
                0.00    0.00       4/4           void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
-----------------------------------------------
                0.00    0.00     399/399         maze::DepthFirstSearchGenerator::make_maze() [575]
[333]    0.0    0.00    0.00     399         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell* const&) [333]
                0.00    0.00     399/399         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [332]
-----------------------------------------------
                0.00    0.00     398/398         maze::AStarSolver::solve_maze() <cycle 1> [506]
[334]    0.0    0.00    0.00     398         maze::Maze::num_cells() [334]
                0.00    0.00     398/398         std::remove_reference<maze::Priority_and_cell&>::type&& std::move<maze::Priority_and_cell&>(maze::Priority_and_cell&) [352]
-----------------------------------------------
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [343]
[335]    0.0    0.00    0.00     398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) [335]
-----------------------------------------------
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [343]
[336]    0.0    0.00    0.00     398         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [336]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
[337]    0.0    0.00    0.00     398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocate(unsigned long, void const*) [337]
                0.00    0.00     398/398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::max_size() const [339]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
[338]    0.0    0.00    0.00     398         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
                0.00    0.00     398/3588        std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [70]
                0.00    0.00     398/3588        std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&) [71]
                0.00    0.00     398/3588        std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [72]
                0.00    0.00     398/243062      operator new(unsigned long, void*) [24]
                0.00    0.00     398/398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
-----------------------------------------------
                0.00    0.00     398/398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocate(unsigned long, void const*) [337]
[339]    0.0    0.00    0.00     398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::max_size() const [339]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
[340]    0.0    0.00    0.00     398         std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::operator->() const [340]
                0.00    0.00     398/398         std::pair<maze::Cell* const, maze::Pathway*>* std::__addressof<std::pair<maze::Cell* const, maze::Pathway*> >(std::pair<maze::Cell* const, maze::Pathway*>&) [351]
-----------------------------------------------
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
[341]    0.0    0.00    0.00     398         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) const [341]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
[342]    0.0    0.00    0.00     398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [342]
                0.00    0.00     796/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [158]
                0.00    0.00     398/398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocate(unsigned long, void const*) [337]
                0.00    0.00     398/3588        std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [72]
                0.00    0.00     398/3588        std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&) [71]
                0.00    0.00     398/3588        std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [70]
                0.00    0.00     398/398         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
-----------------------------------------------
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [601]
[343]    0.0    0.00    0.00     398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [343]
                0.00    0.00     796/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [158]
                0.00    0.00     398/398         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [336]
                0.00    0.00     398/398         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) [335]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&) [301]
[344]    0.0    0.00    0.00     398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
                0.00    0.00     398/1991        std::__detail::_Prime_rehash_policy::_M_state() const [119]
                0.00    0.00     398/398         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) const [341]
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [345]
                0.00    0.00     398/398         std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [349]
                0.00    0.00       5/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [466]
                0.00    0.00       5/5           std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [470]
                0.00    0.00       5/391         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const [361]
                0.00    0.00       5/509         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [295]
-----------------------------------------------
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
[345]    0.0    0.00    0.00     398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [345]
                0.00    0.00     621/1584        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() [168]
                0.00    0.00     206/1343        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const [171]
                0.00    0.00     206/483         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [302]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
[346]    0.0    0.00    0.00     398         std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&>(std::piecewise_construct_t, std::tuple<maze::Cell* const&>, std::tuple<>) [346]
                0.00    0.00     398/398         std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&, 0ul>(std::tuple<maze::Cell* const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [347]
-----------------------------------------------
                0.00    0.00     398/398         std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&>(std::piecewise_construct_t, std::tuple<maze::Cell* const&>, std::tuple<>) [346]
[347]    0.0    0.00    0.00     398         std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&, 0ul>(std::tuple<maze::Cell* const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>) [347]
                0.00    0.00     398/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00     398/1196        std::__add_ref<std::tuple_element<0ul, std::tuple<maze::Cell* const&> >::type>::type std::get<0ul, maze::Cell* const&>(std::tuple<maze::Cell* const&>&) [191]
-----------------------------------------------
                0.00    0.00     398/398         void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [338]
[348]    0.0    0.00    0.00     398         std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348]
                0.00    0.00     398/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
                0.00    0.00     398/3588        std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&) [72]
                0.00    0.00     398/3588        std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&) [71]
                0.00    0.00     398/3588        std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&) [70]
                0.00    0.00     398/1196        std::tuple<maze::Cell* const&>::tuple(std::tuple<maze::Cell* const&>&&) [188]
                0.00    0.00     398/398         std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&>(std::piecewise_construct_t, std::tuple<maze::Cell* const&>, std::tuple<>) [346]
-----------------------------------------------
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
[349]    0.0    0.00    0.00     398         std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [349]
                0.00    0.00     398/398         std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [350]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [349]
[350]    0.0    0.00    0.00     398         std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [350]
-----------------------------------------------
                0.00    0.00     398/398         std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::operator->() const [340]
[351]    0.0    0.00    0.00     398         std::pair<maze::Cell* const, maze::Pathway*>* std::__addressof<std::pair<maze::Cell* const, maze::Pathway*> >(std::pair<maze::Cell* const, maze::Pathway*>&) [351]
-----------------------------------------------
                0.00    0.00     398/398         maze::Maze::num_cells() [334]
[352]    0.0    0.00    0.00     398         std::remove_reference<maze::Priority_and_cell&>::type&& std::move<maze::Priority_and_cell&>(maze::Priority_and_cell&) [352]
                0.00    0.00     398/400         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::reserve(unsigned long) [320]
-----------------------------------------------
                0.00    0.00     397/397         std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [211]
[353]    0.0    0.00    0.00     397         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [353]
                0.00    0.00     777/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
-----------------------------------------------
                                 397             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
[354]    0.0    0.00    0.00     397         std::allocator<maze::Priority_and_cell>::allocator(std::allocator<maze::Priority_and_cell> const&) <cycle 3> [354]
                                   5             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
-----------------------------------------------
                0.00    0.00     397/397         maze::AStarSolver::solve_maze() <cycle 1> [506]
[355]    0.0    0.00    0.00     397         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [355]
                0.00    0.00     794/794         std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [283]
                0.00    0.00     397/1191        std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long) [211]
-----------------------------------------------
                0.00    0.00     396/396         maze::AStarSolver::solve_maze() <cycle 1> [506]
[356]    0.0    0.00    0.00     396         maze::Cell::get_pathways() [356]
-----------------------------------------------
                0.00    0.00     396/396         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const <cycle 3> [167]
[357]    0.0    0.00    0.00     396         std::remove_reference<maze::Priority_and_cell*&>::type&& std::move<maze::Priority_and_cell*&>(maze::Priority_and_cell*&) [357]
-----------------------------------------------
                0.00    0.00       4/394         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux() [492]
                0.00    0.00     390/394         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::pop_back() [359]
[358]    0.0    0.00    0.00     394         void __gnu_cxx::new_allocator<maze::Cell*>::destroy<maze::Cell*>(maze::Cell**) [358]
-----------------------------------------------
                0.00    0.00     394/394         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::pop() [360]
[359]    0.0    0.00    0.00     394         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::pop_back() [359]
                0.00    0.00     390/394         void __gnu_cxx::new_allocator<maze::Cell*>::destroy<maze::Cell*>(maze::Cell**) [358]
                0.00    0.00       4/4           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux() [492]
-----------------------------------------------
                0.00    0.00     394/394         maze::DepthFirstSearchGenerator::make_maze() [575]
[360]    0.0    0.00    0.00     394         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::pop() [360]
                0.00    0.00     394/394         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::pop_back() [359]
-----------------------------------------------
                0.00    0.00       5/391         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
                0.00    0.00     386/391         std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [367]
[361]    0.0    0.00    0.00     391         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const [361]
                0.00    0.00     391/391         std::pair<maze::Cell* const, maze::Pathway*>& std::forward<std::pair<maze::Cell* const, maze::Pathway*>&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*>&>::type&) [364]
                0.00    0.00     391/391         std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&) [363]
-----------------------------------------------
                0.00    0.00     391/391         std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&) [363]
[362]    0.0    0.00    0.00     391         maze::Cell* const& std::__pair_get<0ul>::__get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&) [362]
-----------------------------------------------
                0.00    0.00     391/391         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const [361]
[363]    0.0    0.00    0.00     391         std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&) [363]
                0.00    0.00     391/391         maze::Cell* const& std::__pair_get<0ul>::__get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&) [362]
-----------------------------------------------
                0.00    0.00     391/391         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const [361]
[364]    0.0    0.00    0.00     391         std::pair<maze::Cell* const, maze::Pathway*>& std::forward<std::pair<maze::Cell* const, maze::Pathway*>&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*>&>::type&) [364]
-----------------------------------------------
                0.00    0.00     386/386         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [366]
[365]    0.0    0.00    0.00     386         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [365]
                0.00    0.00     386/4461        std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true> const&) [67]
-----------------------------------------------
                0.00    0.00     386/386         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [298]
[366]    0.0    0.00    0.00     386         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [366]
                0.00    0.00     386/1241        std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [173]
                0.00    0.00     386/386         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [365]
                0.00    0.00     386/386         std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [367]
-----------------------------------------------
                0.00    0.00     386/386         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [366]
[367]    0.0    0.00    0.00     386         std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [367]
                0.00    0.00     386/391         decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const [361]
                0.00    0.00     386/4461        std::equal_to<maze::Cell*>::operator()(maze::Cell* const&, maze::Cell* const&) const [66]
-----------------------------------------------
                0.00    0.00     378/378         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [49]
[368]    0.0    0.00    0.00     378         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*) const [368]
-----------------------------------------------
                0.00    0.00     279/279         void std::swap<maze::Cell**>(maze::Cell**&, maze::Cell**&) [371]
[369]    0.0    0.00    0.00     279         std::remove_reference<maze::Cell**&>::type&& std::move<maze::Cell**&>(maze::Cell**&) [369]
-----------------------------------------------
                0.00    0.00     106/106         maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*) [569]
[370]    0.0    0.00    0.00     106         maze::Pathway::set_solved_pathway() [370]
-----------------------------------------------
                0.00    0.00      93/93          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl&) [389]
[371]    0.0    0.00    0.00      93         void std::swap<maze::Cell**>(maze::Cell**&, maze::Cell**&) [371]
                0.00    0.00     279/279         std::remove_reference<maze::Cell**&>::type&& std::move<maze::Cell**&>(maze::Cell**&) [369]
-----------------------------------------------
                0.00    0.00      31/82          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
                0.00    0.00      51/82          void std::_Destroy_aux<false>::__destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [440]
[372]    0.0    0.00    0.00      82         std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__addressof<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&) [372]
-----------------------------------------------
                0.00    0.00      74/74          bool std::operator==<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&) [386]
[373]    0.0    0.00    0.00      74         std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::base() const [373]
-----------------------------------------------
                0.00    0.00      72/72          std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [375]
[374]    0.0    0.00    0.00      72         __gnu_cxx::new_allocator<maze::Cell*>::new_allocator(__gnu_cxx::new_allocator<maze::Cell*> const&) [374]
-----------------------------------------------
                0.00    0.00       1/72          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&) [608]
                0.00    0.00      20/72          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*> const&) [407]
                0.00    0.00      20/72          std::enable_if<!std::allocator_traits<std::allocator<maze::Cell*> >::__select_helper<std::allocator<maze::Cell*> const>::value, std::allocator<maze::Cell*> const>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_select<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [411]
                0.00    0.00      31/72          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*>&&) [390]
[375]    0.0    0.00    0.00      72         std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [375]
                0.00    0.00      72/72          __gnu_cxx::new_allocator<maze::Cell*>::new_allocator(__gnu_cxx::new_allocator<maze::Cell*> const&) [374]
-----------------------------------------------
                0.00    0.00       6/66          void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
                0.00    0.00      20/66          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_ [413]
                0.00    0.00      20/66          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE12_S_constructIS5_IRKS5_EEENSt9enable_ifIXsrNS7_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS6_PSD_DpOSE_ [412]
                0.00    0.00      20/66          _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_ [404]
[376]    0.0    0.00    0.00      66         std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&) [376]
-----------------------------------------------
                0.00    0.00       1/64          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
                0.00    0.00       1/64          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&) [608]
                0.00    0.00      31/64          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [391]
                0.00    0.00      31/64          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*>&&) [390]
[377]    0.0    0.00    0.00      64         std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&) [377]
-----------------------------------------------
                0.00    0.00      31/62          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator*() const [388]
                0.00    0.00      31/62          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [393]
[378]    0.0    0.00    0.00      62         std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&) [378]
-----------------------------------------------
                0.00    0.00      51/51          void std::_Destroy_aux<false>::__destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [440]
[379]    0.0    0.00    0.00      51         void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [379]
                0.00    0.00      51/864         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
-----------------------------------------------
                                  10             _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ <cycle 4> [438]
                0.00    0.00       5/40          std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const [268]
                0.00    0.00      35/40          std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) <cycle 3> [82]
[380]    0.0    0.00    0.00      50         std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) <cycle 4> [380]
                                  10             _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ <cycle 4> [438]
-----------------------------------------------
                0.00    0.00      40/40          std::_Miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [383]
[381]    0.0    0.00    0.00      40         std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [381]
-----------------------------------------------
                0.00    0.00      40/40          std::_Niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [384]
[382]    0.0    0.00    0.00      40         std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [382]
                0.00    0.00      40/1626        __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::base() const [154]
-----------------------------------------------
                0.00    0.00      40/40          maze::Cell** std::copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [421]
[383]    0.0    0.00    0.00      40         std::_Miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [383]
                0.00    0.00      40/40          std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [381]
-----------------------------------------------
                0.00    0.00      40/40          maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [418]
[384]    0.0    0.00    0.00      40         std::_Niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [384]
                0.00    0.00      40/40          std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [382]
-----------------------------------------------
                0.00    0.00       4/37          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
                0.00    0.00       6/37          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**) [455]
                0.00    0.00       6/37          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node() [454]
                0.00    0.00      21/37          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_S_buffer_size() [402]
[385]    0.0    0.00    0.00      37         std::__deque_buf_size(unsigned long) [385]
-----------------------------------------------
                0.00    0.00      37/37          bool std::operator!=<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&) [387]
[386]    0.0    0.00    0.00      37         bool std::operator==<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&) [386]
                0.00    0.00      74/74          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::base() const [373]
-----------------------------------------------
                0.00    0.00      37/37          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
[387]    0.0    0.00    0.00      37         bool std::operator!=<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&) [387]
                0.00    0.00      37/37          bool std::operator==<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&) [386]
-----------------------------------------------
                0.00    0.00      31/31          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
[388]    0.0    0.00    0.00      31         std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator*() const [388]
                0.00    0.00      31/62          std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&) [378]
-----------------------------------------------
                0.00    0.00      31/31          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [391]
[389]    0.0    0.00    0.00      31         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl&) [389]
                0.00    0.00      93/93          void std::swap<maze::Cell**>(maze::Cell**&, maze::Cell**&) [371]
-----------------------------------------------
                0.00    0.00      31/31          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [391]
[390]    0.0    0.00    0.00      31         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*>&&) [390]
                0.00    0.00      31/64          std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&) [377]
                0.00    0.00      31/72          std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [375]
-----------------------------------------------
                0.00    0.00      31/31          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [393]
[391]    0.0    0.00    0.00      31         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [391]
                0.00    0.00      31/2761        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [97]
                0.00    0.00      31/64          std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&) [377]
                0.00    0.00      31/31          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*>&&) [390]
                0.00    0.00      31/31          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl&) [389]
-----------------------------------------------
                0.00    0.00      31/31          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
[392]    0.0    0.00    0.00      31         std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator++() [392]
-----------------------------------------------
                0.00    0.00      31/31          void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [394]
[393]    0.0    0.00    0.00      31         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [393]
                0.00    0.00      31/62          std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&) [378]
                0.00    0.00      31/31          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [391]
-----------------------------------------------
                0.00    0.00      31/31          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
[394]    0.0    0.00    0.00      31         void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [394]
                0.00    0.00      31/31          std::vector<maze::Cell*, std::allocator<maze::Cell*> >&& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::type&) [395]
                0.00    0.00      31/243062      operator new(unsigned long, void*) [24]
                0.00    0.00      31/31          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [393]
-----------------------------------------------
                0.00    0.00      31/31          void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [394]
[395]    0.0    0.00    0.00      31         std::vector<maze::Cell*, std::allocator<maze::Cell*> >&& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::type&) [395]
-----------------------------------------------
                0.00    0.00       6/30          void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
                0.00    0.00      24/30          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const [449]
[396]    0.0    0.00    0.00      30         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::size() const [396]
-----------------------------------------------
                0.00    0.00      30/30          std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
[397]    0.0    0.00    0.00      30         std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_allocate(unsigned long) [397]
-----------------------------------------------
                0.00    0.00       5/25          std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, unsigned int> > const&>(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [1137]
                0.00    0.00      20/25          std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
[398]    0.0    0.00    0.00      25         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [398]
-----------------------------------------------
                                  20             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
                0.00    0.00       5/25          main [11]
                0.00    0.00      20/25          void __gnu_cxx::new_allocator<maze::Priority_and_cell>::destroy<maze::Priority_and_cell>(maze::Priority_and_cell*) [403]
[399]    0.0    0.00    0.00      25+20      std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
                0.00    0.00       4/4           void __gnu_cxx::new_allocator<maze::Priority_and_cell>::construct<maze::Priority_and_cell, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell&&) [477]
                0.00    0.00       4/4           std::move_iterator<maze::Priority_and_cell*> std::__make_move_if_noexcept_iterator<maze::Priority_and_cell*, std::move_iterator<maze::Priority_and_cell*> >(maze::Priority_and_cell*) [496]
                0.00    0.00       4/4           maze::Priority_and_cell* std::__uninitialized_copy_a<std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, maze::Priority_and_cell>(std::move_iterator<maze::Priority_and_cell*>, std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [495]
                                  20             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
-----------------------------------------------
                0.00    0.00       4/24          __gnu_cxx::new_allocator<maze::Priority_and_cell>::allocate(unsigned long, void const*) [476]
                0.00    0.00       8/24          std::pair<maze::Cell* const, unsigned int>::pair<maze::Cell* const&>(std::piecewise_construct_t, std::tuple<maze::Cell* const&>, std::tuple<>) [1072]
                0.00    0.00      12/24          void __gnu_cxx::new_allocator<maze::Priority_and_cell>::construct<maze::Priority_and_cell, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell&&) [477]
[400]    0.0    0.00    0.00      24         std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [400]
-----------------------------------------------
                0.00    0.00       4/21          std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
                0.00    0.00       4/21          std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux() [492]
                0.00    0.00       4/21          void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
                0.00    0.00       9/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator--() [287]
[401]    0.0    0.00    0.00      21         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [401]
                0.00    0.00      21/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_S_buffer_size() [402]
-----------------------------------------------
                0.00    0.00      21/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [401]
[402]    0.0    0.00    0.00      21         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_S_buffer_size() [402]
                0.00    0.00      21/37          std::__deque_buf_size(unsigned long) [385]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
[403]    0.0    0.00    0.00      20         void __gnu_cxx::new_allocator<maze::Priority_and_cell>::destroy<maze::Priority_and_cell>(maze::Priority_and_cell*) [403]
                0.00    0.00      20/25          std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
-----------------------------------------------
                0.00    0.00      20/20          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE12_S_constructIS5_IRKS5_EEENSt9enable_ifIXsrNS7_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS6_PSD_DpOSE_ [412]
[404]    0.0    0.00    0.00      20         _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_ [404]
                0.00    0.00      20/66          std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&) [376]
                0.00    0.00      20/243062      operator new(unsigned long, void*) [24]
                0.00    0.00      20/20          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
[405]    0.0    0.00    0.00      20         __gnu_cxx::__alloc_traits<std::allocator<maze::Cell*> >::_S_select_on_copy(std::allocator<maze::Cell*> const&) [405]
                0.00    0.00      20/20          std::allocator_traits<std::allocator<maze::Cell*> >::select_on_container_copy_construction(std::allocator<maze::Cell*> const&) [410]
-----------------------------------------------
                0.00    0.00      20/20          maze::Cell** std::__copy_move_a<false, maze::Cell* const*, maze::Cell**>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [417]
[406]    0.0    0.00    0.00      20         maze::Cell** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [406]
-----------------------------------------------
                0.00    0.00      20/20          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(unsigned long, std::allocator<maze::Cell*> const&) [409]
[407]    0.0    0.00    0.00      20         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*> const&) [407]
                0.00    0.00      20/72          std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [375]
-----------------------------------------------
                0.00    0.00      20/20          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(unsigned long, std::allocator<maze::Cell*> const&) [409]
[408]    0.0    0.00    0.00      20         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_storage(unsigned long) [408]
                0.00    0.00      20/943         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate(unsigned long) [216]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
[409]    0.0    0.00    0.00      20         std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(unsigned long, std::allocator<maze::Cell*> const&) [409]
                0.00    0.00      20/20          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*> const&) [407]
                0.00    0.00      20/20          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_storage(unsigned long) [408]
-----------------------------------------------
                0.00    0.00      20/20          __gnu_cxx::__alloc_traits<std::allocator<maze::Cell*> >::_S_select_on_copy(std::allocator<maze::Cell*> const&) [405]
[410]    0.0    0.00    0.00      20         std::allocator_traits<std::allocator<maze::Cell*> >::select_on_container_copy_construction(std::allocator<maze::Cell*> const&) [410]
                0.00    0.00      20/20          std::enable_if<!std::allocator_traits<std::allocator<maze::Cell*> >::__select_helper<std::allocator<maze::Cell*> const>::value, std::allocator<maze::Cell*> const>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_select<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [411]
-----------------------------------------------
                0.00    0.00      20/20          std::allocator_traits<std::allocator<maze::Cell*> >::select_on_container_copy_construction(std::allocator<maze::Cell*> const&) [410]
[411]    0.0    0.00    0.00      20         std::enable_if<!std::allocator_traits<std::allocator<maze::Cell*> >::__select_helper<std::allocator<maze::Cell*> const>::value, std::allocator<maze::Cell*> const>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_select<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [411]
                0.00    0.00      20/72          std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [375]
-----------------------------------------------
                0.00    0.00      20/20          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_ [413]
[412]    0.0    0.00    0.00      20         _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE12_S_constructIS5_IRKS5_EEENSt9enable_ifIXsrNS7_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS6_PSD_DpOSE_ [412]
                0.00    0.00      20/66          std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&) [376]
                0.00    0.00      20/20          _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_ [404]
-----------------------------------------------
                0.00    0.00       6/20          void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
                0.00    0.00      14/20          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::push_back(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [416]
[413]    0.0    0.00    0.00      20         _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_ [413]
                0.00    0.00      20/66          std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&) [376]
                0.00    0.00      20/20          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE12_S_constructIS5_IRKS5_EEENSt9enable_ifIXsrNS7_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS6_PSD_DpOSE_ [412]
-----------------------------------------------
                0.00    0.00      20/20          maze::Cell** std::uninitialized_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [419]
[414]    0.0    0.00    0.00      20         maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [414]
                0.00    0.00      20/20          maze::Cell** std::copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [421]
-----------------------------------------------
                0.00    0.00      20/20          _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_ [404]
[415]    0.0    0.00    0.00      20         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
                0.00    0.00      20/1866        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [128]
                0.00    0.00      20/20          __gnu_cxx::__alloc_traits<std::allocator<maze::Cell*> >::_S_select_on_copy(std::allocator<maze::Cell*> const&) [405]
                0.00    0.00      20/5034        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const [62]
                0.00    0.00      20/20          std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(unsigned long, std::allocator<maze::Cell*> const&) [409]
                0.00    0.00      20/888         std::allocator<maze::Cell*>::~allocator() [229]
                0.00    0.00      20/2761        std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [97]
                0.00    0.00      20/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::end() const [253]
                0.00    0.00      20/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::begin() const [254]
                0.00    0.00      20/20          maze::Cell** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, maze::Cell*>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, std::allocator<maze::Cell*>&) [420]
-----------------------------------------------
                0.00    0.00      20/20          maze::Maze::Maze(unsigned int, unsigned int) [579]
[416]    0.0    0.00    0.00      20         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::push_back(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [416]
                0.00    0.00      14/20          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_ [413]
                0.00    0.00       6/6           void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
-----------------------------------------------
                0.00    0.00      20/20          maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [418]
[417]    0.0    0.00    0.00      20         maze::Cell** std::__copy_move_a<false, maze::Cell* const*, maze::Cell**>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [417]
                0.00    0.00      20/20          maze::Cell** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [406]
-----------------------------------------------
                0.00    0.00      20/20          maze::Cell** std::copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [421]
[418]    0.0    0.00    0.00      20         maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [418]
                0.00    0.00      40/40          std::_Niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [384]
                0.00    0.00      20/2789        std::_Niter_base<maze::Cell**>::iterator_type std::__niter_base<maze::Cell**>(maze::Cell**) [94]
                0.00    0.00      20/20          maze::Cell** std::__copy_move_a<false, maze::Cell* const*, maze::Cell**>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [417]
-----------------------------------------------
                0.00    0.00      20/20          maze::Cell** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, maze::Cell*>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, std::allocator<maze::Cell*>&) [420]
[419]    0.0    0.00    0.00      20         maze::Cell** std::uninitialized_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [419]
                0.00    0.00      20/20          maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [414]
-----------------------------------------------
                0.00    0.00      20/20          std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [415]
[420]    0.0    0.00    0.00      20         maze::Cell** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, maze::Cell*>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, std::allocator<maze::Cell*>&) [420]
                0.00    0.00      20/20          maze::Cell** std::uninitialized_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [419]
-----------------------------------------------
                0.00    0.00      20/20          maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [414]
[421]    0.0    0.00    0.00      20         maze::Cell** std::copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [421]
                0.00    0.00      40/40          std::_Miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [383]
                0.00    0.00      20/20          maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [418]
-----------------------------------------------
                0.00    0.00       6/18          __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocate(unsigned long, void const*) [446]
                0.00    0.00      12/18          std::enable_if<std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::__maxsize_helper<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>::value, unsigned long>::type std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_S_max_size<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [434]
[422]    0.0    0.00    0.00      18         __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::max_size() const [422]
-----------------------------------------------
                0.00    0.00      18/18          __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [424]
[423]    0.0    0.00    0.00      18         std::char_traits<char>::compare(char const*, char const*, unsigned long) [423]
-----------------------------------------------
                0.00    0.00      18/18          main [11]
[424]    0.0    0.00    0.00      18         __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [424]
                0.00    0.00      18/18          std::char_traits<char>::compare(char const*, char const*, unsigned long) [423]
-----------------------------------------------
                                   1             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() const <cycle 2> [439]
                                  10             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                0.00    0.00       1/1222        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() const [817]
                0.00    0.00       5/1222        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::__rehash_policy() const [820]
[425]    0.0    0.00    0.00      17         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
                0.00    0.00       5/835098      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
                                   7             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() const <cycle 2> [439]
                                   1             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
-----------------------------------------------
                0.00    0.00      15/15          std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
[426]    0.0    0.00    0.00      15         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::size() const [426]
                0.00    0.00      15/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
-----------------------------------------------
                0.00    0.00       5/15          std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [470]
                0.00    0.00      10/15          std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) <cycle 3> [126]
[427]    0.0    0.00    0.00      15         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&) [427]
-----------------------------------------------
                0.00    0.00      15/15          std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
[428]    0.0    0.00    0.00      15         maze::Priority_and_cell* std::__uninitialized_move_if_noexcept_a<maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell> >(maze::Priority_and_cell*, maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [428]
                0.00    0.00      15/835098      std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
                0.00    0.00      15/243062      operator new(unsigned long, void*) [24]
-----------------------------------------------
                0.00    0.00       1/13          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector() [644]
                0.00    0.00      12/13          void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
[429]    0.0    0.00    0.00      13         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() [429]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size() const [431]
[430]    0.0    0.00    0.00      12         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() const [430]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const [449]
[431]    0.0    0.00    0.00      12         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size() const [431]
                0.00    0.00      12/12          std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() const [430]
                0.00    0.00      12/12          std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [435]
-----------------------------------------------
                0.00    0.00       6/12          std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
                0.00    0.00       6/12          std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
[432]    0.0    0.00    0.00      12         std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > const&) [432]
                0.00    0.00      12/3230        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [75]
-----------------------------------------------
                0.00    0.00      12/12          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> std::__make_move_if_noexcept_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [436]
[433]    0.0    0.00    0.00      12         std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::move_iterator(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [433]
-----------------------------------------------
                0.00    0.00      12/12          std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [435]
[434]    0.0    0.00    0.00      12         std::enable_if<std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::__maxsize_helper<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>::value, unsigned long>::type std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_S_max_size<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [434]
                0.00    0.00      12/18          __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::max_size() const [422]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size() const [431]
[435]    0.0    0.00    0.00      12         std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [435]
                0.00    0.00      12/12          std::enable_if<std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::__maxsize_helper<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>::value, unsigned long>::type std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_S_max_size<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [434]
-----------------------------------------------
                0.00    0.00      12/12          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_move_if_noexcept_a<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [461]
[436]    0.0    0.00    0.00      12         std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> std::__make_move_if_noexcept_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [436]
                0.00    0.00      12/12          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::move_iterator(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [433]
-----------------------------------------------
                                  10             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) <cycle 3> [65]
[437]    0.0    0.00    0.00      10         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*, unsigned long) const <cycle 3> [437]
                                 808             void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
-----------------------------------------------
                                   5             _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ <cycle 4> [438]
                                  10             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) <cycle 4> [380]
[438]    0.0    0.00    0.00      10+5       _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ <cycle 4> [438]
                                  10             std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) <cycle 4> [380]
                                   5             _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ <cycle 4> [438]
-----------------------------------------------
                                   7             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
                0.00    0.00       1/1222        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() const [817]
[439]    0.0    0.00    0.00       8         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() const <cycle 2> [439]
                                   1             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) <cycle 2> [425]
-----------------------------------------------
                0.00    0.00       7/7           void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [442]
[440]    0.0    0.00    0.00       7         void std::_Destroy_aux<false>::__destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [440]
                0.00    0.00      51/82          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__addressof<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&) [372]
                0.00    0.00      51/51          void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [379]
-----------------------------------------------
                0.00    0.00       1/7           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~_Vector_base() [616]
                0.00    0.00       6/7           void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
[441]    0.0    0.00    0.00       7         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [441]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [445]
-----------------------------------------------
                0.00    0.00       7/7           void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [443]
[442]    0.0    0.00    0.00       7         void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [442]
                0.00    0.00       7/7           void std::_Destroy_aux<false>::__destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [440]
-----------------------------------------------
                0.00    0.00       1/7           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector() [644]
                0.00    0.00       6/7           void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
[443]    0.0    0.00    0.00       7         void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [443]
                0.00    0.00       7/7           void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [442]
-----------------------------------------------
                0.00    0.00       2/6           __gnu_cxx::__atomic_add_dispatch(int*, int) [511]
                0.00    0.00       4/6           __gnu_cxx::__exchange_and_add_dispatch(int*, int) [481]
[444]    0.0    0.00    0.00       6         __gthread_active_p() [444]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [441]
[445]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [445]
-----------------------------------------------
                0.00    0.00       6/6           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_allocate(unsigned long) [456]
[446]    0.0    0.00    0.00       6         __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocate(unsigned long, void const*) [446]
                0.00    0.00       6/18          __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::max_size() const [422]
-----------------------------------------------
                0.00    0.00       6/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [448]
[447]    0.0    0.00    0.00       6         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() const [447]
-----------------------------------------------
                0.00    0.00       1/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [602]
                0.00    0.00       5/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
[448]    0.0    0.00    0.00       6         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [448]
                0.00    0.00       6/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() const [447]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
[449]    0.0    0.00    0.00       6         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const [449]
                0.00    0.00      24/30          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::size() const [396]
                0.00    0.00      12/12          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size() const [431]
                0.00    0.00       6/1761        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [142]
-----------------------------------------------
                0.00    0.00       6/6           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [451]
[450]    0.0    0.00    0.00       6         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
                0.00    0.00     981/6571        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() [57]
                0.00    0.00     382/319511      std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [17]
                0.00    0.00     382/160138      std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [35]
                0.00    0.00       6/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
                0.00    0.00       6/2371        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [108]
                0.00    0.00       6/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [183]
-----------------------------------------------
                0.00    0.00       6/6           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [274]
[451]    0.0    0.00    0.00       6         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [451]
                0.00    0.00       6/6           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [450]
-----------------------------------------------
                0.00    0.00       1/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
                0.00    0.00       5/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
[452]    0.0    0.00    0.00       6         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
                0.00    0.00       6/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [158]
                0.00    0.00       6/12          std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > const&) [432]
                0.00    0.00       6/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [156]
                0.00    0.00       6/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
-----------------------------------------------
                0.00    0.00       1/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [605]
                0.00    0.00       5/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
[453]    0.0    0.00    0.00       6         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
                0.00    0.00       6/1604        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [158]
                0.00    0.00       6/12          std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > const&) [432]
                0.00    0.00       6/1615        __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [155]
                0.00    0.00       6/3230        std::allocator<std::__detail::_Hash_node_base*>::~allocator() [77]
-----------------------------------------------
                0.00    0.00       2/6           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_nodes(maze::Cell***, maze::Cell***) [521]
                0.00    0.00       4/6           void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
[454]    0.0    0.00    0.00       6         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node() [454]
                0.00    0.00       6/37          std::__deque_buf_size(unsigned long) [385]
                0.00    0.00       6/949         __gnu_cxx::new_allocator<maze::Cell*>::allocate(unsigned long, void const*) [215]
-----------------------------------------------
                0.00    0.00       2/6           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_nodes(maze::Cell***, maze::Cell***) [522]
                0.00    0.00       4/6           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux() [492]
[455]    0.0    0.00    0.00       6         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**) [455]
                0.00    0.00       6/37          std::__deque_buf_size(unsigned long) [385]
                0.00    0.00       6/949         __gnu_cxx::new_allocator<maze::Cell*>::deallocate(maze::Cell**, unsigned long) [214]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
[456]    0.0    0.00    0.00       6         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_allocate(unsigned long) [456]
                0.00    0.00       6/6           __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocate(unsigned long, void const*) [446]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::uninitialized_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [459]
[457]    0.0    0.00    0.00       6         std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
                0.00    0.00      37/37          bool std::operator!=<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&) [387]
                0.00    0.00      31/31          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator*() const [388]
                0.00    0.00      31/31          void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&) [394]
                0.00    0.00      31/82          std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__addressof<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&) [372]
                0.00    0.00      31/31          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator++() [392]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::push_back(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [416]
[458]    0.0    0.00    0.00       6         void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
                0.00    0.00      12/13          std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() [429]
                0.00    0.00       6/6           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const [449]
                0.00    0.00       6/6           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_allocate(unsigned long) [456]
                0.00    0.00       6/66          std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&) [376]
                0.00    0.00       6/30          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::size() const [396]
                0.00    0.00       6/20          _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_ [413]
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_move_if_noexcept_a<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [461]
                0.00    0.00       6/7           void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [443]
                0.00    0.00       6/7           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [441]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [460]
[459]    0.0    0.00    0.00       6         std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::uninitialized_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [459]
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [457]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_move_if_noexcept_a<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [461]
[460]    0.0    0.00    0.00       6         std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [460]
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::uninitialized_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [459]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [458]
[461]    0.0    0.00    0.00       6         std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_move_if_noexcept_a<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [461]
                0.00    0.00      12/12          std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> std::__make_move_if_noexcept_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [436]
                0.00    0.00       6/6           std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [460]
-----------------------------------------------
                0.00    0.00       6/6           void std::swap<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> >(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&) [544]
[462]    0.0    0.00    0.00       6         std::remove_reference<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>::type&& std::move<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&) [462]
-----------------------------------------------
                0.00    0.00       2/6           std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::~priority_queue() [532]
                0.00    0.00       2/6           std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::~unordered_map() [528]
                0.00    0.00       2/6           std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::vector() [1111]
[463]    0.0    0.00    0.00       6         void std::_Destroy<maze::Priority_and_cell*, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [463]
-----------------------------------------------
                0.00    0.00       5/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [940]
[464]    0.0    0.00    0.00       5         decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) const [464]
-----------------------------------------------
                0.00    0.00       5/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [466]
[465]    0.0    0.00    0.00       5         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
                0.00    0.00     962/1584        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() [168]
                0.00    0.00     372/1343        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const [171]
                0.00    0.00     372/855         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [234]
                0.00    0.00       5/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
                0.00    0.00       5/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [448]
                0.00    0.00       5/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
-----------------------------------------------
                0.00    0.00       5/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
[466]    0.0    0.00    0.00       5         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [466]
                0.00    0.00       5/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [465]
-----------------------------------------------
                0.00    0.00       1/5           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [620]
                0.00    0.00       4/5           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [490]
[467]    0.0    0.00    0.00       5         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [467]
                0.00    0.00       3/3           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [500]
-----------------------------------------------
                0.00    0.00       1/5           std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [622]
                0.00    0.00       2/5           std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [529]
                0.00    0.00       2/5           std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > > const&) [527]
[468]    0.0    0.00    0.00       5         std::__allow_copy_cons<true>::__allow_copy_cons() [468]
-----------------------------------------------
                0.00    0.00       5/5           std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) <cycle 3> [471]
[469]    0.0    0.00    0.00       5         std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) [469]
-----------------------------------------------
                0.00    0.00       5/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [344]
[470]    0.0    0.00    0.00       5         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() [470]
                0.00    0.00       5/15          std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&) [427]
-----------------------------------------------
                                   5             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) <cycle 3> [117]
[471]    0.0    0.00    0.00       5         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) <cycle 3> [471]
                0.00    0.00       5/5           std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) [469]
                                 404             std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) <cycle 3> [303]
-----------------------------------------------
                0.00    0.00       1/5           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
                0.00    0.00       2/5           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
                0.00    0.00       2/5           void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [15]
[472]    0.0    0.00    0.00       5         std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [472]
-----------------------------------------------
                0.00    0.00       1/5           std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [649]
                0.00    0.00       2/5           std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [540]
                0.00    0.00       2/5           void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
[473]    0.0    0.00    0.00       5         std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_Hashtable_ebo_helper(std::equal_to<maze::Cell*> const&) [473]
-----------------------------------------------
                0.00    0.00       1/5           std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [648]
                0.00    0.00       2/5           std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [539]
                0.00    0.00       2/5           _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [1046]
[474]    0.0    0.00    0.00       5         std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_Hashtable_ebo_helper(std::hash<maze::Cell*> const&) [474]
-----------------------------------------------
                0.00    0.00       1/5           std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [648]
                0.00    0.00       2/5           std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [539]
                0.00    0.00       2/5           _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [1046]
[475]    0.0    0.00    0.00       5         std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_Hashtable_ebo_helper(std::__detail::_Mod_range_hashing const&) [475]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<maze::Priority_and_cell*> std::__make_move_if_noexcept_iterator<maze::Priority_and_cell*, std::move_iterator<maze::Priority_and_cell*> >(maze::Priority_and_cell*) [496]
[476]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<maze::Priority_and_cell>::allocate(unsigned long, void const*) [476]
                0.00    0.00       4/24          std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [400]
-----------------------------------------------
                0.00    0.00       4/4           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
[477]    0.0    0.00    0.00       4         void __gnu_cxx::new_allocator<maze::Priority_and_cell>::construct<maze::Priority_and_cell, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell&&) [477]
                0.00    0.00      12/24          std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [400]
                0.00    0.00       4/4           std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [485]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<maze::Cell**>::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [487]
[478]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<maze::Cell**>::new_allocator() [478]
-----------------------------------------------
                0.00    0.00       4/4           std::allocator<maze::Cell**>::~allocator() [488]
[479]    0.0    0.00    0.00       4         __gnu_cxx::new_allocator<maze::Cell**>::~new_allocator() [479]
-----------------------------------------------
                0.00    0.00       4/4           __gnu_cxx::__exchange_and_add_dispatch(int*, int) [481]
[480]    0.0    0.00    0.00       4         __gnu_cxx::__exchange_and_add_single(int*, int) [480]
-----------------------------------------------
                0.00    0.00       4/4           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [500]
[481]    0.0    0.00    0.00       4         __gnu_cxx::__exchange_and_add_dispatch(int*, int) [481]
                0.00    0.00       4/6           __gthread_active_p() [444]
                0.00    0.00       4/4           __gnu_cxx::__exchange_and_add_single(int*, int) [480]
-----------------------------------------------
                0.00    0.00       4/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const [483]
[482]    0.0    0.00    0.00       4         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [482]
-----------------------------------------------
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long) [523]
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long) [520]
[483]    0.0    0.00    0.00       4         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const [483]
                0.00    0.00       4/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [482]
                0.00    0.00       4/4           std::allocator<maze::Cell**>::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [487]
-----------------------------------------------
                0.00    0.00       4/4           std::move_iterator<maze::Priority_and_cell*> std::__make_move_if_noexcept_iterator<maze::Priority_and_cell*, std::move_iterator<maze::Priority_and_cell*> >(maze::Priority_and_cell*) [496]
[484]    0.0    0.00    0.00       4         std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::max_size() const [484]
-----------------------------------------------
                0.00    0.00       4/4           void __gnu_cxx::new_allocator<maze::Priority_and_cell>::construct<maze::Priority_and_cell, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell&&) [477]
[485]    0.0    0.00    0.00       4         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [485]
-----------------------------------------------
                                   1             std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
                                   1             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                0.00    0.00       1/1222        _GLOBAL__sub_I__ZN4maze11AStarSolverC2ERNS_4MazeE [550]
                0.00    0.00       2/1222        maze::AStarSolver::solve_maze() <cycle 1> [506]
[486]    0.0    0.00    0.00       4+1       std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
                                   6             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                                   1             std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
-----------------------------------------------
                0.00    0.00       4/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const [483]
[487]    0.0    0.00    0.00       4         std::allocator<maze::Cell**>::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [487]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<maze::Cell**>::new_allocator() [478]
-----------------------------------------------
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long) [523]
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long) [520]
[488]    0.0    0.00    0.00       4         std::allocator<maze::Cell**>::~allocator() [488]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<maze::Cell**>::~new_allocator() [479]
-----------------------------------------------
                0.00    0.00       1/4           maze::SVGSave::~SVGSave() [583]
                0.00    0.00       3/4           main [11]
[489]    0.0    0.00    0.00       4         std::shared_ptr<maze::Maze>::~shared_ptr() [489]
                0.00    0.00       4/4           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [490]
-----------------------------------------------
                0.00    0.00       4/4           std::shared_ptr<maze::Maze>::~shared_ptr() [489]
[490]    0.0    0.00    0.00       4         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [490]
                0.00    0.00       4/5           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [467]
-----------------------------------------------
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl() [609]
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&) [608]
[491]    0.0    0.00    0.00       4         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator() [491]
-----------------------------------------------
                0.00    0.00       4/4           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::pop_back() [359]
[492]    0.0    0.00    0.00       4         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux() [492]
                0.00    0.00       4/6           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**) [455]
                0.00    0.00       4/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [401]
                0.00    0.00       4/394         void __gnu_cxx::new_allocator<maze::Cell*>::destroy<maze::Cell*>(maze::Cell**) [358]
-----------------------------------------------
                0.00    0.00       4/4           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [332]
[493]    0.0    0.00    0.00       4         void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
                0.00    0.00       4/4           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_reserve_map_at_back(unsigned long) [494]
                0.00    0.00       4/6           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node() [454]
                0.00    0.00       4/645458      maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&) [13]
                0.00    0.00       4/1602        _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [159]
                0.00    0.00       4/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [401]
-----------------------------------------------
                0.00    0.00       4/4           void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&) [493]
[494]    0.0    0.00    0.00       4         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_reserve_map_at_back(unsigned long) [494]
-----------------------------------------------
                0.00    0.00       4/4           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
[495]    0.0    0.00    0.00       4         maze::Priority_and_cell* std::__uninitialized_copy_a<std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, maze::Priority_and_cell>(std::move_iterator<maze::Priority_and_cell*>, std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [495]
-----------------------------------------------
                0.00    0.00       4/4           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [399]
[496]    0.0    0.00    0.00       4         std::move_iterator<maze::Priority_and_cell*> std::__make_move_if_noexcept_iterator<maze::Priority_and_cell*, std::move_iterator<maze::Priority_and_cell*> >(maze::Priority_and_cell*) [496]
                0.00    0.00       4/4           std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::max_size() const [484]
                0.00    0.00       4/4           __gnu_cxx::new_allocator<maze::Priority_and_cell>::allocate(unsigned long, void const*) [476]
-----------------------------------------------
                0.00    0.00       3/3           std::stol(std::string const&, unsigned long*, int) [505]
[497]    0.0    0.00    0.00       3         long __gnu_cxx::__stoa<long, long, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [497]
-----------------------------------------------
                0.00    0.00       1/3           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
                0.00    0.00       2/3           void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&) <cycle 3> [48]
[498]    0.0    0.00    0.00       3         std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator<std::pair<maze::Cell* const, unsigned int> >(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [498]
-----------------------------------------------
                0.00    0.00       1/3           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
                0.00    0.00       2/3           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
[499]    0.0    0.00    0.00       3         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [499]
-----------------------------------------------
                0.00    0.00       3/3           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [467]
[500]    0.0    0.00    0.00       3         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [500]
                0.00    0.00       4/4           __gnu_cxx::__exchange_and_add_dispatch(int*, int) [481]
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [627]
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [626]
-----------------------------------------------
                0.00    0.00       1/3           std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [648]
                0.00    0.00       2/3           _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE9constructIS1_IS1_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS2_PT_DpOS5_ [1046]
[501]    0.0    0.00    0.00       3         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_Hashtable_ebo_helper(std::__detail::_Select1st const&) [501]
-----------------------------------------------
                0.00    0.00       3/3           void std::swap<maze::Maze*>(maze::Maze*&, maze::Maze*&) [655]
[502]    0.0    0.00    0.00       3         std::remove_reference<maze::Maze*&>::type&& std::move<maze::Maze*&>(maze::Maze*&) [502]
-----------------------------------------------
                0.00    0.00       3/3           void std::swap<maze::Cell***>(maze::Cell***&, maze::Cell***&) [656]
[503]    0.0    0.00    0.00       3         std::remove_reference<maze::Cell***&>::type&& std::move<maze::Cell***&>(maze::Cell***&) [503]
-----------------------------------------------
                0.00    0.00       3/3           void std::swap<unsigned long>(unsigned long&, unsigned long&) [657]
[504]    0.0    0.00    0.00       3         std::remove_reference<unsigned long&>::type&& std::move<unsigned long&>(unsigned long&) [504]
-----------------------------------------------
                0.00    0.00       3/3           main [11]
[505]    0.0    0.00    0.00       3         std::stol(std::string const&, unsigned long*, int) [505]
                0.00    0.00       3/3           long __gnu_cxx::__stoa<long, long, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [497]
-----------------------------------------------
                                 399             maze::AStarSolver::solve_maze() <cycle 1> [506]
                                   1             maze::AStarSolver::heuristic_estimate(maze::Cell&, maze::Maze&) <cycle 1> [316]
                0.00    0.00       1/2           main [11]
[506]    0.0    0.00    0.00       2+399     maze::AStarSolver::solve_maze() <cycle 1> [506]
                0.00    0.00    2392/835098      std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) <cycle 3> [56]
                0.00    0.00    1193/1193        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::~unordered_set() [198]
                0.00    0.00    1191/1191        std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [208]
                0.00    0.00    1191/1191        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> > const&) [210]
                0.00    0.00    1191/1191        bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [203]
                0.00    0.00    1189/2390        bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [106]
                0.00    0.00     795/795         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::insert(maze::Cell* const&) [277]
                0.00    0.00     793/1990        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator*() const [122]
                0.00    0.00     793/899         maze::Pathway::get_other_cell(maze::Cell*) [227]
                0.00    0.00     793/1984        std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::find(maze::Cell* const&) [124]
                0.00    0.00     793/1984        std::__detail::_Node_const_iterator<maze::Cell*, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<maze::Cell*, true, false> const&) [125]
                0.00    0.00     793/1990        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator++() [121]
                0.00    0.00     400/401         maze::Maze::get_height() [314]
                0.00    0.00     400/401         maze::Maze::get_width() [315]
                0.00    0.00     400/400         maze::Maze::max_num_pathways() [319]
                0.00    0.00     399/2783        maze::Cell::get_x_position() [95]
                0.00    0.00     399/1990        maze::Cell::get_y_position() [120]
                0.00    0.00     398/398         maze::Maze::num_cells() [334]
                0.00    0.00     398/1222        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
                0.00    0.00     398/504         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::operator[](maze::Cell* const&) [300]
                0.00    0.00     397/397         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [355]
                0.00    0.00     396/396         maze::Cell::get_pathways() [356]
                0.00    0.00     396/400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() [324]
                0.00    0.00     396/400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() [323]
                0.00    0.00       2/816         std::allocator<maze::Cell*>::allocator() [252]
                0.00    0.00       2/2           std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [529]
                0.00    0.00       2/888         std::allocator<maze::Cell*>::~allocator() [229]
                0.00    0.00       2/1222        std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
                0.00    0.00       2/2           std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::~priority_queue() [532]
                0.00    0.00       2/2           std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > > const&) [527]
                0.00    0.00       2/2           std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::~unordered_map() [528]
                0.00    0.00       2/3099        maze::Maze::get_cell(unsigned int, unsigned int) [83]
                0.00    0.00       1/1           std::__detail::_Prime_rehash_policy::max_load_factor() const [593]
                0.00    0.00       1/1           std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::allocator() [596]
                0.00    0.00       1/1           std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [622]
                0.00    0.00       1/1           std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~allocator() [597]
                0.00    0.00       1/1           maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*) [569]
                0.00    0.00       1/1           std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::~unordered_map() [623]
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze11AStarSolverC2ERNS_4MazeE [550]
                                 399             maze::AStarSolver::heuristic_estimate(maze::Cell&, maze::Maze&) <cycle 1> [316]
                                 399             maze::AStarSolver::solve_maze() <cycle 1> [506]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [514]
[507]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator() [507]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long) [523]
[508]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<maze::Cell**>::deallocate(maze::Cell***, unsigned long) [508]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long) [520]
[509]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<maze::Cell**>::allocate(unsigned long, void const*) [509]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<maze::Cell**>::max_size() const [512]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::__atomic_add_dispatch(int*, int) [511]
[510]    0.0    0.00    0.00       2         __gnu_cxx::__atomic_add_single(int*, int) [510]
-----------------------------------------------
                0.00    0.00       2/2           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [533]
[511]    0.0    0.00    0.00       2         __gnu_cxx::__atomic_add_dispatch(int*, int) [511]
                0.00    0.00       2/6           __gthread_active_p() [444]
                0.00    0.00       2/2           __gnu_cxx::__atomic_add_single(int*, int) [510]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::new_allocator<maze::Cell**>::allocate(unsigned long, void const*) [509]
[512]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<maze::Cell**>::max_size() const [512]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::begin() [322]
[513]    0.0    0.00    0.00       2         __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator+(long const&) const [513]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&) [537]
[514]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [514]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator() [507]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
[515]    0.0    0.00    0.00       2         std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > const&) [515]
                0.00    0.00       2/835098      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
-----------------------------------------------
                0.00    0.00       2/2           std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [529]
[516]    0.0    0.00    0.00       2         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [516]
                0.00    0.00       2/2           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [516]
[517]    0.0    0.00    0.00       2         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
                0.00    0.00       2/2           std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [540]
                0.00    0.00       2/1193        std::__detail::_Insert<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true, true>::_Insert() [201]
                0.00    0.00       2/1193        std::__detail::_Equality<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::_Equality() [202]
                0.00    0.00       2/2           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&) [537]
                0.00    0.00       2/5           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [472]
                0.00    0.00       2/1199        std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [182]
-----------------------------------------------
                0.00    0.00       1/2           main [11]
                0.00    0.00       1/2           maze::SVGSave::SVGSave(std::shared_ptr<maze::Maze>, std::string) [582]
[518]    0.0    0.00    0.00       2         std::shared_ptr<maze::Maze>::shared_ptr(std::shared_ptr<maze::Maze> const&) [518]
                0.00    0.00       2/2           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2> const&) [526]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base() [525]
[519]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::~_Deque_impl() [519]
                0.00    0.00       2/888         std::allocator<maze::Cell*>::~allocator() [229]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
[520]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long) [520]
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const [483]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<maze::Cell**>::allocate(unsigned long, void const*) [509]
                0.00    0.00       2/4           std::allocator<maze::Cell**>::~allocator() [488]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
[521]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_nodes(maze::Cell***, maze::Cell***) [521]
                0.00    0.00       2/6           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node() [454]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base() [525]
[522]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_nodes(maze::Cell***, maze::Cell***) [522]
                0.00    0.00       2/6           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**) [455]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base() [525]
[523]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long) [523]
                0.00    0.00       2/4           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const [483]
                0.00    0.00       2/4           std::allocator<maze::Cell**>::~allocator() [488]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<maze::Cell**>::deallocate(maze::Cell***, unsigned long) [508]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base() [611]
                0.00    0.00       1/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
[524]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
                0.00    0.00       4/37          std::__deque_buf_size(unsigned long) [385]
                0.00    0.00       4/21          std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [401]
                0.00    0.00       2/1761        unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&) [142]
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long) [520]
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_nodes(maze::Cell***, maze::Cell***) [521]
-----------------------------------------------
                0.00    0.00       2/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
[525]    0.0    0.00    0.00       2         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base() [525]
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_nodes(maze::Cell***, maze::Cell***) [522]
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long) [523]
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::~_Deque_impl() [519]
-----------------------------------------------
                0.00    0.00       2/2           std::shared_ptr<maze::Maze>::shared_ptr(std::shared_ptr<maze::Maze> const&) [518]
[526]    0.0    0.00    0.00       2         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2> const&) [526]
                0.00    0.00       2/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [531]
-----------------------------------------------
                0.00    0.00       2/2           maze::AStarSolver::solve_maze() <cycle 1> [506]
[527]    0.0    0.00    0.00       2         std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > > const&) [527]
                0.00    0.00       2/5           std::__allow_copy_cons<true>::__allow_copy_cons() [468]
-----------------------------------------------
                0.00    0.00       2/2           maze::AStarSolver::solve_maze() <cycle 1> [506]
[528]    0.0    0.00    0.00       2         std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::~unordered_map() [528]
                0.00    0.00       2/6           void std::_Destroy<maze::Priority_and_cell*, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [463]
-----------------------------------------------
                0.00    0.00       2/2           maze::AStarSolver::solve_maze() <cycle 1> [506]
[529]    0.0    0.00    0.00       2         std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [529]
                0.00    0.00       2/5           std::__allow_copy_cons<true>::__allow_copy_cons() [468]
                0.00    0.00       2/2           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [516]
-----------------------------------------------
                0.00    0.00       1/2           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [618]
                0.00    0.00       1/2           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [617]
[530]    0.0    0.00    0.00       2         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [530]
-----------------------------------------------
                0.00    0.00       2/2           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2> const&) [526]
[531]    0.0    0.00    0.00       2         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [531]
                0.00    0.00       2/2           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [533]
-----------------------------------------------
                0.00    0.00       2/2           maze::AStarSolver::solve_maze() <cycle 1> [506]
[532]    0.0    0.00    0.00       2         std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::~priority_queue() [532]
                0.00    0.00       2/6           void std::_Destroy<maze::Priority_and_cell*, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [463]
-----------------------------------------------
                0.00    0.00       2/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [531]
[533]    0.0    0.00    0.00       2         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [533]
                0.00    0.00       2/2           __gnu_cxx::__atomic_add_dispatch(int*, int) [511]
-----------------------------------------------
                0.00    0.00       2/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
[534]    0.0    0.00    0.00       2         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_data(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::allocator<maze::Cell*> const&) [534]
-----------------------------------------------
                0.00    0.00       2/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
[535]    0.0    0.00    0.00       2         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::begin() [535]
                0.00    0.00       2/799         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> const&) [262]
-----------------------------------------------
                0.00    0.00       1/2           maze::DepthFirstSearchGenerator::make_maze() [575]
                0.00    0.00       1/2           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::~stack() [642]
[536]    0.0    0.00    0.00       2         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
                0.00    0.00       2/3           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [499]
                0.00    0.00       2/795         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::end() [279]
                0.00    0.00       2/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::begin() [535]
                0.00    0.00       2/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_data(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::allocator<maze::Cell*> const&) [534]
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base() [525]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
[537]    0.0    0.00    0.00       2         std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&) [537]
                0.00    0.00       2/2           std::allocator<maze::Cell*> const& std::forward<std::allocator<maze::Cell*> const&>(std::remove_reference<std::allocator<maze::Cell*> const&>::type&) [546]
                0.00    0.00       2/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
                0.00    0.00       2/2           std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [514]
-----------------------------------------------
                                   2             void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>) <cycle 3> [50]
[538]    0.0    0.00    0.00       2         std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [538]
                                   3             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [540]
[539]    0.0    0.00    0.00       2         std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [539]
                0.00    0.00       2/2           std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_Hashtable_ebo_helper(std::__detail::_Identity const&) [541]
                0.00    0.00       2/5           std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_Hashtable_ebo_helper(std::hash<maze::Cell*> const&) [474]
                0.00    0.00       2/5           std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_Hashtable_ebo_helper(std::__detail::_Mod_range_hashing const&) [475]
-----------------------------------------------
                0.00    0.00       2/2           std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [517]
[540]    0.0    0.00    0.00       2         std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [540]
                0.00    0.00       2/2           std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [539]
                0.00    0.00       2/5           std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_Hashtable_ebo_helper(std::equal_to<maze::Cell*> const&) [473]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [539]
[541]    0.0    0.00    0.00       2         std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_Hashtable_ebo_helper(std::__detail::_Identity const&) [541]
-----------------------------------------------
                0.00    0.00       1/2           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell*&&) [640]
                0.00    0.00       1/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell*&&) [637]
[542]    0.0    0.00    0.00       2         std::remove_reference<maze::Cell*&>::type&& std::move<maze::Cell*&>(maze::Cell*&) [542]
-----------------------------------------------
                0.00    0.00       1/2           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::stack(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [641]
                0.00    0.00       1/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [638]
[543]    0.0    0.00    0.00       2         std::remove_reference<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&) [543]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
[544]    0.0    0.00    0.00       2         void std::swap<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> >(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&) [544]
                0.00    0.00       6/6           std::remove_reference<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>::type&& std::move<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&) [462]
                0.00    0.00       2/799         std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> const&) [262]
-----------------------------------------------
                0.00    0.00       1/2           void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::emplace_back<maze::Cell*>(maze::Cell*&&) [636]
                0.00    0.00       1/2           _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IS3_EEEvPT_DpOT0_ [586]
[545]    0.0    0.00    0.00       2         maze::Cell*&& std::forward<maze::Cell*>(std::remove_reference<maze::Cell*>::type&) [545]
-----------------------------------------------
                0.00    0.00       2/2           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&) [537]
[546]    0.0    0.00    0.00       2         std::allocator<maze::Cell*> const& std::forward<std::allocator<maze::Cell*> const&>(std::remove_reference<std::allocator<maze::Cell*> const&>::type&) [546]
-----------------------------------------------
                0.00    0.00       2/2           main [11]
[547]    0.0    0.00    0.00       2         bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*) [547]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[548]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze10BinaryLoad9make_mazeEv [548]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [561]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[549]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze10BinarySaveC2ESt10shared_ptrINS_4MazeEESs [549]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [560]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[550]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze11AStarSolverC2ERNS_4MazeE [550]
                0.00    0.00       1/1222        std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const <cycle 2> [486]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[551]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze22DepthFirstSearchSolverC2ERNS_4MazeE [551]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [563]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[552]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze24BreadthFirstSearchSolverC2ERNS_4MazeE [552]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [564]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[553]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze25DepthFirstSearchGenerator9make_mazeEv [553]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [562]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[554]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze4MazeC2Ejj [554]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [557]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[555]    0.0    0.00    0.00       1         _GLOBAL__sub_I__ZN4maze7SVGSave12persist_mazeEv [555]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [559]
-----------------------------------------------
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[556]    0.0    0.00    0.00       1         _GLOBAL__sub_I_main [556]
                0.00    0.00       1/1           __static_initialization_and_destruction_0(int, int) [558]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze4MazeC2Ejj [554]
[557]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [557]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I_main [556]
[558]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [558]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze7SVGSave12persist_mazeEv [555]
[559]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [559]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze10BinarySaveC2ESt10shared_ptrINS_4MazeEESs [549]
[560]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [560]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze10BinaryLoad9make_mazeEv [548]
[561]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [561]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze25DepthFirstSearchGenerator9make_mazeEv [553]
[562]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [562]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze22DepthFirstSearchSolverC2ERNS_4MazeE [551]
[563]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [563]
-----------------------------------------------
                0.00    0.00       1/1           _GLOBAL__sub_I__ZN4maze24BreadthFirstSearchSolverC2ERNS_4MazeE [552]
[564]    0.0    0.00    0.00       1         __static_initialization_and_destruction_0(int, int) [564]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[565]    0.0    0.00    0.00       1         maze::AStarSolver::AStarSolver(maze::Maze&) [565]
                0.00    0.00       1/1           maze::SolvingStrategy::SolvingStrategy() [570]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[566]    0.0    0.00    0.00       1         maze::AStarSolver::~AStarSolver() [566]
                0.00    0.00       1/1           maze::SolvingStrategy::~SolvingStrategy() [571]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::DepthFirstSearchGenerator(unsigned int, unsigned int, unsigned int) [576]
[567]    0.0    0.00    0.00       1         maze::MazeFactory::MazeFactory() [567]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::~DepthFirstSearchGenerator() [577]
[568]    0.0    0.00    0.00       1         maze::MazeFactory::~MazeFactory() [568]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[569]    0.0    0.00    0.00       1         maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*) [569]
                0.00    0.00     106/504         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::operator[](maze::Cell* const&) [300]
                0.00    0.00     106/106         maze::Pathway::set_solved_pathway() [370]
                0.00    0.00     106/899         maze::Pathway::get_other_cell(maze::Cell*) [227]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::AStarSolver(maze::Maze&) [565]
[570]    0.0    0.00    0.00       1         maze::SolvingStrategy::SolvingStrategy() [570]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::~AStarSolver() [566]
[571]    0.0    0.00    0.00       1         maze::SolvingStrategy::~SolvingStrategy() [571]
-----------------------------------------------
                                   1             maze::KruskalGenerator::make_maze() [572]
                0.00    0.00       1/1           std::string::shrink_to_fit() [911]
[572]    0.0    0.00    0.00       1+1       maze::KruskalGenerator::make_maze() [572]
                                   1             maze::KruskalGenerator::make_maze() [572]
-----------------------------------------------
                0.00    0.00       1/1           maze::SVGSave::SVGSave(std::shared_ptr<maze::Maze>, std::string) [582]
[573]    0.0    0.00    0.00       1         maze::PersistenceStrategy::PersistenceStrategy() [573]
-----------------------------------------------
                0.00    0.00       1/1           maze::SVGSave::~SVGSave() [583]
[574]    0.0    0.00    0.00       1         maze::PersistenceStrategy::~PersistenceStrategy() [574]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[575]    0.0    0.00    0.00       1         maze::DepthFirstSearchGenerator::make_maze() [575]
                0.00    0.00    3496/3499        std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator->() const [74]
                0.00    0.00    3097/3099        maze::Maze::get_cell(unsigned int, unsigned int) [83]
                0.00    0.00    3017/3017        maze::Cell::has_pathway() [89]
                0.00    0.00    1586/2783        maze::Cell::get_x_position() [95]
                0.00    0.00     803/1203        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [181]
                0.00    0.00     793/793         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::top() [289]
                0.00    0.00     793/1990        maze::Cell::get_y_position() [120]
                0.00    0.00     793/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector() [257]
                0.00    0.00     793/793         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const [286]
                0.00    0.00     793/864         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
                0.00    0.00     399/399         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [331]
                0.00    0.00     399/5034        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const [62]
                0.00    0.00     399/3819        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::operator[](unsigned long) [69]
                0.00    0.00     399/399         maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [325]
                0.00    0.00     399/399         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell* const&) [333]
                0.00    0.00     394/394         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::pop() [360]
                0.00    0.00       1/1           maze::Maze::Maze(unsigned int, unsigned int) [579]
                0.00    0.00       1/1           std::shared_ptr<maze::Maze>::shared_ptr<maze::Maze>(maze::Maze*) [606]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine<unsigned int, void>(unsigned int&) [635]
                0.00    0.00       1/1           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque() [639]
                0.00    0.00       1/1           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::stack(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [641]
                0.00    0.00       1/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
                0.00    0.00       1/1           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell*&&) [640]
                0.00    0.00       1/1           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::~stack() [642]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[576]    0.0    0.00    0.00       1         maze::DepthFirstSearchGenerator::DepthFirstSearchGenerator(unsigned int, unsigned int, unsigned int) [576]
                0.00    0.00       1/1           maze::MazeFactory::MazeFactory() [567]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[577]    0.0    0.00    0.00       1         maze::DepthFirstSearchGenerator::~DepthFirstSearchGenerator() [577]
                0.00    0.00       1/1           maze::MazeFactory::~MazeFactory() [568]
-----------------------------------------------
                0.00    0.00       1/1           maze::SVGSave::persist_maze() [581]
[578]    0.0    0.00    0.00       1         maze::Maze::get_pathways() [578]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[579]    0.0    0.00    0.00       1         maze::Maze::Maze(unsigned int, unsigned int) [579]
                0.00    0.00     400/400         maze::Cell::Cell(unsigned int, unsigned int) [317]
                0.00    0.00     400/1203        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&) [181]
                0.00    0.00      20/813         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector() [257]
                0.00    0.00      20/20          std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::push_back(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&) [416]
                0.00    0.00      20/864         std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector() [232]
                0.00    0.00       1/1           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::vector() [643]
                0.00    0.00       1/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector() [312]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [627]
[580]    0.0    0.00    0.00       1         maze::Maze::~Maze() [580]
                0.00    0.00     400/3819        std::vector<maze::Cell*, std::allocator<maze::Cell*> >::operator[](unsigned long) [69]
                0.00    0.00     400/400         maze::Cell::~Cell() [318]
                0.00    0.00     400/2390        bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [106]
                0.00    0.00     399/1990        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator*() const [122]
                0.00    0.00     399/399         maze::Pathway::~Pathway() [327]
                0.00    0.00     399/1990        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator++() [121]
                0.00    0.00      20/3040        std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::operator[](unsigned long) [84]
                0.00    0.00       1/400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() [324]
                0.00    0.00       1/400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() [323]
                0.00    0.00       1/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
                0.00    0.00       1/1           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector() [644]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[581]    0.0    0.00    0.00       1         maze::SVGSave::persist_maze() [581]
                0.00    0.00     801/2390        bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [106]
                0.00    0.00     798/1990        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator*() const [122]
                0.00    0.00     798/1990        __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator++() [121]
                0.00    0.00     399/798         maze::Pathway::is_in_solved_pathway() [265]
                0.00    0.00     399/1596        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&) [163]
                0.00    0.00     399/399         maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [328]
                0.00    0.00       3/3499        std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator->() const [74]
                0.00    0.00       3/400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() [324]
                0.00    0.00       3/400         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() [323]
                0.00    0.00       2/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector() [312]
                0.00    0.00       2/403         std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector() [313]
                0.00    0.00       1/1           std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [659]
                0.00    0.00       1/401         maze::Maze::get_width() [315]
                0.00    0.00       1/401         maze::Maze::get_height() [314]
                0.00    0.00       1/1           maze::Maze::get_pathways() [578]
                0.00    0.00       1/3018        std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [88]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[582]    0.0    0.00    0.00       1         maze::SVGSave::SVGSave(std::shared_ptr<maze::Maze>, std::string) [582]
                0.00    0.00       1/1           maze::PersistenceStrategy::PersistenceStrategy() [573]
                0.00    0.00       1/2           std::shared_ptr<maze::Maze>::shared_ptr(std::shared_ptr<maze::Maze> const&) [518]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[583]    0.0    0.00    0.00       1         maze::SVGSave::~SVGSave() [583]
                0.00    0.00       1/1           maze::PersistenceStrategy::~PersistenceStrategy() [574]
                0.00    0.00       1/4           std::shared_ptr<maze::Maze>::~shared_ptr() [489]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocator<std::pair<maze::Cell* const, maze::Pathway*> >(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [594]
[584]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::new_allocator() [584]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~allocator() [595]
[585]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~new_allocator() [585]
-----------------------------------------------
                0.00    0.00       1/1           void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::emplace_back<maze::Cell*>(maze::Cell*&&) [636]
[586]    0.0    0.00    0.00       1         _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IS3_EEEvPT_DpOT0_ [586]
                0.00    0.00       1/2           maze::Cell*&& std::forward<maze::Cell*>(std::remove_reference<maze::Cell*>::type&) [545]
                0.00    0.00       1/243062      operator new(unsigned long, void*) [24]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::allocator() [596]
[587]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::new_allocator() [587]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~allocator() [597]
[588]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~new_allocator() [588]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocator() [598]
[589]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::new_allocator() [589]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~allocator() [599]
[590]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~new_allocator() [590]
-----------------------------------------------
                                   1             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const <cycle 3> [55]
[591]    0.0    0.00    0.00       1         bool __gnu_cxx::operator==<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) <cycle 3> [591]
                                   2             std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) <cycle 3> [23]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[592]    0.0    0.00    0.00       1         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::get() const [592]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[593]    0.0    0.00    0.00       1         std::__detail::_Prime_rehash_policy::max_load_factor() const [593]
                0.00    0.00       1/1222        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [646]
[594]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocator<std::pair<maze::Cell* const, maze::Pathway*> >(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [594]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::new_allocator() [584]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::~_Before_begin() [647]
[595]    0.0    0.00    0.00       1         std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~allocator() [595]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~new_allocator() [585]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[596]    0.0    0.00    0.00       1         std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::allocator() [596]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::new_allocator() [587]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[597]    0.0    0.00    0.00       1         std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~allocator() [597]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~new_allocator() [588]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::_Vector_impl() [613]
[598]    0.0    0.00    0.00       1         std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocator() [598]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::new_allocator() [589]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::~_Vector_impl() [614]
[599]    0.0    0.00    0.00       1         std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~allocator() [599]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~new_allocator() [590]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) <cycle 2> [178]
[600]    0.0    0.00    0.00       1         std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::erase(maze::Cell* const&) [600]
                0.00    0.00       1/835098      void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>) <cycle 3> [90]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [602]
[601]    0.0    0.00    0.00       1         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [601]
                0.00    0.00     398/1343        std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const [171]
                0.00    0.00     398/398         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [343]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [605]
[602]    0.0    0.00    0.00       1         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [602]
                0.00    0.00       1/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [448]
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [601]
                0.00    0.00       1/1584        std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() [168]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [604]
[603]    0.0    0.00    0.00       1         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
                0.00    0.00       1/1           std::__detail::_Insert<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert() [650]
                0.00    0.00       1/1           std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [649]
                0.00    0.00       1/1           std::__detail::_Equality<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality() [651]
                0.00    0.00       1/1           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [646]
                0.00    0.00       1/5           std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float) [472]
                0.00    0.00       1/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [452]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [622]
[604]    0.0    0.00    0.00       1         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [604]
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
-----------------------------------------------
                0.00    0.00       1/1           std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::~unordered_map() [623]
[605]    0.0    0.00    0.00       1         std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [605]
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [602]
                0.00    0.00       1/6           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [453]
                0.00    0.00       1/1           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::~_Before_begin() [647]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[606]    0.0    0.00    0.00       1         std::shared_ptr<maze::Maze>::shared_ptr<maze::Maze>(maze::Maze*) [606]
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<maze::Maze>(maze::Maze*) [619]
-----------------------------------------------
                0.00    0.00       1/1           main [11]
[607]    0.0    0.00    0.00       1         std::shared_ptr<maze::Maze>::operator=(std::shared_ptr<maze::Maze>&&) [607]
                0.00    0.00       1/1           std::remove_reference<std::shared_ptr<maze::Maze>&>::type&& std::move<std::shared_ptr<maze::Maze>&>(std::shared_ptr<maze::Maze>&) [653]
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [621]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
[608]    0.0    0.00    0.00       1         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&) [608]
                0.00    0.00       2/4           std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator() [491]
                0.00    0.00       1/64          std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&) [377]
                0.00    0.00       1/72          std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [375]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base() [611]
[609]    0.0    0.00    0.00       1         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl() [609]
                0.00    0.00       2/4           std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator() [491]
                0.00    0.00       1/816         std::allocator<maze::Cell*>::allocator() [252]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [638]
[610]    0.0    0.00    0.00       1         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
                0.00    0.00       2/2           void std::swap<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> >(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&) [544]
                0.00    0.00       1/64          std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&) [377]
                0.00    0.00       1/3           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [499]
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&) [608]
                0.00    0.00       1/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
                0.00    0.00       1/1           void std::swap<maze::Cell***>(maze::Cell***&, maze::Cell***&) [656]
                0.00    0.00       1/1           void std::swap<unsigned long>(unsigned long&, unsigned long&) [657]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque() [639]
[611]    0.0    0.00    0.00       1         std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base() [611]
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl() [609]
                0.00    0.00       1/2           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [524]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [631]
[612]    0.0    0.00    0.00       1         std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base() [612]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_base() [615]
[613]    0.0    0.00    0.00       1         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::_Vector_impl() [613]
                0.00    0.00       1/1           std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocator() [598]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~_Vector_base() [616]
[614]    0.0    0.00    0.00       1         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::~_Vector_impl() [614]
                0.00    0.00       1/1           std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~allocator() [599]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::vector() [643]
[615]    0.0    0.00    0.00       1         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_base() [615]
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::_Vector_impl() [613]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector() [644]
[616]    0.0    0.00    0.00       1         std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~_Vector_base() [616]
                0.00    0.00       1/7           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [441]
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::~_Vector_impl() [614]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [621]
[617]    0.0    0.00    0.00       1         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [617]
                0.00    0.00       1/1           void std::swap<maze::Maze*>(maze::Maze*&, maze::Maze*&) [655]
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [530]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [621]
[618]    0.0    0.00    0.00       1         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [618]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [624]
                0.00    0.00       1/2           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [530]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<maze::Maze>::shared_ptr<maze::Maze>(maze::Maze*) [606]
[619]    0.0    0.00    0.00       1         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<maze::Maze>(maze::Maze*) [619]
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<maze::Maze*>(maze::Maze*) [625]
                0.00    0.00       1/1           void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...) [652]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [621]
[620]    0.0    0.00    0.00       1         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [620]
                0.00    0.00       1/5           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [467]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<maze::Maze>::operator=(std::shared_ptr<maze::Maze>&&) [607]
[621]    0.0    0.00    0.00       1         std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [621]
                0.00    0.00       1/1           std::remove_reference<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [654]
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [618]
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [617]
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [620]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[622]    0.0    0.00    0.00       1         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [622]
                0.00    0.00       1/5           std::__allow_copy_cons<true>::__allow_copy_cons() [468]
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [604]
-----------------------------------------------
                0.00    0.00       1/1           maze::AStarSolver::solve_maze() <cycle 1> [506]
[623]    0.0    0.00    0.00       1         std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::~unordered_map() [623]
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [605]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [618]
[624]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [624]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<maze::Maze>(maze::Maze*) [619]
[625]    0.0    0.00    0.00       1         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<maze::Maze*>(maze::Maze*) [625]
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(maze::Maze*) [628]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [500]
[626]    0.0    0.00    0.00       1         std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [626]
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [629]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [500]
[627]    0.0    0.00    0.00       1         std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [627]
                0.00    0.00       1/1           maze::Maze::~Maze() [580]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<maze::Maze*>(maze::Maze*) [625]
[628]    0.0    0.00    0.00       1         std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(maze::Maze*) [628]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [631]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [626]
[629]    0.0    0.00    0.00       1         std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [629]
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [630]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [629]
[630]    0.0    0.00    0.00       1         std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [630]
                0.00    0.00       1/1           std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [632]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(maze::Maze*) [628]
[631]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [631]
                0.00    0.00       1/1           std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base() [612]
-----------------------------------------------
                0.00    0.00       1/1           std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [630]
[632]    0.0    0.00    0.00       1         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [632]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()() [331]
[633]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand() [633]
-----------------------------------------------
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine<unsigned int, void>(unsigned int&) [635]
[634]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [634]
                0.00    0.00     624/624         unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long) [292]
                0.00    0.00     623/623         unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long) [294]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[635]    0.0    0.00    0.00       1         std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine<unsigned int, void>(unsigned int&) [635]
                0.00    0.00       1/1           std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long) [634]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell*&&) [637]
[636]    0.0    0.00    0.00       1         void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::emplace_back<maze::Cell*>(maze::Cell*&&) [636]
                0.00    0.00       1/2           maze::Cell*&& std::forward<maze::Cell*>(std::remove_reference<maze::Cell*>::type&) [545]
                0.00    0.00       1/1           _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IS3_EEEvPT_DpOT0_ [586]
-----------------------------------------------
                0.00    0.00       1/1           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell*&&) [640]
[637]    0.0    0.00    0.00       1         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell*&&) [637]
                0.00    0.00       1/2           std::remove_reference<maze::Cell*&>::type&& std::move<maze::Cell*&>(maze::Cell*&) [542]
                0.00    0.00       1/1           void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::emplace_back<maze::Cell*>(maze::Cell*&&) [636]
-----------------------------------------------
                0.00    0.00       1/1           std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::stack(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [641]
[638]    0.0    0.00    0.00       1         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [638]
                0.00    0.00       1/2           std::remove_reference<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&) [543]
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[639]    0.0    0.00    0.00       1         std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque() [639]
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base() [611]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[640]    0.0    0.00    0.00       1         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell*&&) [640]
                0.00    0.00       1/2           std::remove_reference<maze::Cell*&>::type&& std::move<maze::Cell*&>(maze::Cell*&) [542]
                0.00    0.00       1/1           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell*&&) [637]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[641]    0.0    0.00    0.00       1         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::stack(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [641]
                0.00    0.00       1/2           std::remove_reference<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&) [543]
                0.00    0.00       1/1           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&) [638]
-----------------------------------------------
                0.00    0.00       1/1           maze::DepthFirstSearchGenerator::make_maze() [575]
[642]    0.0    0.00    0.00       1         std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::~stack() [642]
                0.00    0.00       1/2           std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque() [536]
-----------------------------------------------
                0.00    0.00       1/1           maze::Maze::Maze(unsigned int, unsigned int) [579]
[643]    0.0    0.00    0.00       1         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::vector() [643]
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_base() [615]
-----------------------------------------------
                0.00    0.00       1/1           maze::Maze::~Maze() [580]
[644]    0.0    0.00    0.00       1         std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector() [644]
                0.00    0.00       1/13          std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() [429]
                0.00    0.00       1/7           void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&) [443]
                0.00    0.00       1/1           std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~_Vector_base() [616]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Insert<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert() [650]
[645]    0.0    0.00    0.00       1         std::__detail::_Insert_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base() [645]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
[646]    0.0    0.00    0.00       1         std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [646]
                0.00    0.00       1/1           std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const& std::forward<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::remove_reference<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>::type&) [658]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocator<std::pair<maze::Cell* const, maze::Pathway*> >(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [594]
                0.00    0.00       1/239403      std::__detail::_Hash_node_base::_Hash_node_base() [26]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [605]
[647]    0.0    0.00    0.00       1         std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::~_Before_begin() [647]
                0.00    0.00       1/1           std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~allocator() [595]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [649]
[648]    0.0    0.00    0.00       1         std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [648]
                0.00    0.00       1/3           std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_Hashtable_ebo_helper(std::__detail::_Select1st const&) [501]
                0.00    0.00       1/5           std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_Hashtable_ebo_helper(std::hash<maze::Cell*> const&) [474]
                0.00    0.00       1/5           std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_Hashtable_ebo_helper(std::__detail::_Mod_range_hashing const&) [475]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
[649]    0.0    0.00    0.00       1         std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&) [649]
                0.00    0.00       1/1           std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&) [648]
                0.00    0.00       1/5           std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_Hashtable_ebo_helper(std::equal_to<maze::Cell*> const&) [473]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
[650]    0.0    0.00    0.00       1         std::__detail::_Insert<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert() [650]
                0.00    0.00       1/1           std::__detail::_Insert_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base() [645]
-----------------------------------------------
                0.00    0.00       1/1           std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [603]
[651]    0.0    0.00    0.00       1         std::__detail::_Equality<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality() [651]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<maze::Maze>(maze::Maze*) [619]
[652]    0.0    0.00    0.00       1         void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...) [652]
-----------------------------------------------
                0.00    0.00       1/1           std::shared_ptr<maze::Maze>::operator=(std::shared_ptr<maze::Maze>&&) [607]
[653]    0.0    0.00    0.00       1         std::remove_reference<std::shared_ptr<maze::Maze>&>::type&& std::move<std::shared_ptr<maze::Maze>&>(std::shared_ptr<maze::Maze>&) [653]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [621]
[654]    0.0    0.00    0.00       1         std::remove_reference<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [654]
-----------------------------------------------
                0.00    0.00       1/1           std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [617]
[655]    0.0    0.00    0.00       1         void std::swap<maze::Maze*>(maze::Maze*&, maze::Maze*&) [655]
                0.00    0.00       3/3           std::remove_reference<maze::Maze*&>::type&& std::move<maze::Maze*&>(maze::Maze*&) [502]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
[656]    0.0    0.00    0.00       1         void std::swap<maze::Cell***>(maze::Cell***&, maze::Cell***&) [656]
                0.00    0.00       3/3           std::remove_reference<maze::Cell***&>::type&& std::move<maze::Cell***&>(maze::Cell***&) [503]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [610]
[657]    0.0    0.00    0.00       1         void std::swap<unsigned long>(unsigned long&, unsigned long&) [657]
                0.00    0.00       3/3           std::remove_reference<unsigned long&>::type&& std::move<unsigned long&>(unsigned long&) [504]
-----------------------------------------------
                0.00    0.00       1/1           std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [646]
[658]    0.0    0.00    0.00       1         std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const& std::forward<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::remove_reference<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>::type&) [658]
-----------------------------------------------
                0.00    0.00       1/1           maze::SVGSave::persist_maze() [581]
[659]    0.0    0.00    0.00       1         std::operator|(std::_Ios_Openmode, std::_Ios_Openmode) [659]
-----------------------------------------------
                                  20             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
[848]    0.0    0.00    0.00       0+20      std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
                0.00    0.00      30/30          std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_allocate(unsigned long) [397]
                0.00    0.00      20/20          void __gnu_cxx::new_allocator<maze::Priority_and_cell>::destroy<maze::Priority_and_cell>(maze::Priority_and_cell*) [403]
                0.00    0.00      15/15          std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::size() const [426]
                0.00    0.00      15/15          maze::Priority_and_cell* std::__uninitialized_move_if_noexcept_a<maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell> >(maze::Priority_and_cell*, maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&) [428]
                                  20             std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_check_len(unsigned long, char const*) const [848]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [548] _GLOBAL__sub_I__ZN4maze10BinaryLoad9make_mazeEv (binaryload.cpp) [366] std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [219] maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**)
 [549] _GLOBAL__sub_I__ZN4maze10BinarySaveC2ESt10shared_ptrINS_4MazeEESs (binarysave.cpp) [485] std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [243] maze::Pathway** std::__uninitialized_copy<true>::__uninit_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**)
 [550] _GLOBAL__sub_I__ZN4maze11AStarSolverC2ERNS_4MazeE (astarsolver.cpp) [268] std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) const [633] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::_M_gen_rand()
 [551] _GLOBAL__sub_I__ZN4maze22DepthFirstSearchSolverC2ERNS_4MazeE (depthfirstsearchsolver.cpp) [18] std::__detail::_Mod_range_hashing::operator()(unsigned long, unsigned long) const [634] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::seed(unsigned long)
 [552] _GLOBAL__sub_I__ZN4maze24BreadthFirstSearchSolverC2ERNS_4MazeE (breadthfirstsearchsolver.cpp) [593] std::__detail::_Prime_rehash_policy::max_load_factor() const [635] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::mersenne_twister_engine<unsigned int, void>(unsigned int&)
 [553] _GLOBAL__sub_I__ZN4maze25DepthFirstSearchGenerator9make_mazeEv (depthfirstsearchgenerator.cpp) [486] std::__detail::_Prime_rehash_policy::_M_bkt_for_elements(unsigned long) const [331] std::mersenne_twister_engine<unsigned long, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 4294967295ul, 7ul, 2636928640ul, 15ul, 4022730752ul, 18ul, 1812433253ul>::operator()()
 [554] _GLOBAL__sub_I__ZN4maze4MazeC2Ejj (maze.cpp) [119] std::__detail::_Prime_rehash_policy::_M_state() const [346] std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&>(std::piecewise_construct_t, std::tuple<maze::Cell* const&>, std::tuple<>)
 [555] _GLOBAL__sub_I__ZN4maze7SVGSave12persist_mazeEv (svgsave.cpp) [34] maze::Cell* const& std::__detail::_Identity::operator()<maze::Cell* const&>(maze::Cell* const&) const [347] std::pair<maze::Cell* const, maze::Pathway*>::pair<maze::Cell* const&, 0ul>(std::tuple<maze::Cell* const&>&, std::tuple<>&, std::_Index_tuple<0ul>, std::_Index_tuple<>)
 [556] _GLOBAL__sub_I_main (main.cpp) [111] maze::Cell*& std::__detail::_Identity::operator()<maze::Cell*&>(maze::Cell*&) const [278] std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool, void>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&)
 [557] __static_initialization_and_destruction_0(int, int) (maze.cpp) [66] std::equal_to<maze::Cell*>::operator()(maze::Cell* const&, maze::Cell* const&) const [636] void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::emplace_back<maze::Cell*>(maze::Cell*&&)
 [558] __static_initialization_and_destruction_0(int, int) (main.cpp) [354] std::allocator<maze::Priority_and_cell>::allocator(std::allocator<maze::Priority_and_cell> const&) [534] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_data(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>, std::allocator<maze::Cell*> const&)
 [559] __static_initialization_and_destruction_0(int, int) (svgsave.cpp) [206] std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [492] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_pop_back_aux()
 [560] __static_initialization_and_destruction_0(int, int) (binarysave.cpp) [514] std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [493] void std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_push_back_aux<maze::Cell* const&>(maze::Cell* const&)
 [561] __static_initialization_and_destruction_0(int, int) (binaryload.cpp) [194] std::allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~allocator() [494] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::_M_reserve_map_at_back(unsigned long)
 [562] __static_initialization_and_destruction_0(int, int) (depthfirstsearchgenerator.cpp) [594] std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocator<std::pair<maze::Cell* const, maze::Pathway*> >(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [279] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::end()
 [563] __static_initialization_and_destruction_0(int, int) (depthfirstsearchsolver.cpp) [595] std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~allocator() [288] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::back()
 [564] __static_initialization_and_destruction_0(int, int) (breadthfirstsearchsolver.cpp) [515] std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> > const&) [535] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::begin()
 [143] __static_initialization_and_destruction_0(int, int) (astarsolver.cpp) [498] std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::allocator<std::pair<maze::Cell* const, unsigned int> >(std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [359] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::pop_back()
 [444] __gthread_active_p() (gthr-default.h) [329] std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::~allocator() [637] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell*&&)
 [263] bool josh::is_in_container<std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*>(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >, maze::Cell*) [252] std::allocator<maze::Cell*>::allocator() [332] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&)
 [203] bool josh::is_in_container<std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*>(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >, maze::Cell*) [375] std::allocator<maze::Cell*>::allocator(std::allocator<maze::Cell*> const&) [638] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&)
 [506] maze::AStarSolver::solve_maze() [229] std::allocator<maze::Cell*>::~allocator() [639] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::deque()
 [316] maze::AStarSolver::heuristic_estimate(maze::Cell&, maze::Maze&) [306] std::allocator<maze::Pathway*>::allocator() [536] std::deque<maze::Cell*, std::allocator<maze::Cell*> >::~deque()
 [565] maze::AStarSolver::AStarSolver(maze::Maze&) [307] std::allocator<maze::Pathway*>::~allocator() [360] std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::pop()
 [566] maze::AStarSolver::~AStarSolver() [102] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<maze::Cell*, false> >(std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [289] std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::top()
 [567] maze::MazeFactory::MazeFactory() [432] std::allocator<std::__detail::_Hash_node_base*>::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > const&) [640] std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell*&&)
 [568] maze::MazeFactory::~MazeFactory() [77] std::allocator<std::__detail::_Hash_node_base*>::~allocator() [333] std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::push(maze::Cell* const&)
 [569] maze::SolvingStrategy::build_solved_pathway(std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >*, maze::Cell*, maze::Cell*) [487] std::allocator<maze::Cell**>::allocator<maze::Cell*>(std::allocator<maze::Cell*> const&) [641] std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::stack(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&&)
 [570] maze::SolvingStrategy::SolvingStrategy() [488] std::allocator<maze::Cell**>::~allocator() [642] std::stack<maze::Cell*, std::deque<maze::Cell*, std::allocator<maze::Cell*> > >::~stack()
 [571] maze::SolvingStrategy::~SolvingStrategy() [596] std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::allocator() [188] std::tuple<maze::Cell* const&>::tuple(std::tuple<maze::Cell* const&>&&)
 [572] maze::KruskalGenerator::make_maze() [597] std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~allocator() [189] std::tuple<maze::Cell* const&>::tuple(maze::Cell* const&)
 [573] maze::PersistenceStrategy::PersistenceStrategy() [598] std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocator() [25] void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::emplace_back<maze::Priority_and_cell>(maze::Priority_and_cell&&)
 [574] maze::PersistenceStrategy::~PersistenceStrategy() [599] std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~allocator() [48] void std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_emplace_back_aux<maze::Priority_and_cell>(maze::Priority_and_cell&&)
 [575] maze::DepthFirstSearchGenerator::make_maze() [450] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [321] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end()
 [576] maze::DepthFirstSearchGenerator::DepthFirstSearchGenerator(unsigned int, unsigned int, unsigned int) [57] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() [322] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::begin()
 [577] maze::DepthFirstSearchGenerator::~DepthFirstSearchGenerator() [42] std::__detail::_Hash_node<maze::Cell*, false>* std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_node<maze::Cell* const&>(maze::Cell* const&) [271] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::pop_back()
 [264] maze::Cell::add_pathway(maze::Pathway*) [14] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_node_allocator() [16] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::push_back(maze::Priority_and_cell&&)
  [89] maze::Cell::has_pathway() [43] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_node(std::__detail::_Hash_node<maze::Cell*, false>*) [261] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::~vector()
 [356] maze::Cell::get_pathways() [182] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_allocate_buckets(unsigned long) [220] void std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_emplace_back_aux<maze::Cell* const&>(maze::Cell* const&)
  [95] maze::Cell::get_x_position() [195] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<maze::Cell*, false>*) [181] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::push_back(maze::Cell* const&)
 [120] maze::Cell::get_y_position() [183] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [393] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&)
 [317] maze::Cell::Cell(unsigned int, unsigned int) [274] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [415] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&)
 [318] maze::Cell::~Cell()   [275] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) [257] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::vector()
 [314] maze::Maze::get_height() [399] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_remove_bucket_begin(unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [232] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::~vector()
 [325] maze::Maze::add_pathway(maze::Cell*, maze::Cell*) [107] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::end() [69] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::operator[](unsigned long)
 [578] maze::Maze::get_pathways() [123] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::find(maze::Cell* const&) [244] void std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_emplace_back_aux<maze::Pathway* const&>(maze::Pathway* const&)
 [319] maze::Maze::max_num_pathways() [196] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::clear() [323] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end()
  [83] maze::Maze::get_cell(unsigned int, unsigned int) [600] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::erase(maze::Cell* const&) [324] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin()
 [315] maze::Maze::get_width() [46] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(std::integral_constant<bool, true>, maze::Cell* const&) [163] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::push_back(maze::Pathway* const&)
 [334] maze::Maze::num_cells() [303] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_erase(unsigned long, std::__detail::_Hash_node_base*, std::__detail::_Hash_node<maze::Cell*, false>*) [312] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::vector()
 [579] maze::Maze::Maze(unsigned int, unsigned int) [276] std::pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool> std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_insert<maze::Cell* const&>(maze::Cell* const&, std::integral_constant<bool, true>) [313] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::~vector()
 [580] maze::Maze::~Maze()   [451] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_rehash(unsigned long, unsigned long const&) [270] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::operator[](unsigned long)
 [137] maze::Pathway::get_first_cell() [207] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> > const&) [458] void std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_emplace_back_aux<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&)
 [227] maze::Pathway::get_other_cell(maze::Cell*) [516] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [416] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::push_back(std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&)
 [172] maze::Pathway::get_second_cell() [517] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, std::allocator<maze::Cell*> const&) [643] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::vector()
 [370] maze::Pathway::set_solved_pathway() [197] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::~_Hashtable() [644] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~vector()
 [265] maze::Pathway::is_in_solved_pathway() [465] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [84] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::operator[](unsigned long)
 [326] maze::Pathway::Pathway(maze::Cell*, maze::Cell*) [168] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() [44] std::__detail::_Hash_node<maze::Cell*, false>::_Hash_node<maze::Cell* const&>(maze::Cell* const&)
 [327] maze::Pathway::~Pathway() [342] std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [348] std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
 [581] maze::SVGSave::persist_maze() [158] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_node_allocator() [380] std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&)
 [328] maze::SVGSave::output_pathway(maze::Pathway&, unsigned int, std::basic_fstream<char, std::char_traits<char> >&) [343] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_node(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [469] std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>::_Hash_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&)
 [582] maze::SVGSave::SVGSave(std::shared_ptr<maze::Maze>, std::string) [452] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [280] std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_conjure_hashtable()
 [583] maze::SVGSave::~SVGSave() [601] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_nodes(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [281] std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::insert(maze::Cell* const&)
 [403] void __gnu_cxx::new_allocator<maze::Priority_and_cell>::destroy<maze::Priority_and_cell>(maze::Priority_and_cell*) [453] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_deallocate_buckets(std::__detail::_Hash_node_base**, unsigned long) [199] std::__detail::_Insert_base<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_Insert_base()
 [476] __gnu_cxx::new_allocator<maze::Priority_and_cell>::allocate(unsigned long, void const*) [344] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [645] std::__detail::_Insert_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Insert_base()
 [477] void __gnu_cxx::new_allocator<maze::Priority_and_cell>::construct<maze::Priority_and_cell, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell&&) [345] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [211] std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long)
  [37] __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::deallocate(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) [602] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [283] std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::reserve(unsigned long)
  [38] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::destroy<std::__detail::_Hash_node<maze::Cell*, false> >(std::__detail::_Hash_node<maze::Cell*, false>*) [117] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::rehash(unsigned long) [212] std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin(std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > > const&)
  [39] __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::allocate(unsigned long, void const*) [466] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash(unsigned long, unsigned long const&) [537] std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::_Before_begin<std::allocator<maze::Cell*> const&>(std::allocator<maze::Cell*> const&)
  [40] _ZN9__gnu_cxx13new_allocatorINSt8__detail10_Hash_nodeIPN4maze4CellELb0EEEE9constructIS6_IRKS5_EEEvPT_DpOT0_ [603] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [200] std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<maze::Cell*, false> > >::~_Before_begin()
 [204] __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator(__gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> > const&) [604] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [646] std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::_Before_begin<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&)
 [507] __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::new_allocator() [605] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [647] std::__detail::_Before_begin<std::allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> > >::~_Before_begin()
 [193] __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::~new_allocator() [82] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_rehash_aux(unsigned long, std::integral_constant<bool, true>) [115] std::__detail::_Equal_helper<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Identity const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*)
 [335] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) [54] std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) [367] std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
 [336] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) [110] std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>* std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_node<std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [400] std::__detail::_Equal_helper<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, unsigned long, false>::_S_equals(std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, maze::Cell* const&, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
 [337] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::allocate(unsigned long, void const*) [425] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_allocate_buckets(unsigned long) [68] std::__detail::_Node_iterator<maze::Cell*, true, false>::_Node_iterator(std::__detail::_Hash_node<maze::Cell*, false>*)
 [338] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::construct<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>, std::tuple<> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, std::piecewise_construct_t const&, std::tuple<maze::Cell* const&>&&, std::tuple<>&&) [49] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [349] std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
 [584] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::new_allocator() [23] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_bucket_begin(unsigned long, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [538] std::__detail::_Node_iterator<std::pair<maze::Cell* const, unsigned int>, false, false>::_Node_iterator(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
 [585] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::~new_allocator() [126] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::find(maze::Cell* const&) [258] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
 [266] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::deallocate(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, unsigned long) [330] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::clear() [539] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&)
 [127] void __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >::destroy<std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> >(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*) [65] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(unsigned long, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&, std::__detail::_Select1st const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [470] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
 [214] __gnu_cxx::new_allocator<maze::Cell*>::deallocate(maze::Cell**, unsigned long) [178] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable(std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> > const&) [648] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_Hash_code_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&)
 [358] void __gnu_cxx::new_allocator<maze::Cell*>::destroy<maze::Cell*>(maze::Cell**) [355] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::~_Hashtable() [51] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract()
 [215] __gnu_cxx::new_allocator<maze::Cell*>::allocate(unsigned long, void const*) [103] std::_Head_base<0ul, maze::Cell* const&, false>::_M_head(std::_Head_base<0ul, maze::Cell* const&, false>&) [26] std::__detail::_Hash_node_base::_Hash_node_base()
 [159] _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IRKS3_EEEvPT_DpOT0_ [104] std::_Head_base<0ul, maze::Cell* const&, false>::_Head_base(maze::Cell* const&) [540] std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_Hashtable_base(std::__detail::_Identity const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&)
 [586] _ZN9__gnu_cxx13new_allocatorIPN4maze4CellEE9constructIS3_IS3_EEEvPT_DpOT0_ [381] std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, false>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [649] std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&)
 [374] __gnu_cxx::new_allocator<maze::Cell*>::new_allocator(__gnu_cxx::new_allocator<maze::Cell*> const&) [382] std::_Iter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, true>::_S_base(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >) [471] std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_Hashtable_base(std::__detail::_Select1st const&, std::hash<maze::Cell*> const&, std::__detail::_Mod_range_hashing const&, std::__detail::_Default_ranged_hash const&, std::equal_to<maze::Cell*> const&)
 [251] __gnu_cxx::new_allocator<maze::Cell*>::new_allocator() [93] std::_Iter_base<maze::Cell**, false>::_S_base(maze::Cell**) [58] std::__detail::_Node_iterator_base<maze::Cell*, false>::_Node_iterator_base(std::__detail::_Hash_node<maze::Cell*, false>*)
 [228] __gnu_cxx::new_allocator<maze::Cell*>::~new_allocator() [99] std::_Iter_base<maze::Pathway**, false>::_S_base(maze::Pathway**) [350] std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, maze::Pathway*>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*)
 [238] __gnu_cxx::new_allocator<maze::Pathway*>::deallocate(maze::Pathway**, unsigned long) [131] std::_Iter_base<std::move_iterator<maze::Cell**>, true>::_S_base(std::move_iterator<maze::Cell**>) [164] std::__detail::_Node_iterator_base<std::pair<maze::Cell* const, unsigned int>, false>::_Node_iterator_base(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*)
 [239] __gnu_cxx::new_allocator<maze::Pathway*>::allocate(unsigned long, void const*) [147] std::_Iter_base<std::move_iterator<maze::Pathway**>, true>::_S_base(std::move_iterator<maze::Pathway**>) [125] std::__detail::_Node_const_iterator<maze::Cell*, true, false>::_Node_const_iterator(std::__detail::_Node_iterator<maze::Cell*, true, false> const&)
 [160] void __gnu_cxx::new_allocator<maze::Pathway*>::construct<maze::Pathway*, maze::Pathway* const&>(maze::Pathway**, maze::Pathway* const&) [235] maze::Cell* const& std::__pair_get<0ul>::__const_get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&) [472] std::__detail::_Prime_rehash_policy::_Prime_rehash_policy(float)
 [304] __gnu_cxx::new_allocator<maze::Pathway*>::new_allocator() [362] maze::Cell* const& std::__pair_get<0ul>::__get<maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&) [427] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>&)
 [305] __gnu_cxx::new_allocator<maze::Pathway*>::~new_allocator() [518] std::shared_ptr<maze::Maze>::shared_ptr(std::shared_ptr<maze::Maze> const&) [47] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true> const&)
 [155] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::deallocate(std::__detail::_Hash_node_base**, unsigned long) [606] std::shared_ptr<maze::Maze>::shared_ptr<maze::Maze>(maze::Maze*) [501] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>::_Hashtable_ebo_helper(std::__detail::_Select1st const&)
 [156] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::allocate(unsigned long, void const*) [489] std::shared_ptr<maze::Maze>::~shared_ptr() [259] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_get(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>&)
  [75] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::new_allocator() [607] std::shared_ptr<maze::Maze>::operator=(std::shared_ptr<maze::Maze>&&) [32] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true> const&)
  [76] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::~new_allocator() [608] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl(std::allocator<maze::Cell*>&&) [541] std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Identity, true>::_Hashtable_ebo_helper(std::__detail::_Identity const&)
 [508] __gnu_cxx::new_allocator<maze::Cell**>::deallocate(maze::Cell***, unsigned long) [609] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::_Deque_impl() [67] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true> const&)
 [509] __gnu_cxx::new_allocator<maze::Cell**>::allocate(unsigned long, void const*) [519] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_impl::~_Deque_impl() [473] std::__detail::_Hashtable_ebo_helper<0, std::equal_to<maze::Cell*>, true>::_Hashtable_ebo_helper(std::equal_to<maze::Cell*> const&)
 [478] __gnu_cxx::new_allocator<maze::Cell**>::new_allocator() [520] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_map(unsigned long) [22] std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true> const&)
 [479] __gnu_cxx::new_allocator<maze::Cell**>::~new_allocator() [521] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_nodes(maze::Cell***, maze::Cell***) [474] std::__detail::_Hashtable_ebo_helper<1, std::hash<maze::Cell*>, true>::_Hashtable_ebo_helper(std::hash<maze::Cell*> const&)
 [587] __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::new_allocator() [454] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate_node() [19] std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_S_cget(std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true> const&)
 [588] __gnu_cxx::new_allocator<std::pair<maze::Cell* const, maze::Pathway*> >::~new_allocator() [522] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_destroy_nodes(maze::Cell***, maze::Cell***) [475] std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>::_Hashtable_ebo_helper(std::__detail::_Mod_range_hashing const&)
 [445] __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [523] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_map(maze::Cell***, unsigned long) [291] std::__detail::_Mod<unsigned long, 4294967296ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [446] __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::allocate(unsigned long, void const*) [524] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_initialize_map(unsigned long) [293] std::__detail::_Mod<unsigned long, 624ul, 1ul, 0ul, true, true>::__calc(unsigned long)
 [404] _ZN9__gnu_cxx13new_allocatorISt6vectorIPN4maze4CellESaIS4_EEE9constructIS6_IRKS6_EEEvPT_DpOT0_ [455] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate_node(maze::Cell**) [292] unsigned long std::__detail::__mod<unsigned long, 4294967296ul, 1ul, 0ul>(unsigned long)
 [589] __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::new_allocator() [499] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [294] unsigned long std::__detail::__mod<unsigned long, 624ul, 1ul, 0ul>(unsigned long)
 [590] __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::~new_allocator() [610] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base(std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [201] std::__detail::_Insert<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true, true>::_Insert()
 [405] __gnu_cxx::__alloc_traits<std::allocator<maze::Cell*> >::_S_select_on_copy(std::allocator<maze::Cell*> const&) [611] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_Deque_base() [650] std::__detail::_Insert<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false, true>::_Insert()
 [153] __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::__normal_iterator(maze::Cell* const* const&) [525] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Deque_base() [202] std::__detail::_Equality<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true>, true>::_Equality()
  [59] __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway* const* const&) [612] std::_Mutex_base<(__gnu_cxx::_Lock_policy)2>::_Mutex_base() [651] std::__detail::_Equality<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::_Equality()
 [109] __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator--() [184] std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(maze::Cell* const&) [301] std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&)
 [260] __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::__normal_iterator(maze::Pathway** const&) [105] std::_Tuple_impl<0ul, maze::Cell* const&>::_M_head(std::_Tuple_impl<0ul, maze::Cell* const&>&) [118] std::__detail::_Map_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>::operator[](maze::Cell* const&)
 [121] __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator++() [185] std::_Tuple_impl<0ul, maze::Cell* const&>::_M_tail(std::_Tuple_impl<0ul, maze::Cell* const&>&) [213] bool std::__detail::operator==<maze::Cell*, false>(std::__detail::_Node_iterator_base<maze::Cell*, false> const&, std::__detail::_Node_iterator_base<maze::Cell*, false> const&)
 [497] long __gnu_cxx::__stoa<long, long, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [186] std::_Tuple_impl<0ul, maze::Cell* const&>::_Tuple_impl(std::_Tuple_impl<0ul, maze::Cell* const&>&&) [394] void std::_Construct<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >&&)
 [510] __gnu_cxx::__atomic_add_single(int*, int) (atomicity.h) [187] std::_Tuple_impl<1ul>::_Tuple_impl() [50] void std::__pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
 [511] __gnu_cxx::__atomic_add_dispatch(int*, int) (atomicity.h) [406] maze::Cell** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [351] std::pair<maze::Cell* const, maze::Pathway*>* std::__addressof<std::pair<maze::Cell* const, maze::Pathway*> >(std::pair<maze::Cell* const, maze::Pathway*>&)
 [480] __gnu_cxx::__exchange_and_add_single(int*, int) (atomicity.h) [218] maze::Cell** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Cell*>(maze::Cell* const*, maze::Cell* const*, maze::Cell**) [372] std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__addressof<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&)
 [481] __gnu_cxx::__exchange_and_add_dispatch(int*, int) (atomicity.h) [241] maze::Pathway** std::__copy_move<true, true, std::random_access_iterator_tag>::__copy_m<maze::Pathway*>(maze::Pathway* const*, maze::Pathway* const*, maze::Pathway**) [90] void std::__push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>)
 [591] bool __gnu_cxx::operator==<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&, __gnu_cxx::__normal_iterator<maze::Priority_and_cell const*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > > const&) [423] std::char_traits<char>::compare(char const*, char const*, unsigned long) [190] std::__add_ref<maze::Cell* const&>::type std::__get_helper<0ul, maze::Cell* const&>(std::_Tuple_impl<0ul, maze::Cell* const&>&)
 [284] bool __gnu_cxx::operator==<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [440] void std::_Destroy_aux<false>::__destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [383] std::_Miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__miter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >)
  [85] bool __gnu_cxx::operator==<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [138] void std::_Destroy_aux<true>::__destroy<maze::Cell**>(maze::Cell**, maze::Cell**) [135] std::_Miter_base<std::move_iterator<maze::Cell**> >::iterator_type std::__miter_base<std::move_iterator<maze::Cell**> >(std::move_iterator<maze::Cell**>)
 [106] bool __gnu_cxx::operator!=<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >(__gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&, __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > > const&) [174] void std::_Destroy_aux<true>::__destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**) [151] std::_Miter_base<std::move_iterator<maze::Pathway**> >::iterator_type std::__miter_base<std::move_iterator<maze::Pathway**> >(std::move_iterator<maze::Pathway**>)
  [41] __gnu_cxx::new_allocator<std::__detail::_Hash_node<maze::Cell*, false> >::max_size() const [397] std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_M_allocate(unsigned long) [384] std::_Niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::iterator_type std::__niter_base<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >)
 [339] __gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> >::max_size() const [92] std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::_Vector_impl&) [94] std::_Niter_base<maze::Cell**>::iterator_type std::__niter_base<maze::Cell**>(maze::Cell**)
  [91] __gnu_cxx::new_allocator<maze::Cell*>::max_size() const [216] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_allocate(unsigned long) [100] std::_Niter_base<maze::Pathway**>::iterator_type std::__niter_base<maze::Pathway**>(maze::Pathway**)
  [98] __gnu_cxx::new_allocator<maze::Pathway*>::max_size() const [389] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_M_swap_data(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl&) [15] void std::__adjust_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, long, long, maze::Priority_and_cell, std::less<maze::Priority_and_cell>)
 [157] __gnu_cxx::new_allocator<std::__detail::_Hash_node_base*>::max_size() const [407] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*> const&) [417] maze::Cell** std::__copy_move_a<false, maze::Cell* const*, maze::Cell**>(maze::Cell* const*, maze::Cell* const*, maze::Cell**)
 [512] __gnu_cxx::new_allocator<maze::Cell**>::max_size() const [390] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl(std::allocator<maze::Cell*>&&) [221] maze::Cell** std::__copy_move_a<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**)
 [422] __gnu_cxx::new_allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::max_size() const [255] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::_Vector_impl() [245] maze::Pathway** std::__copy_move_a<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**)
 [154] __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::base() const [230] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_impl::~_Vector_impl() [418] maze::Cell** std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
  [60] __gnu_cxx::__normal_iterator<maze::Pathway* const*, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const [139] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_deallocate(maze::Cell**, unsigned long) [222] maze::Cell** std::__copy_move_a2<true, maze::Cell**, maze::Cell**>(maze::Cell**, maze::Cell**, maze::Cell**)
  [30] __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator-(long const&) const [408] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_create_storage(unsigned long) [246] maze::Pathway** std::__copy_move_a2<true, maze::Pathway**, maze::Pathway**>(maze::Pathway**, maze::Pathway**, maze::Pathway**)
 [513] __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >::operator+(long const&) const [97] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() [385] std::__deque_buf_size(unsigned long)
  [64] __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::base() const [409] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(unsigned long, std::allocator<maze::Cell*> const&) [419] maze::Cell** std::uninitialized_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
 [122] __gnu_cxx::__normal_iterator<maze::Pathway**, std::vector<maze::Pathway*, std::allocator<maze::Pathway*> > >::operator*() const [256] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base() [223] maze::Cell** std::uninitialized_copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**)
  [96] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [391] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_Vector_base(std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >&&) [247] maze::Pathway** std::uninitialized_copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**)
  [73] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_before_begin() const [231] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::~_Vector_base() [459] std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::uninitialized_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  [36] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false>*) const [242] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_allocate(unsigned long) [420] maze::Cell** std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, maze::Cell*>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**, std::allocator<maze::Cell*>&)
  [78] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [308] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::_Vector_impl() [495] maze::Priority_and_cell* std::__uninitialized_copy_a<std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, maze::Priority_and_cell>(std::move_iterator<maze::Priority_and_cell*>, std::move_iterator<maze::Priority_and_cell*>, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&)
  [80] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [309] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_impl::~_Vector_impl() [224] maze::Cell** std::__uninitialized_copy_a<std::move_iterator<maze::Cell**>, maze::Cell**, maze::Cell*>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**, std::allocator<maze::Cell*>&)
 [108] std::_Hashtable<maze::Cell*, maze::Cell*, std::allocator<maze::Cell*>, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, true, true> >::_M_begin() const [175] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_deallocate(maze::Pathway**, unsigned long) [248] maze::Pathway** std::__uninitialized_copy_a<std::move_iterator<maze::Pathway**>, maze::Pathway**, maze::Pathway*>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**, std::allocator<maze::Pathway*>&)
 [297] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [116] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() [460] std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy_a<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&)
 [447] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_before_begin() const [310] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_Vector_base() [652] void std::__enable_shared_from_this_helper<(__gnu_cxx::_Lock_policy)2>(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&, ...)
 [302] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*) const [311] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::~_Vector_base() [496] std::move_iterator<maze::Priority_and_cell*> std::__make_move_if_noexcept_iterator<maze::Priority_and_cell*, std::move_iterator<maze::Priority_and_cell*> >(maze::Priority_and_cell*)
 [295] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_bucket_index(maze::Cell* const&, unsigned long) const [456] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_allocate(unsigned long) [136] std::move_iterator<maze::Cell**> std::__make_move_if_noexcept_iterator<maze::Cell**, std::move_iterator<maze::Cell**> >(maze::Cell**)
 [298] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [613] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::_Vector_impl() [152] std::move_iterator<maze::Pathway**> std::__make_move_if_noexcept_iterator<maze::Pathway**, std::move_iterator<maze::Pathway**> >(maze::Pathway**)
 [448] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [614] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_impl::~_Vector_impl() [436] std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> std::__make_move_if_noexcept_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
 [353] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_node(unsigned long, maze::Cell* const&, unsigned long) const [441] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_deallocate(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, unsigned long) [428] maze::Priority_and_cell* std::__uninitialized_move_if_noexcept_a<maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell> >(maze::Priority_and_cell*, maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&)
 [167] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_find_before_node(unsigned long, maze::Cell* const&, unsigned long) const [429] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() [225] maze::Cell** std::__uninitialized_move_if_noexcept_a<maze::Cell**, maze::Cell**, std::allocator<maze::Cell*> >(maze::Cell**, maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&)
  [55] std::_Hashtable<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_begin() const [615] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_Vector_base() [249] maze::Pathway** std::__uninitialized_move_if_noexcept_a<maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*> >(maze::Pathway**, maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&)
 [482] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [616] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::~_Vector_base() [461] std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_move_if_noexcept_a<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&)
 [483] std::_Deque_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_map_allocator() const [617] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&) [191] std::__add_ref<std::tuple_element<0ul, std::tuple<maze::Cell* const&> >::type>::type std::get<0ul, maze::Cell* const&>(std::tuple<maze::Cell* const&>&)
 [128] std::_Vector_base<maze::Cell*, std::allocator<maze::Cell*> >::_M_get_Tp_allocator() const [618] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [236] std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type const& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*> const&)
 [144] std::_Vector_base<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_get_Tp_allocator() const [526] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2> const&) [363] std::tuple_element<0ul, std::pair<maze::Cell* const, maze::Pathway*> >::type& std::get<0ul, maze::Cell* const, maze::Pathway*>(std::pair<maze::Cell* const, maze::Pathway*>&)
 [430] std::_Vector_base<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_get_Tp_allocator() const [619] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<maze::Maze>(maze::Maze*) [142] unsigned long const& std::max<unsigned long>(unsigned long const&, unsigned long const&)
 [592] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::get() const [620] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [421] maze::Cell** std::copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**)
  [74] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator->() const [490] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [226] maze::Cell** std::copy<std::move_iterator<maze::Cell**>, maze::Cell**>(std::move_iterator<maze::Cell**>, std::move_iterator<maze::Cell**>, maze::Cell**)
 [129] std::move_iterator<maze::Cell**>::base() const [621] std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>::operator=(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&&) [250] maze::Pathway** std::copy<std::move_iterator<maze::Pathway**>, maze::Pathway**>(std::move_iterator<maze::Pathway**>, std::move_iterator<maze::Pathway**>, maze::Pathway**)
 [145] std::move_iterator<maze::Pathway**>::base() const [132] std::move_iterator<maze::Cell**>::move_iterator(maze::Cell**) [352] std::remove_reference<maze::Priority_and_cell&>::type&& std::move<maze::Priority_and_cell&>(maze::Priority_and_cell&)
 [373] std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::base() const [148] std::move_iterator<maze::Pathway**>::move_iterator(maze::Pathway**) [357] std::remove_reference<maze::Priority_and_cell*&>::type&& std::move<maze::Priority_and_cell*&>(maze::Priority_and_cell*&)
 [388] std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator*() const [433] std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::move_iterator(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [542] std::remove_reference<maze::Cell*&>::type&& std::move<maze::Cell*&>(maze::Cell*&)
 [285] std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator*() const [392] std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>::operator++() [502] std::remove_reference<maze::Maze*&>::type&& std::move<maze::Maze*&>(maze::Maze*&)
  [20] std::hash<maze::Cell*>::operator()(maze::Cell* const&) const [320] std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::reserve(unsigned long) [369] std::remove_reference<maze::Cell**&>::type&& std::move<maze::Cell**&>(maze::Cell**&)
  [21] std::hash<unsigned long>::operator()(unsigned long) const [622] std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&) [503] std::remove_reference<maze::Cell***&>::type&& std::move<maze::Cell***&>(maze::Cell***&)
 [439] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::end() const [623] std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::~unordered_map() [377] std::remove_reference<std::allocator<maze::Cell*>&>::type&& std::move<std::allocator<maze::Cell*>&>(std::allocator<maze::Cell*>&)
 [426] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::size() const [300] std::unordered_map<maze::Cell*, maze::Pathway*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > >::operator[](maze::Cell* const&) [653] std::remove_reference<std::shared_ptr<maze::Maze>&>::type&& std::move<std::shared_ptr<maze::Maze>&>(std::shared_ptr<maze::Maze>&)
  [27] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::empty() const [269] std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::reserve(unsigned long) [192] std::remove_reference<std::_Tuple_impl<1ul>&>::type&& std::move<std::_Tuple_impl<1ul>&>(std::_Tuple_impl<1ul>&)
  [33] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::front() const [527] std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > > const&) [654] std::remove_reference<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>::type&& std::move<std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&>(std::__shared_ptr<maze::Maze, (__gnu_cxx::_Lock_policy)2>&)
 [484] std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >::max_size() const [208] std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::unordered_map(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<std::pair<maze::Cell* const, unsigned int> > const&) [462] std::remove_reference<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>::type&& std::move<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&>(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&)
 [217] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::_M_check_len(unsigned long, char const*) const [528] std::unordered_map<maze::Cell*, unsigned int, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<std::pair<maze::Cell* const, unsigned int> > >::~unordered_map() [543] std::remove_reference<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::deque<maze::Cell*, std::allocator<maze::Cell*> >&>(std::deque<maze::Cell*, std::allocator<maze::Cell*> >&)
 [253] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::end() const [209] std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::end() [378] std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>::type&& std::move<std::vector<maze::Cell*, std::allocator<maze::Cell*> >&>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >&)
  [62] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::size() const [124] std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::find(maze::Cell* const&) [504] std::remove_reference<unsigned long&>::type&& std::move<unsigned long&>(unsigned long&)
 [254] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::begin() const [277] std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::insert(maze::Cell* const&) [505] std::stol(std::string const&, unsigned long*, int)
 [286] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::empty() const [210] std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> > const&) [655] void std::swap<maze::Maze*>(maze::Maze*&, maze::Maze*&)
 [130] std::vector<maze::Cell*, std::allocator<maze::Cell*> >::max_size() const [529] std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::unordered_set(unsigned long, std::hash<maze::Cell*> const&, std::equal_to<maze::Cell*> const&, std::allocator<maze::Cell*> const&) [371] void std::swap<maze::Cell**>(maze::Cell**&, maze::Cell**&)
 [240] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::_M_check_len(unsigned long, char const*) const [198] std::unordered_set<maze::Cell*, std::hash<maze::Cell*>, std::equal_to<maze::Cell*>, std::allocator<maze::Cell*> >::~unordered_set() [656] void std::swap<maze::Cell***>(maze::Cell***&, maze::Cell***&)
  [86] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::end() const [530] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [544] void std::swap<std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> >(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&, std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>&)
  [63] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::size() const [531] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [657] void std::swap<unsigned long>(unsigned long&, unsigned long&)
  [87] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::begin() const [624] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [165] std::__detail::_Node_iterator<maze::Cell*, true, false>&& std::forward<std::__detail::_Node_iterator<maze::Cell*, true, false> >(std::remove_reference<std::__detail::_Node_iterator<maze::Cell*, true, false> >::type&)
  [88] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::empty() const [625] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<maze::Maze*>(maze::Maze*) [545] maze::Cell*&& std::forward<maze::Cell*>(std::remove_reference<maze::Cell*>::type&)
 [146] std::vector<maze::Pathway*, std::allocator<maze::Pathway*> >::max_size() const [467] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [13] maze::Cell* const& std::forward<maze::Cell* const&>(std::remove_reference<maze::Cell* const&>::type&)
 [449] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_M_check_len(unsigned long, char const*) const [56] std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::priority_queue(std::less<maze::Priority_and_cell> const&, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >&&) [61] maze::Pathway* const& std::forward<maze::Pathway* const&>(std::remove_reference<maze::Pathway* const&>::type&)
 [396] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::size() const [532] std::priority_queue<maze::Priority_and_cell, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> >, std::less<maze::Priority_and_cell> >::~priority_queue() [546] std::allocator<maze::Cell*> const& std::forward<std::allocator<maze::Cell*> const&>(std::remove_reference<std::allocator<maze::Cell*> const&>::type&)
 [431] std::vector<std::vector<maze::Cell*, std::allocator<maze::Cell*> >, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size() const [401] std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_M_set_node(maze::Cell***) [658] std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const& std::forward<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>(std::remove_reference<std::allocator<std::pair<maze::Cell* const, maze::Pathway*> > const&>::type&)
  [17] std::__detail::_Hash_node<maze::Cell*, false>::_M_next() const [402] std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_S_buffer_size() [70] std::piecewise_construct_t const& std::forward<std::piecewise_construct_t const&>(std::remove_reference<std::piecewise_construct_t const&>::type&)
 [171] std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>::_M_next() const [262] std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator(std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**> const&) [237] std::pair<maze::Cell* const, maze::Pathway*> const& std::forward<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*> const&>::type&)
 [233] decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*> const&>(std::pair<maze::Cell* const, maze::Pathway*> const&) const [491] std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::_Deque_iterator() [376] std::vector<maze::Cell*, std::allocator<maze::Cell*> > const& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > const&>::type&)
 [464] decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int> const&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int> const&>(std::pair<maze::Cell* const, unsigned int> const&) const [287] std::_Deque_iterator<maze::Cell*, maze::Cell*&, maze::Cell**>::operator--() [112] maze::Cell*& std::forward<maze::Cell*&>(std::remove_reference<maze::Cell*&>::type&)
 [361] decltype ((get<0>)((forward<std::pair<maze::Cell* const, maze::Pathway*>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, maze::Pathway*>&>(std::pair<maze::Cell* const, maze::Pathway*>&) const [626] std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [364] std::pair<maze::Cell* const, maze::Pathway*>& std::forward<std::pair<maze::Cell* const, maze::Pathway*>&>(std::remove_reference<std::pair<maze::Cell* const, maze::Pathway*>&>::type&)
  [52] decltype ((get<0>)((forward<std::pair<maze::Cell* const, unsigned int>&>)({parm#1}))) std::__detail::_Select1st::operator()<std::pair<maze::Cell* const, unsigned int>&>(std::pair<maze::Cell* const, unsigned int>&) const [627] std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [71] std::tuple<maze::Cell* const&>&& std::forward<std::tuple<maze::Cell* const&> >(std::remove_reference<std::tuple<maze::Cell* const&> >::type&)
 [267] std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::allocator<std::pair<maze::Cell* const, maze::Pathway*> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const [628] std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr(maze::Maze*) [72] std::tuple<>&& std::forward<std::tuple<> >(std::remove_reference<std::tuple<> >::type&)
 [290] std::__detail::_Rehash_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::allocator<std::pair<maze::Cell* const, unsigned int> >, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::max_load_factor() const [629] std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [395] std::vector<maze::Cell*, std::allocator<maze::Cell*> >&& std::forward<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::remove_reference<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >::type&)
 [340] std::__detail::_Node_iterator<std::pair<maze::Cell* const, maze::Pathway*>, false, false>::operator->() const [630] std::_Sp_counted_ptr<maze::Maze*, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr() [166] bool&& std::forward<bool>(std::remove_reference<bool>::type&)
  [31] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [500] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [463] void std::_Destroy<maze::Priority_and_cell*, maze::Priority_and_cell>(maze::Priority_and_cell*, maze::Priority_and_cell*, std::allocator<maze::Priority_and_cell>&)
  [45] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<maze::Cell*, false>*, std::__detail::_Hash_node<maze::Cell*, false> const*) const [533] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [140] void std::_Destroy<maze::Cell**>(maze::Cell**, maze::Cell**)
  [81] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [631] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [141] void std::_Destroy<maze::Cell**, maze::Cell*>(maze::Cell**, maze::Cell**, std::allocator<maze::Cell*>&)
 [273] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<maze::Cell*, false>*, unsigned long) const [632] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [176] void std::_Destroy<maze::Pathway**>(maze::Pathway**, maze::Pathway**)
  [35] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<maze::Cell*, false> const*, unsigned long) const [438] _ZNSt16allocator_traitsISaIN4maze17Priority_and_cellEEE12_S_constructIS1_IS1_EEENSt9enable_ifIXsrNS3_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS2_PS7_DpOS8_ [177] void std::_Destroy<maze::Pathway**, maze::Pathway*>(maze::Pathway**, maze::Pathway**, std::allocator<maze::Pathway*>&)
  [79] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [133] std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__maxsize_helper<std::allocator<maze::Cell*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_max_size<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [442] void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
  [29] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [179] std::enable_if<std::allocator_traits<std::allocator<maze::Cell*> >::__construct_helper<maze::Cell*, maze::Cell* const&>::value, void>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_construct<maze::Cell*, maze::Cell* const&>(std::allocator<maze::Cell*>&, maze::Cell**, maze::Cell* const&) [443] void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*, std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >&)
  [28] std::__detail::_Hash_code_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [410] std::allocator_traits<std::allocator<maze::Cell*> >::select_on_container_copy_construction(std::allocator<maze::Cell*> const&) [379] void std::_Destroy<std::vector<maze::Cell*, std::allocator<maze::Cell*> > >(std::vector<maze::Cell*, std::allocator<maze::Cell*> >*)
 [173] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [134] std::allocator_traits<std::allocator<maze::Cell*> >::max_size(std::allocator<maze::Cell*> const&) [272] void std::pop_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
 [299] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_hash_code(maze::Cell* const&) const [411] std::enable_if<!std::allocator_traits<std::allocator<maze::Cell*> >::__select_helper<std::allocator<maze::Cell*> const>::value, std::allocator<maze::Cell*> const>::type std::allocator_traits<std::allocator<maze::Cell*> >::_S_select<std::allocator<maze::Cell*> const>(std::allocator<maze::Cell*> const&) [101] void std::make_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
 [341] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_store_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false>*, unsigned long) const [180] _ZNSt16allocator_traitsISaIPN4maze4CellEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [282] std::pair<std::__decay_and_strip<std::__detail::_Node_iterator<maze::Cell*, true, false> >::__type, std::__decay_and_strip<bool>::__type> std::make_pair<std::__detail::_Node_iterator<maze::Cell*, true, false>, bool>(std::__detail::_Node_iterator<maze::Cell*, true, false>&&, bool&&)
 [234] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, maze::Pathway*>, false> const*, unsigned long) const [149] std::enable_if<std::allocator_traits<std::allocator<maze::Pathway*> >::__maxsize_helper<std::allocator<maze::Pathway*> const>::value, unsigned long>::type std::allocator_traits<std::allocator<maze::Pathway*> >::_S_max_size<std::allocator<maze::Pathway*> const>(std::allocator<maze::Pathway*> const&) [53] void std::push_heap<__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell> >(__gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, __gnu_cxx::__normal_iterator<maze::Priority_and_cell*, std::vector<maze::Priority_and_cell, std::allocator<maze::Priority_and_cell> > >, std::less<maze::Priority_and_cell>)
 [296] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [161] _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE12_S_constructIS2_IRKS2_EEENSt9enable_ifIXsrNS4_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS3_PSA_DpOSB_ [386] bool std::operator==<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&)
 [170] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h1() const [150] std::allocator_traits<std::allocator<maze::Pathway*> >::max_size(std::allocator<maze::Pathway*> const&) [424] __gnu_cxx::__enable_if<std::__is_char<char>::__value, bool>::__type std::operator==<char>(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
 [169] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_h2() const [162] _ZNSt16allocator_traitsISaIPN4maze7PathwayEEE9constructIS2_IRKS2_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS3_PT_DpOS8_ [547] bool std::operator==<char, std::char_traits<char>, std::allocator<char> >(std::basic_string<char, std::char_traits<char>, std::allocator<char> > const&, char const*)
 [398] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_extract() const [434] std::enable_if<std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::__maxsize_helper<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>::value, unsigned long>::type std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::_S_max_size<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const>(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [387] bool std::operator!=<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*> const&)
 [368] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_copy_code(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false>*, std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*) const [412] _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE12_S_constructIS5_IRKS5_EEENSt9enable_ifIXsrNS7_18__construct_helperIT_IDpT0_EEE5valueEvE4typeERS6_PSD_DpOSE_ [659] std::operator|(std::_Ios_Openmode, std::_Ios_Openmode)
 [437] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(std::__detail::_Hash_node<std::pair<maze::Cell* const, unsigned int>, false> const*, unsigned long) const [435] std::allocator_traits<std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > >::max_size(std::allocator<std::vector<maze::Cell*, std::allocator<maze::Cell*> > > const&) [24] operator new(unsigned long, void*)
 [205] std::__detail::_Hash_code_base<maze::Cell*, std::pair<maze::Cell* const, unsigned int>, std::__detail::_Select1st, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>::_M_bucket_index(maze::Cell* const&, unsigned long, unsigned long) const [413] _ZNSt16allocator_traitsISaISt6vectorIPN4maze4CellESaIS3_EEEE9constructIS5_IRKS5_EEEDTcl12_S_constructfp_fp0_spcl7forwardIT0_Efp1_EEERS6_PT_DpOSB_ [1] <cycle 1>
 [113] std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_eq() const [468] std::__allow_copy_cons<true>::__allow_copy_cons() [2] <cycle 2>
 [114] std::__detail::_Hashtable_base<maze::Cell*, maze::Cell*, std::__detail::_Identity, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, true, true> >::_M_equals(maze::Cell* const&, unsigned long, std::__detail::_Hash_node<maze::Cell*, false>*) const [457] std::vector<maze::Cell*, std::allocator<maze::Cell*> >* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>(std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::move_iterator<std::vector<maze::Cell*, std::allocator<maze::Cell*> >*>, std::vector<maze::Cell*, std::allocator<maze::Cell*> >*) [3] <cycle 3>
 [365] std::__detail::_Hashtable_base<maze::Cell*, std::pair<maze::Cell* const, maze::Pathway*>, std::__detail::_Select1st, std::equal_to<maze::Cell*>, std::hash<maze::Cell*>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >::_M_eq() const [414] maze::Cell** std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**>(__gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, __gnu_cxx::__normal_iterator<maze::Cell* const*, std::vector<maze::Cell*, std::allocator<maze::Cell*> > >, maze::Cell**) [4] <cycle 4>
